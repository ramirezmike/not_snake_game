{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wgpu","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=33277537b94babc3","-C","extra-filename=-33277537b94babc3","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","arrayvec=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libarrayvec-bcf92677d7fdc02d.rmeta","--extern","parking_lot=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libparking_lot-7a0eedc39faf7a68.rmeta","--extern","raw_window_handle=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libraw_window_handle-5e283c1691b07185.rmeta","--extern","smallvec=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libsmallvec-481be03632c75397.rmeta","--extern","tracing=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libtracing-10e4b4201d6a794d.rmeta","--extern","wgc=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libwgpu_core-ada7800a7975a383.rmeta","--extern","wgt=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libwgpu_types-9c8fe0ddc8b2dadd.rmeta","--cap-lints","allow","-L","native=/home/mramirez/code/projects/games/bug_game/target/rls/debug/build/spirv_cross-ecdc77c54eb7262a/out","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libwgpu-33277537b94babc3.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[6847282227579006812,17199827766431857112]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":19,"id":{"name":"arrayvec","disambiguator":[3102824243478571107,8481234625755273784]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":20,"id":{"name":"parking_lot","disambiguator":[3894759868336387025,8072076019355388178]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":21,"id":{"name":"instant","disambiguator":[2494301214941809838,3417201065660113335]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":22,"id":{"name":"cfg_if","disambiguator":[3051334588151808042,8832791441195491324]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":23,"id":{"name":"time","disambiguator":[16519224481542627666,17944326992154206493]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":24,"id":{"name":"const_fn","disambiguator":[2777252313191701291,1017343796442275934]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":25,"id":{"name":"standback","disambiguator":[1588321579415658865,5592685596715400632]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":26,"id":{"name":"time_macros","disambiguator":[9388189040968802315,10595252542461141236]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":27,"id":{"name":"proc_macro_hack","disambiguator":[16895374442432975484,12510436695677007252]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":28,"id":{"name":"time_macros_impl","disambiguator":[5613590041393428902,4471233575065558911]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":29,"id":{"name":"lock_api","disambiguator":[6843516370768696030,17695751663174820022]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":30,"id":{"name":"scopeguard","disambiguator":[12809663318761188287,17456442378003341401]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":31,"id":{"name":"parking_lot_core","disambiguator":[2008067363701943934,5547810312261868722]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":32,"id":{"name":"smallvec","disambiguator":[4354219136568904731,3102245834082659568]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":33,"id":{"name":"serde","disambiguator":[374628057754048923,1558107205218065689]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":34,"id":{"name":"serde_derive","disambiguator":[14794970942164483416,15421136565882532469]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":35,"id":{"name":"libc","disambiguator":[18406178008256737583,6506690069580327237]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":36,"id":{"name":"wgpu_core","disambiguator":[624225241849753438,8658606032079755434]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":37,"id":{"name":"gfx_backend_empty","disambiguator":[6377625628153133481,738217724529959851]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":38,"id":{"name":"gfx_hal","disambiguator":[8828984109774290376,9137775165702316504]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":39,"id":{"name":"bitflags","disambiguator":[13397336182039615717,16087761768397167672]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":40,"id":{"name":"thiserror","disambiguator":[2205512963606995726,5152328715464138865]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":41,"id":{"name":"thiserror_impl","disambiguator":[3048880832107397393,15433919117434819417]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":42,"id":{"name":"naga","disambiguator":[5106403883123171278,10544305422277642895]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":43,"id":{"name":"spirv_headers","disambiguator":[4440022559321819747,17947104322996726087]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":44,"id":{"name":"num_traits","disambiguator":[252308066493949436,2163249747488123429]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":45,"id":{"name":"petgraph","disambiguator":[1608358839161402569,625720476303738642]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":46,"id":{"name":"fixedbitset","disambiguator":[17266127087240835524,10087726882440464653]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":47,"id":{"name":"indexmap","disambiguator":[5828254732639855931,9406981498523653207]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":48,"id":{"name":"hashbrown","disambiguator":[8298503007030453831,6187886020237225386]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":49,"id":{"name":"ahash","disambiguator":[8167947935135209263,11163943892117107900]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":50,"id":{"name":"bit_set","disambiguator":[6370869751160875217,8183669224277818769]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":51,"id":{"name":"bit_vec","disambiguator":[1631992315532329730,10908655395390977164]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":52,"id":{"name":"log","disambiguator":[3410414810508890113,15122554718325273992]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":53,"id":{"name":"fxhash","disambiguator":[12179643530549644737,5720268790445742921]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":54,"id":{"name":"byteorder","disambiguator":[13778836417791981908,11302133446922456731]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":55,"id":{"name":"raw_window_handle","disambiguator":[9780639447689656874,2824686148409801030]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":56,"id":{"name":"gfx_backend_gl","disambiguator":[18102225192212293037,14004932579191659813]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":57,"id":{"name":"gfx_auxil","disambiguator":[8952270952663462083,16804490774667861440]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":58,"id":{"name":"spirv_cross","disambiguator":[18088449929437694506,16270611446156908020]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":59,"id":{"name":"glow","disambiguator":[4682068890482489595,7939527845126801457]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":60,"id":{"name":"libloading","disambiguator":[12879572329737286083,12783662760972673898]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":61,"id":{"name":"khronos_egl","disambiguator":[13395850726701043308,5293602688197417910]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":62,"id":{"name":"gfx_backend_vulkan","disambiguator":[9226802894182227741,11989070871107469656]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":63,"id":{"name":"ash","disambiguator":[806951897977881409,7594115695382346051]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":64,"id":{"name":"inplace_it","disambiguator":[13384111347645068146,9297113210892384510]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","num":65,"id":{"name":"wgpu_types","disambiguator":[3511552643318775113,2702925385038266429]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":66,"id":{"name":"copyless","disambiguator":[18213170500379842704,5191688360107602451]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":67,"id":{"name":"gpu_descriptor","disambiguator":[11394354805048824416,12008165698644882169]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":68,"id":{"name":"gpu_descriptor_types","disambiguator":[5559496534818151264,15232557236583997928]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-core-0.7.1/src/lib.rs","num":69,"id":{"name":"tracing","disambiguator":[14000020229970339443,16367903352756430514]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":70,"id":{"name":"tracing_core","disambiguator":[1742186309644182469,11555342958321315030]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":71,"id":{"name":"lazy_static","disambiguator":[15466199229247140558,14835071783094180148]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":72,"id":{"name":"tracing_attributes","disambiguator":[14997301913596707437,3977426381214747717]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":73,"id":{"name":"pin_project_lite","disambiguator":[6144937164719879073,13915319145604991269]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":74,"id":{"name":"gpu_alloc","disambiguator":[12435574007513487082,5057551840496549492]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","num":75,"id":{"name":"gpu_alloc_types","disambiguator":[6812523506171579749,13468622092179296163]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":0,"byte_end":102778,"line_start":1,"line_end":2876,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182148,"byte_end":182159,"line_start":13,"line_end":13,"column_start":15,"column_end":26},"alias_span":null,"name":"StagingBelt","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182178,"byte_end":182198,"line_start":14,"line_end":14,"column_start":18,"column_end":38},"alias_span":null,"name":"BufferInitDescriptor","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182200,"byte_end":182209,"line_start":14,"line_end":14,"column_start":40,"column_end":49},"alias_span":null,"name":"DeviceExt","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182229,"byte_end":182242,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"alias_span":null,"name":"RenderEncoder","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":65,"index":575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":587,"byte_end":598,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":600,"byte_end":611,"line_start":28,"line_end":28,"column_start":18,"column_end":29},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":613,"byte_end":620,"line_start":28,"line_end":28,"column_start":31,"column_end":38},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":622,"byte_end":632,"line_start":28,"line_end":28,"column_start":40,"column_end":50},"alias_span":null,"name":"BackendBit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":634,"byte_end":654,"line_start":28,"line_end":28,"column_start":52,"column_end":72},"alias_span":null,"name":"BindGroupLayoutEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":656,"byte_end":667,"line_start":28,"line_end":28,"column_start":74,"column_end":85},"alias_span":null,"name":"BindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":669,"byte_end":680,"line_start":28,"line_end":28,"column_start":87,"column_end":98},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":870},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":686,"byte_end":700,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":900},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":702,"byte_end":712,"line_start":29,"line_end":29,"column_start":21,"column_end":31},"alias_span":null,"name":"BlendState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":10},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":714,"byte_end":727,"line_start":29,"line_end":29,"column_start":33,"column_end":46},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":729,"byte_end":746,"line_start":29,"line_end":29,"column_start":48,"column_end":65},"alias_span":null,"name":"BufferBindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":11},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":748,"byte_end":758,"line_start":29,"line_end":29,"column_start":67,"column_end":77},"alias_span":null,"name":"BufferSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1907},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":760,"byte_end":771,"line_start":29,"line_end":29,"column_start":79,"column_end":90},"alias_span":null,"name":"BufferUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":773,"byte_end":778,"line_start":29,"line_end":29,"column_start":92,"column_end":97},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":918},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":784,"byte_end":800,"line_start":30,"line_end":30,"column_start":5,"column_end":21},"alias_span":null,"name":"ColorTargetState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1476},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":802,"byte_end":812,"line_start":30,"line_end":30,"column_start":23,"column_end":33},"alias_span":null,"name":"ColorWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":814,"byte_end":837,"line_start":30,"line_end":30,"column_start":35,"column_end":58},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":839,"byte_end":854,"line_start":30,"line_end":30,"column_start":60,"column_end":75},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":856,"byte_end":864,"line_start":30,"line_end":30,"column_start":77,"column_end":85},"alias_span":null,"name":"CullMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":870,"byte_end":884,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"alias_span":null,"name":"DepthBiasState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1618},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":886,"byte_end":903,"line_start":31,"line_end":31,"column_start":21,"column_end":38},"alias_span":null,"name":"DepthStencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":905,"byte_end":915,"line_start":31,"line_end":31,"column_start":40,"column_end":50},"alias_span":null,"name":"DeviceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":13},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":917,"byte_end":930,"line_start":31,"line_end":31,"column_start":52,"column_end":65},"alias_span":null,"name":"DynamicOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":932,"byte_end":940,"line_start":31,"line_end":31,"column_start":67,"column_end":75},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":942,"byte_end":950,"line_start":31,"line_end":31,"column_start":77,"column_end":85},"alias_span":null,"name":"Features","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2392},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":952,"byte_end":962,"line_start":31,"line_end":31,"column_start":87,"column_end":97},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":968,"byte_end":977,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":979,"byte_end":990,"line_start":32,"line_end":32,"column_start":16,"column_end":27},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":992,"byte_end":1005,"line_start":32,"line_end":32,"column_start":29,"column_end":42},"alias_span":null,"name":"InputStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1007,"byte_end":1013,"line_start":32,"line_end":32,"column_start":44,"column_end":50},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1052},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1015,"byte_end":1031,"line_start":32,"line_end":32,"column_start":52,"column_end":68},"alias_span":null,"name":"MultisampleState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1033,"byte_end":1041,"line_start":32,"line_end":32,"column_start":70,"column_end":78},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1047,"byte_end":1070,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"alias_span":null,"name":"PipelineStatisticsTypes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1012},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1072,"byte_end":1083,"line_start":33,"line_end":33,"column_start":30,"column_end":41},"alias_span":null,"name":"PolygonMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1085,"byte_end":1100,"line_start":33,"line_end":33,"column_start":43,"column_end":58},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2080},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1102,"byte_end":1113,"line_start":33,"line_end":33,"column_start":60,"column_end":71},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1036},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1115,"byte_end":1129,"line_start":33,"line_end":33,"column_start":73,"column_end":87},"alias_span":null,"name":"PrimitiveState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":937},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1135,"byte_end":1152,"line_start":34,"line_end":34,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1154,"byte_end":1171,"line_start":34,"line_end":34,"column_start":24,"column_end":41},"alias_span":null,"name":"PushConstantRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1173,"byte_end":1191,"line_start":34,"line_end":34,"column_start":43,"column_end":61},"alias_span":null,"name":"QuerySetDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1193,"byte_end":1202,"line_start":34,"line_end":34,"column_start":63,"column_end":72},"alias_span":null,"name":"QueryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1204,"byte_end":1222,"line_start":34,"line_end":34,"column_start":74,"column_end":92},"alias_span":null,"name":"SamplerBorderColor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":702},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1228,"byte_end":1239,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"alias_span":null,"name":"ShaderFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":12},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1241,"byte_end":1255,"line_start":35,"line_end":35,"column_start":18,"column_end":32},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":603},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1257,"byte_end":1268,"line_start":35,"line_end":35,"column_start":34,"column_end":45},"alias_span":null,"name":"ShaderStage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1693},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1270,"byte_end":1286,"line_start":35,"line_end":35,"column_start":47,"column_end":63},"alias_span":null,"name":"StencilFaceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1288,"byte_end":1304,"line_start":35,"line_end":35,"column_start":65,"column_end":81},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1583},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1306,"byte_end":1318,"line_start":35,"line_end":35,"column_start":83,"column_end":95},"alias_span":null,"name":"StencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2535},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1324,"byte_end":1344,"line_start":36,"line_end":36,"column_start":5,"column_end":25},"alias_span":null,"name":"StorageTextureAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1346,"byte_end":1365,"line_start":36,"line_end":36,"column_start":27,"column_end":46},"alias_span":null,"name":"SwapChainDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1367,"byte_end":1382,"line_start":36,"line_end":36,"column_start":48,"column_end":63},"alias_span":null,"name":"SwapChainStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2344},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1384,"byte_end":1397,"line_start":36,"line_end":36,"column_start":65,"column_end":78},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2481},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1399,"byte_end":1416,"line_start":36,"line_end":36,"column_start":80,"column_end":97},"alias_span":null,"name":"TextureDataLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1422,"byte_end":1438,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1191},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1440,"byte_end":1453,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2511},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1455,"byte_end":1472,"line_start":37,"line_end":37,"column_start":38,"column_end":55},"alias_span":null,"name":"TextureSampleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2104},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1474,"byte_end":1486,"line_start":37,"line_end":37,"column_start":57,"column_end":69},"alias_span":null,"name":"TextureUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1488,"byte_end":1508,"line_start":37,"line_end":37,"column_start":71,"column_end":91},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1514,"byte_end":1529,"line_start":38,"line_end":38,"column_start":5,"column_end":20},"alias_span":null,"name":"VertexAttribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":1790},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1531,"byte_end":1543,"line_start":38,"line_end":38,"column_start":22,"column_end":34},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":15},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1545,"byte_end":1566,"line_start":38,"line_end":38,"column_start":36,"column_end":57},"alias_span":null,"name":"BIND_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":16},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1568,"byte_end":1589,"line_start":38,"line_end":38,"column_start":59,"column_end":80},"alias_span":null,"name":"COPY_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":14},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1595,"byte_end":1623,"line_start":39,"line_end":39,"column_start":5,"column_end":33},"alias_span":null,"name":"COPY_BYTES_PER_ROW_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":18},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":1625,"byte_end":1648,"line_start":39,"line_end":39,"column_start":35,"column_end":58},"alias_span":null,"name":"PUSH_CONSTANT_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33640,"byte_end":33661,"line_start":1027,"line_end":1027,"column_start":14,"column_end":35},"alias_span":null,"name":"RequestAdapterOptionsBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43383,"byte_end":43397,"line_start":1243,"line_end":1243,"column_start":14,"column_end":28},"alias_span":null,"name":"BufferCopyViewBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":2616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43563,"byte_end":43578,"line_start":1247,"line_end":1247,"column_start":14,"column_end":29},"alias_span":null,"name":"TextureCopyViewBase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":0,"byte_end":102778,"line_start":1,"line_end":2876,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":469},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":913},{"krate":0,"index":928},{"krate":0,"index":943},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1045},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1519},{"krate":0,"index":1047},{"krate":0,"index":1521},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1053},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1055},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1057},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1059},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1071},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1076},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1086},{"krate":0,"index":1603},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1095},{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1098},{"krate":0,"index":1720},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1742},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1767},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1118},{"krate":0,"index":1804},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1831},{"krate":0,"index":1835},{"krate":0,"index":1839},{"krate":0,"index":1843},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1869},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1930},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1144},{"krate":0,"index":1155},{"krate":0,"index":1174},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":2023},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":2036},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2048},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1209},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":2051},{"krate":0,"index":2057},{"krate":0,"index":1331},{"krate":0,"index":1333}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","sig":null,"attributes":[{"value":"/ A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":0,"byte_end":102,"line_start":1,"line_end":1,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":103,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To start using the API, create an [`Instance`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":107,"byte_end":158,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"warn(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":252,"byte_end":274,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":469},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":545},{"krate":0,"index":555},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648}],"decl_id":null,"docs":" Utility structures and functions.\n","sig":null,"attributes":[{"value":"/ Utility structures and functions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":181967,"byte_end":182004,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185382,"byte_end":185393,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"StagingBelt","qualname":"::util::belt::StagingBelt","value":"StagingBelt {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Staging belt is a machine that uploads data.","sig":null,"attributes":[{"value":"/ Staging belt is a machine that uploads data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":184842,"byte_end":184890,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":184891,"byte_end":184894,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Internally it uses a ring-buffer of staging buffers that are sub-allocated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":184895,"byte_end":184974,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ It has an advantage over `Queue.write_buffer` in a way that it returns a mutable slice,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":184975,"byte_end":185066,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/ which you can fill to avoid an extra data copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185067,"byte_end":185118,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185119,"byte_end":185122,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Using a staging belt is slightly complicated, and generally goes as follows:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185123,"byte_end":185203,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ - Write to buffers that need writing to using `write_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185204,"byte_end":185269,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ - Call `finish`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185270,"byte_end":185290,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/ - Submit all command encoders used with `write_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185291,"byte_end":185350,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/ - Call `recall`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185351,"byte_end":185370,"line_start":57,"line_end":57,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186061,"byte_end":186064,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<StagingBelt>::new","value":"pub fn new(BufferAddress) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new staging belt.","sig":null,"attributes":[{"value":"/ Create a new staging belt.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185812,"byte_end":185842,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185847,"byte_end":185850,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The `chunk_size` is the unit of internal buffer allocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185855,"byte_end":185918,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ It's better when it's big, but ideally still 1-4 times less than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185923,"byte_end":185991,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ the total amount of data uploaded per submission.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185996,"byte_end":186049,"line_start":75,"line_end":75,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186678,"byte_end":186690,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<StagingBelt>::write_buffer","value":"pub fn write_buffer(&mut Self, &mut CommandEncoder, &Buffer, BufferAddress,\n                    BufferSize, &Device) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Allocate the staging belt slice of `size` to be uploaded into the `target` buffer\n at the specified offset.","sig":null,"attributes":[{"value":"/ Allocate the staging belt slice of `size` to be uploaded into the `target` buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186376,"byte_end":186461,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ at the specified offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186466,"byte_end":186494,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186499,"byte_end":186502,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The upload will be placed into the provided command encoder. This encoder","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186507,"byte_end":186584,"line_start":91,"line_end":91,"column_start":5,"column_end":82}},{"value":"/ must be submitted after `finish` is called and before `recall` is called.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":186589,"byte_end":186666,"line_start":92,"line_end":92,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188667,"byte_end":188673,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"finish","qualname":"<StagingBelt>::finish","value":"pub fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prepare currently mapped buffers for use in a submission.","sig":null,"attributes":[{"value":"/ Prepare currently mapped buffers for use in a submission.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188455,"byte_end":188516,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188521,"byte_end":188524,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ At this point, all the partially used staging buffers are closed until","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188529,"byte_end":188603,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ the GPU is done copying the data from them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188608,"byte_end":188655,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":189111,"byte_end":189117,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"recall","qualname":"<StagingBelt>::recall","value":"pub fn recall(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recall all of the closed buffers back to be reused.","sig":null,"attributes":[{"value":"/ Recall all of the closed buffers back to be reused.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188938,"byte_end":188993,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":188998,"byte_end":189001,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This has to be called after the command encoders written to `write_buffer` are submitted!","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":189006,"byte_end":189099,"line_start":162,"line_end":162,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190091,"byte_end":190111,"line_start":5,"line_end":5,"column_start":12,"column_end":32},"name":"BufferInitDescriptor","qualname":"::util::device::BufferInitDescriptor","value":"BufferInitDescriptor { label, contents, usage }","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"decl_id":null,"docs":" Describes a [Buffer](crate::Buffer) when allocating.\n","sig":null,"attributes":[{"value":"/ Describes a [Buffer](crate::Buffer) when allocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":189978,"byte_end":190034,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1461},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190224,"byte_end":190229,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"label","qualname":"::util::device::BufferInitDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Debug label of a buffer. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of a buffer. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190122,"byte_end":190215,"line_start":6,"line_end":6,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190298,"byte_end":190306,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"name":"contents","qualname":"::util::device::BufferInitDescriptor::contents","value":"&'a [u8]","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Contents of a buffer on creation.\n","sig":null,"attributes":[{"value":"/ Contents of a buffer on creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190252,"byte_end":190289,"line_start":8,"line_end":8,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1463},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190448,"byte_end":190453,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"usage","qualname":"::util::device::BufferInitDescriptor::usage","value":"wgpu_types::BufferUsage","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation\n will panic.\n","sig":null,"attributes":[{"value":"/ Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190322,"byte_end":190419,"line_start":10,"line_end":10,"column_start":5,"column_end":102}},{"value":"/ will panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190424,"byte_end":190439,"line_start":11,"line_end":11,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190541,"byte_end":190550,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"DeviceExt","qualname":"::util::device::DeviceExt","value":"DeviceExt","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Utility methods not meant to be in the main API.\n","sig":null,"attributes":[{"value":"/ Utility methods not meant to be in the main API.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190478,"byte_end":190530,"line_start":15,"line_end":15,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190630,"byte_end":190648,"line_start":18,"line_end":18,"column_start":8,"column_end":26},"name":"create_buffer_init","qualname":"::util::device::DeviceExt::create_buffer_init","value":"pub fn create_buffer_init(&Self, &BufferInitDescriptor) -> crate::Buffer","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Creates a [Buffer](crate::Buffer) with data to initialize it.\n","sig":null,"attributes":[{"value":"/ Creates a [Buffer](crate::Buffer) with data to initialize it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190557,"byte_end":190622,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191114,"byte_end":191138,"line_start":29,"line_end":29,"column_start":8,"column_end":32},"name":"create_texture_with_data","qualname":"::util::device::DeviceExt::create_texture_with_data","value":"pub fn create_texture_with_data(&Self, &crate::Queue,\n                                &crate::TextureDescriptor, &[u8])\n-> crate::Texture","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Upload an entire texture and its mipmaps from a source buffer.","sig":null,"attributes":[{"value":"/ Upload an entire texture and its mipmaps from a source buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190708,"byte_end":190774,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190779,"byte_end":190782,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Expects all mipmaps to be tightly packed in the data buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190787,"byte_end":190851,"line_start":22,"line_end":22,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190856,"byte_end":190859,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If the texture is a 2DArray texture, uploads each layer in order, expecting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190864,"byte_end":190943,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ each layer and its mips to be tightly packed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":190948,"byte_end":190997,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191002,"byte_end":191005,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191010,"byte_end":191022,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/ Layer0Mip0 Layer0Mip1 Layer0Mip2 ... Layer1Mip0 Layer1Mip1 Layer1Mip2 ...  ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191027,"byte_end":191106,"line_start":28,"line_end":28,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195171,"byte_end":195184,"line_start":8,"line_end":8,"column_start":11,"column_end":24},"name":"RenderEncoder","qualname":"::util::encoder::RenderEncoder","value":"RenderEncoder<'a>","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" Methods shared by `RenderPass` and `RenderBundleEncoder`\n","sig":null,"attributes":[{"value":"/ Methods shared by `RenderPass` and `RenderBundleEncoder`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195100,"byte_end":195160,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195495,"byte_end":195509,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"set_bind_group","qualname":"::util::encoder::RenderEncoder::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195195,"byte_end":195277,"line_start":9,"line_end":9,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195282,"byte_end":195387,"line_start":10,"line_end":10,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195392,"byte_end":195395,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195400,"byte_end":195487,"line_start":12,"line_end":12,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195724,"byte_end":195736,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"set_pipeline","qualname":"::util::encoder::RenderEncoder::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195593,"byte_end":195629,"line_start":15,"line_end":15,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195634,"byte_end":195637,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195642,"byte_end":195716,"line_start":17,"line_end":17,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195999,"byte_end":196015,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"set_index_buffer","qualname":"::util::encoder::RenderEncoder::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195784,"byte_end":195817,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195822,"byte_end":195825,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderBundleEncoder::draw_indexed) on this [`RenderBundleEncoder`] will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195830,"byte_end":195942,"line_start":22,"line_end":22,"column_start":5,"column_end":117}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":195947,"byte_end":195991,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196581,"byte_end":196598,"line_start":36,"line_end":36,"column_start":8,"column_end":25},"name":"set_vertex_buffer","qualname":"::util::encoder::RenderEncoder::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196091,"byte_end":196128,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196133,"byte_end":196136,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196141,"byte_end":196202,"line_start":28,"line_end":28,"column_start":5,"column_end":66}},{"value":"/ [`RenderBundleEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196207,"byte_end":196289,"line_start":29,"line_end":29,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196294,"byte_end":196297,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196302,"byte_end":196366,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/ [VertexStateDescriptor::vertex_buffers](crate::VertexStateDescriptor::vertex_buffers).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196371,"byte_end":196461,"line_start":32,"line_end":32,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196466,"byte_end":196469,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderBundleEncoder::draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196474,"byte_end":196513,"line_start":34,"line_end":34,"column_start":5,"column_end":44}},{"value":"/ [`draw_indexed`]: RenderBundleEncoder::draw_indexed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196518,"byte_end":196573,"line_start":35,"line_end":35,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196822,"byte_end":196826,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"draw","qualname":"::util::encoder::RenderEncoder::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196658,"byte_end":196712,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196717,"byte_end":196720,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196725,"byte_end":196814,"line_start":40,"line_end":40,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197185,"byte_end":197197,"line_start":47,"line_end":47,"column_start":8,"column_end":20},"name":"draw_indexed","qualname":"::util::encoder::RenderEncoder::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196889,"byte_end":196978,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196983,"byte_end":196986,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":196991,"byte_end":197094,"line_start":45,"line_end":45,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197099,"byte_end":197177,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197950,"byte_end":197963,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"draw_indirect","qualname":"::util::encoder::RenderEncoder::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197277,"byte_end":197378,"line_start":49,"line_end":49,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197383,"byte_end":197386,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197391,"byte_end":197480,"line_start":51,"line_end":51,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197485,"byte_end":197488,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197493,"byte_end":197558,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197563,"byte_end":197566,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197571,"byte_end":197582,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197587,"byte_end":197601,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197606,"byte_end":197631,"line_start":57,"line_end":57,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197636,"byte_end":197697,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197702,"byte_end":197766,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197771,"byte_end":197838,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197843,"byte_end":197920,"line_start":61,"line_end":61,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197925,"byte_end":197930,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":197935,"byte_end":197942,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198974,"byte_end":198995,"line_start":84,"line_end":84,"column_start":8,"column_end":29},"name":"draw_indexed_indirect","qualname":"::util::encoder::RenderEncoder::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198042,"byte_end":198131,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198136,"byte_end":198187,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198192,"byte_end":198195,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198200,"byte_end":198303,"line_start":69,"line_end":69,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198308,"byte_end":198386,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198391,"byte_end":198394,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198399,"byte_end":198464,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198469,"byte_end":198472,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198477,"byte_end":198488,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198493,"byte_end":198507,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198512,"byte_end":198544,"line_start":76,"line_end":76,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198549,"byte_end":198610,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198615,"byte_end":198679,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198684,"byte_end":198751,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198756,"byte_end":198862,"line_start":80,"line_end":80,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198867,"byte_end":198944,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198949,"byte_end":198954,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":198959,"byte_end":198966,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200428,"byte_end":200446,"line_start":120,"line_end":120,"column_start":8,"column_end":26},"name":"set_push_constants","qualname":"::util::encoder::RenderEncoder::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStage, u32, &[u8])","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","sig":null,"attributes":[{"value":"/ [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199105,"byte_end":199204,"line_start":90,"line_end":90,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199209,"byte_end":199212,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Set push constant data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199217,"byte_end":199244,"line_start":92,"line_end":92,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199249,"byte_end":199252,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`wgt::PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199257,"byte_end":199349,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199354,"byte_end":199357,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199362,"byte_end":199458,"line_start":96,"line_end":96,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199463,"byte_end":199556,"line_start":97,"line_end":97,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199561,"byte_end":199574,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199579,"byte_end":199582,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199587,"byte_end":199693,"line_start":100,"line_end":100,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199698,"byte_end":199803,"line_start":101,"line_end":101,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199808,"byte_end":199838,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199843,"byte_end":199846,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199851,"byte_end":199862,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199867,"byte_end":199892,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199897,"byte_end":199914,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199919,"byte_end":199938,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199943,"byte_end":199950,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199955,"byte_end":199958,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":199963,"byte_end":200092,"line_start":110,"line_end":110,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200097,"byte_end":200100,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200105,"byte_end":200116,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200121,"byte_end":200146,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200151,"byte_end":200169,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200174,"byte_end":200194,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200199,"byte_end":200206,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200211,"byte_end":200214,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200219,"byte_end":200334,"line_start":118,"line_end":118,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200339,"byte_end":200420,"line_start":119,"line_end":119,"column_start":5,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182505,"byte_end":182515,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"make_spirv","qualname":"::util::make_spirv","value":"pub fn make_spirv<'a>(&'a [u8]) -> super::ShaderSource","parent":null,"children":[],"decl_id":null,"docs":" Treat the given byte slice as a SPIR-V module.","sig":null,"attributes":[{"value":"/ Treat the given byte slice as a SPIR-V module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182245,"byte_end":182295,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182296,"byte_end":182299,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182300,"byte_end":182311,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182312,"byte_end":182315,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function panics if:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182316,"byte_end":182344,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182345,"byte_end":182348,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - Input length isn't multiple of 4","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182349,"byte_end":182387,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ - Input is longer than [`usize::max_value`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182388,"byte_end":182435,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ - SPIR-V magic number is missing from beginning of stream","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/mod.rs","byte_start":182436,"byte_end":182497,"line_start":25,"line_end":25,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":944},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5441,"byte_end":5450,"line_start":154,"line_end":154,"column_start":10,"column_end":19},"name":"AdapterId","qualname":"::Context::AdapterId","value":"type AdapterId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5492,"byte_end":5500,"line_start":155,"line_end":155,"column_start":10,"column_end":18},"name":"DeviceId","qualname":"::Context::DeviceId","value":"type DeviceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5542,"byte_end":5549,"line_start":156,"line_end":156,"column_start":10,"column_end":17},"name":"QueueId","qualname":"::Context::QueueId","value":"type QueueId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":947},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5591,"byte_end":5605,"line_start":157,"line_end":157,"column_start":10,"column_end":24},"name":"ShaderModuleId","qualname":"::Context::ShaderModuleId","value":"type ShaderModuleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5647,"byte_end":5664,"line_start":158,"line_end":158,"column_start":10,"column_end":27},"name":"BindGroupLayoutId","qualname":"::Context::BindGroupLayoutId","value":"type BindGroupLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":949},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5706,"byte_end":5717,"line_start":159,"line_end":159,"column_start":10,"column_end":21},"name":"BindGroupId","qualname":"::Context::BindGroupId","value":"type BindGroupId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5759,"byte_end":5772,"line_start":160,"line_end":160,"column_start":10,"column_end":23},"name":"TextureViewId","qualname":"::Context::TextureViewId","value":"type TextureViewId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":951},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5814,"byte_end":5823,"line_start":161,"line_end":161,"column_start":10,"column_end":19},"name":"SamplerId","qualname":"::Context::SamplerId","value":"type SamplerId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5865,"byte_end":5873,"line_start":162,"line_end":162,"column_start":10,"column_end":18},"name":"BufferId","qualname":"::Context::BufferId","value":"type BufferId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5915,"byte_end":5924,"line_start":163,"line_end":163,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::Context::TextureId","value":"type TextureId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5966,"byte_end":5976,"line_start":164,"line_end":164,"column_start":10,"column_end":20},"name":"QuerySetId","qualname":"::Context::QuerySetId","value":"type QuerySetId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":955},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6018,"byte_end":6034,"line_start":165,"line_end":165,"column_start":10,"column_end":26},"name":"PipelineLayoutId","qualname":"::Context::PipelineLayoutId","value":"type PipelineLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":956},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6076,"byte_end":6092,"line_start":166,"line_end":166,"column_start":10,"column_end":26},"name":"RenderPipelineId","qualname":"::Context::RenderPipelineId","value":"type RenderPipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":957},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6134,"byte_end":6151,"line_start":167,"line_end":167,"column_start":10,"column_end":27},"name":"ComputePipelineId","qualname":"::Context::ComputePipelineId","value":"type ComputePipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":958},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6193,"byte_end":6209,"line_start":168,"line_end":168,"column_start":10,"column_end":26},"name":"CommandEncoderId","qualname":"::Context::CommandEncoderId","value":"type CommandEncoderId: Debug;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6227,"byte_end":6240,"line_start":169,"line_end":169,"column_start":10,"column_end":23},"name":"ComputePassId","qualname":"::Context::ComputePassId","value":"type ComputePassId: Debug + ComputePassInner<Self>;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":960},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6283,"byte_end":6295,"line_start":170,"line_end":170,"column_start":10,"column_end":22},"name":"RenderPassId","qualname":"::Context::RenderPassId","value":"type RenderPassId: Debug + RenderPassInner<Self>;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6337,"byte_end":6352,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"CommandBufferId","qualname":"::Context::CommandBufferId","value":"type CommandBufferId: Debug + Send + Sync;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6384,"byte_end":6405,"line_start":172,"line_end":172,"column_start":10,"column_end":31},"name":"RenderBundleEncoderId","qualname":"::Context::RenderBundleEncoderId","value":"type RenderBundleEncoderId: Debug + RenderInner<Self>;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6443,"byte_end":6457,"line_start":173,"line_end":173,"column_start":10,"column_end":24},"name":"RenderBundleId","qualname":"::Context::RenderBundleId","value":"type RenderBundleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":964},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6499,"byte_end":6508,"line_start":174,"line_end":174,"column_start":10,"column_end":19},"name":"SurfaceId","qualname":"::Context::SurfaceId","value":"type SurfaceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6550,"byte_end":6561,"line_start":175,"line_end":175,"column_start":10,"column_end":21},"name":"SwapChainId","qualname":"::Context::SwapChainId","value":"type SwapChainId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6604,"byte_end":6625,"line_start":177,"line_end":177,"column_start":10,"column_end":31},"name":"SwapChainOutputDetail","qualname":"::Context::SwapChainOutputDetail","value":"type SwapChainOutputDetail: Send;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6643,"byte_end":6663,"line_start":179,"line_end":179,"column_start":10,"column_end":30},"name":"RequestAdapterFuture","qualname":"::Context::RequestAdapterFuture","value":"type RequestAdapterFuture: Future<Output = Option<Self::AdapterId>> + Send;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":968},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6723,"byte_end":6742,"line_start":180,"line_end":180,"column_start":10,"column_end":29},"name":"RequestDeviceFuture","qualname":"::Context::RequestDeviceFuture","value":"type RequestDeviceFuture: Future<Output = Result<(Self::DeviceId, Self::QueueId), RequestDeviceError>>\n        + Send;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":969},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":6846,"byte_end":6860,"line_start":182,"line_end":182,"column_start":10,"column_end":24},"name":"MapAsyncFuture","qualname":"::Context::MapAsyncFuture","value":"type MapAsyncFuture: Future<Output = Result<(), BufferAsyncError>> + Send;","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16003,"byte_end":16011,"line_start":453,"line_end":453,"column_start":12,"column_end":20},"name":"Instance","qualname":"::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":1486}],"decl_id":null,"docs":" Context for all other wgpu objects. Instance of wgpu.","sig":null,"attributes":[{"value":"/ Context for all other wgpu objects. Instance of wgpu.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15753,"byte_end":15810,"line_start":446,"line_end":446,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15811,"byte_end":15814,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ This is the first thing you create when using wgpu.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15815,"byte_end":15870,"line_start":448,"line_end":448,"column_start":1,"column_end":56}},{"value":"/ Its primary use is to create [`Adapter`]s and [`Surface`]s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15871,"byte_end":15934,"line_start":449,"line_end":449,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15935,"byte_end":15938,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":15939,"byte_end":15974,"line_start":451,"line_end":451,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16306,"byte_end":16313,"line_start":464,"line_end":464,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491}],"decl_id":null,"docs":" Handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Handle to a physical graphics and/or compute device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16038,"byte_end":16094,"line_start":457,"line_end":457,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16095,"byte_end":16098,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ Adapters can be used to open a connection to the corresponding [`Device`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16099,"byte_end":16176,"line_start":459,"line_end":459,"column_start":1,"column_end":78}},{"value":"/ on the host system by using [`Adapter::request_device`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16177,"byte_end":16237,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16238,"byte_end":16241,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16242,"byte_end":16277,"line_start":462,"line_end":462,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16845,"byte_end":16851,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"decl_id":null,"docs":" Open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Open connection to a graphics and/or compute device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16525,"byte_end":16581,"line_start":477,"line_end":477,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16582,"byte_end":16585,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ Responsible for the creation of most rendering and compute resources.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16586,"byte_end":16659,"line_start":479,"line_end":479,"column_start":1,"column_end":74}},{"value":"/ These are then used in commands, which are submitted to a [`Queue`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16660,"byte_end":16732,"line_start":480,"line_end":480,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16733,"byte_end":16736,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ A device may be requested from an adapter with [`Adapter::request_device`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16737,"byte_end":16816,"line_start":482,"line_end":482,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17099,"byte_end":17103,"line_start":494,"line_end":494,"column_start":5,"column_end":9},"name":"Wait","qualname":"::Maintain::Wait","value":"Maintain::Wait","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Block\n","sig":null,"attributes":[{"value":"/ Block","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17085,"byte_end":17094,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17129,"byte_end":17133,"line_start":496,"line_end":496,"column_start":5,"column_end":9},"name":"Poll","qualname":"::Maintain::Poll","value":"Maintain::Poll","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Don't block\n","sig":null,"attributes":[{"value":"/ Don't block","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17109,"byte_end":17124,"line_start":495,"line_end":495,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":1499},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17070,"byte_end":17078,"line_start":492,"line_end":492,"column_start":10,"column_end":18},"name":"Maintain","qualname":"::Maintain","value":"pub enum Maintain { Wait, Poll, }","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1502}],"decl_id":null,"docs":" Passed to [`Device::poll`] to control if it should block or not. This has no effect on\n the web.\n","sig":null,"attributes":[{"value":"/ Passed to [`Device::poll`] to control if it should block or not. This has no effect on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16912,"byte_end":17002,"line_start":489,"line_end":489,"column_start":1,"column_end":91}},{"value":"/ the web.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17003,"byte_end":17015,"line_start":490,"line_end":490,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19134,"byte_end":19140,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"decl_id":null,"docs":" Handle to a GPU-accessible buffer.","sig":null,"attributes":[{"value":"/ Handle to a GPU-accessible buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":18948,"byte_end":18986,"line_start":559,"line_end":559,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":18987,"byte_end":18990,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ Created with [`Device::create_buffer`] or [DeviceExt::create_buffer_init](util::DeviceExt::create_buffer_init)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":18991,"byte_end":19105,"line_start":561,"line_end":561,"column_start":1,"column_end":115}}]},{"kind":"Struct","id":{"krate":0,"index":1528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19456,"byte_end":19467,"line_start":576,"line_end":576,"column_start":12,"column_end":23},"name":"BufferSlice","qualname":"::BufferSlice","value":"BufferSlice {  }","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":" Slice into a [`Buffer`].","sig":null,"attributes":[{"value":"/ Slice into a [`Buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19261,"byte_end":19289,"line_start":570,"line_end":570,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19290,"byte_end":19293,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Buffer::slice`]. To use the whole buffer, call with unbounded slice:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19294,"byte_end":19387,"line_start":572,"line_end":572,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19388,"byte_end":19391,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ `buffer.slice(..)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19392,"byte_end":19414,"line_start":574,"line_end":574,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19676,"byte_end":19683,"line_start":586,"line_end":586,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544}],"decl_id":null,"docs":" Handle to a texture on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a texture on the GPU.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19558,"byte_end":19593,"line_start":582,"line_end":582,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19594,"byte_end":19597,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Device::create_texture`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19598,"byte_end":19647,"line_start":584,"line_end":584,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19948,"byte_end":19959,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550}],"decl_id":null,"docs":" Handle to a texture view.","sig":null,"attributes":[{"value":"/ Handle to a texture view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19762,"byte_end":19791,"line_start":592,"line_end":592,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19792,"byte_end":19795,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19796,"byte_end":19878,"line_start":594,"line_end":594,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":19879,"byte_end":19919,"line_start":595,"line_end":595,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20362,"byte_end":20369,"line_start":609,"line_end":609,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"decl_id":null,"docs":" Handle to a sampler.","sig":null,"attributes":[{"value":"/ Handle to a sampler.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20042,"byte_end":20066,"line_start":603,"line_end":603,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20067,"byte_end":20070,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20071,"byte_end":20168,"line_start":605,"line_end":605,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20169,"byte_end":20263,"line_start":606,"line_end":606,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20264,"byte_end":20333,"line_start":607,"line_end":607,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20853,"byte_end":20860,"line_start":627,"line_end":627,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"decl_id":null,"docs":" Handle to a presentable surface.","sig":null,"attributes":[{"value":"/ Handle to a presentable surface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20582,"byte_end":20618,"line_start":622,"line_end":622,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20619,"byte_end":20622,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) onto which rendered images may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20623,"byte_end":20724,"line_start":624,"line_end":624,"column_start":1,"column_end":102}},{"value":"/ be presented. A `Surface` may be created with the unsafe function [`Instance::create_surface`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20725,"byte_end":20824,"line_start":625,"line_end":625,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21301,"byte_end":21310,"line_start":645,"line_end":645,"column_start":12,"column_end":21},"name":"SwapChain","qualname":"::SwapChain","value":"SwapChain {  }","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" Handle to a swap chain.","sig":null,"attributes":[{"value":"/ Handle to a swap chain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21072,"byte_end":21099,"line_start":640,"line_end":640,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21100,"byte_end":21103,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ A `SwapChain` represents the image or series of images that will be presented to a [`Surface`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21104,"byte_end":21203,"line_start":642,"line_end":642,"column_start":1,"column_end":100}},{"value":"/ A `SwapChain` may be created with [`Device::create_swap_chain`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21204,"byte_end":21272,"line_start":643,"line_end":643,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21829,"byte_end":21844,"line_start":657,"line_end":657,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570}],"decl_id":null,"docs":" Handle to a binding group layout.","sig":null,"attributes":[{"value":"/ Handle to a binding group layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21374,"byte_end":21411,"line_start":650,"line_end":650,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21412,"byte_end":21415,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21416,"byte_end":21512,"line_start":652,"line_end":652,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21513,"byte_end":21609,"line_start":653,"line_end":653,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21610,"byte_end":21707,"line_start":654,"line_end":654,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21708,"byte_end":21800,"line_start":655,"line_end":655,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22477,"byte_end":22486,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"decl_id":null,"docs":" Handle to a binding group.","sig":null,"attributes":[{"value":"/ Handle to a binding group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22083,"byte_end":22113,"line_start":670,"line_end":670,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22114,"byte_end":22117,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22118,"byte_end":22204,"line_start":672,"line_end":672,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22205,"byte_end":22301,"line_start":673,"line_end":673,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22302,"byte_end":22390,"line_start":674,"line_end":674,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22391,"byte_end":22448,"line_start":675,"line_end":675,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23015,"byte_end":23027,"line_start":696,"line_end":696,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" Handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ Handle to a compiled shader module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22706,"byte_end":22745,"line_start":690,"line_end":690,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22746,"byte_end":22749,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22750,"byte_end":22847,"line_start":692,"line_end":692,"column_start":1,"column_end":98}},{"value":"/ valid SPIR-V source code to [`Device::create_shader_module`]. Shader modules are used to define","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22848,"byte_end":22947,"line_start":693,"line_end":693,"column_start":1,"column_end":100}},{"value":"/ programmable stages of a pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22948,"byte_end":22986,"line_start":694,"line_end":694,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23523,"byte_end":23528,"line_start":715,"line_end":715,"column_start":5,"column_end":10},"name":"SpirV","qualname":"::ShaderSource::SpirV","value":"ShaderSource::SpirV(Cow)","parent":{"krate":0,"index":1063},"children":[],"decl_id":null,"docs":" SPIR-V module represented as a slice of words.","sig":null,"attributes":[{"value":"/ SPIR-V module represented as a slice of words.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23319,"byte_end":23369,"line_start":711,"line_end":711,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23374,"byte_end":23377,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ wgpu will attempt to parse and validate it, but the original binary","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23382,"byte_end":23453,"line_start":713,"line_end":713,"column_start":5,"column_end":76}},{"value":"/ is passed to `gfx-rs` and `spirv_cross` for translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23458,"byte_end":23518,"line_start":714,"line_end":714,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1068},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23792,"byte_end":23796,"line_start":722,"line_end":722,"column_start":5,"column_end":9},"name":"Wgsl","qualname":"::ShaderSource::Wgsl","value":"ShaderSource::Wgsl(Cow)","parent":{"krate":0,"index":1063},"children":[],"decl_id":null,"docs":" WGSL module as a string slice.","sig":null,"attributes":[{"value":"/ WGSL module as a string slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23550,"byte_end":23584,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23589,"byte_end":23592,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ wgpu-rs will parse it and use for validation. It will attempt","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23597,"byte_end":23662,"line_start":718,"line_end":718,"column_start":5,"column_end":70}},{"value":"/ to build a SPIR-V module internally and panic otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23667,"byte_end":23727,"line_start":719,"line_end":719,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23732,"byte_end":23735,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Note: WGSL is not yet supported on the Web.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23740,"byte_end":23787,"line_start":721,"line_end":721,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23296,"byte_end":23308,"line_start":710,"line_end":710,"column_start":10,"column_end":22},"name":"ShaderSource","qualname":"::ShaderSource","value":"pub enum ShaderSource<'a> { SpirV(Cow), Wgsl(Cow), }","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1068}],"decl_id":null,"docs":" Source of a shader module.\n","sig":null,"attributes":[{"value":"/ Source of a shader module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23256,"byte_end":23286,"line_start":709,"line_end":709,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23862,"byte_end":23884,"line_start":726,"line_end":726,"column_start":12,"column_end":34},"name":"ShaderModuleDescriptor","qualname":"::ShaderModuleDescriptor","value":"ShaderModuleDescriptor { label, source, flags }","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" Descriptor for a shader module.\n","sig":null,"attributes":[{"value":"/ Descriptor for a shader module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23815,"byte_end":23850,"line_start":725,"line_end":725,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24006,"byte_end":24011,"line_start":728,"line_end":728,"column_start":9,"column_end":14},"name":"label","qualname":"::ShaderModuleDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1071},"children":[],"decl_id":null,"docs":" Debug label of the shader module. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the shader module. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23895,"byte_end":23997,"line_start":727,"line_end":727,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":1074},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24068,"byte_end":24074,"line_start":730,"line_end":730,"column_start":9,"column_end":15},"name":"source","qualname":"::ShaderModuleDescriptor::source","value":"ShaderSource<'a>","parent":{"krate":0,"index":1071},"children":[],"decl_id":null,"docs":" Source code for the shader.\n","sig":null,"attributes":[{"value":"/ Source code for the shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24028,"byte_end":24059,"line_start":729,"line_end":729,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1075},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24133,"byte_end":24138,"line_start":732,"line_end":732,"column_start":9,"column_end":14},"name":"flags","qualname":"::ShaderModuleDescriptor::flags","value":"wgpu_types::ShaderFlags","parent":{"krate":0,"index":1071},"children":[],"decl_id":null,"docs":" Shader handling flags.\n","sig":null,"attributes":[{"value":"/ Shader handling flags.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24098,"byte_end":24124,"line_start":731,"line_end":731,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24305,"byte_end":24319,"line_start":739,"line_end":739,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"decl_id":null,"docs":" Handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ Handle to a pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24156,"byte_end":24188,"line_start":735,"line_end":735,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24189,"byte_end":24192,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24193,"byte_end":24276,"line_start":737,"line_end":737,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24827,"byte_end":24841,"line_start":757,"line_end":757,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"decl_id":null,"docs":" Handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ Handle to a rendering (graphics) pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24554,"byte_end":24600,"line_start":752,"line_end":752,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24601,"byte_end":24604,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24605,"byte_end":24698,"line_start":754,"line_end":754,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. A `RenderPipeline` may be created with [`Device::create_render_pipeline`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24699,"byte_end":24798,"line_start":755,"line_end":755,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25184,"byte_end":25205,"line_start":772,"line_end":772,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<RenderPipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25102,"byte_end":25172,"line_start":771,"line_end":771,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25717,"byte_end":25732,"line_start":788,"line_end":788,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":" Handle to a compute pipeline.","sig":null,"attributes":[{"value":"/ Handle to a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25480,"byte_end":25513,"line_start":783,"line_end":783,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25514,"byte_end":25517,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ A `ComputePipeline` object represents a compute pipeline and its single shader stage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25518,"byte_end":25607,"line_start":785,"line_end":785,"column_start":1,"column_end":90}},{"value":"/ A `ComputePipeline` may be created with [`Device::create_compute_pipeline`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25608,"byte_end":25688,"line_start":786,"line_end":786,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26079,"byte_end":26100,"line_start":803,"line_end":803,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<ComputePipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25997,"byte_end":26067,"line_start":802,"line_end":802,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26722,"byte_end":26735,"line_start":820,"line_end":820,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600}],"decl_id":null,"docs":" Handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a command buffer on the GPU.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26376,"byte_end":26418,"line_start":814,"line_end":814,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26419,"byte_end":26422,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26423,"byte_end":26522,"line_start":816,"line_end":816,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26523,"byte_end":26623,"line_start":817,"line_end":817,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26624,"byte_end":26693,"line_start":818,"line_end":818,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1603},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27406,"byte_end":27420,"line_start":843,"line_end":843,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606}],"decl_id":null,"docs":" Encodes a series of GPU operations.","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27031,"byte_end":27070,"line_start":835,"line_end":835,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27071,"byte_end":27074,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ A command encoder can record [`RenderPass`]es, [`ComputePass`]es,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27075,"byte_end":27144,"line_start":837,"line_end":837,"column_start":1,"column_end":70}},{"value":"/ and transfer operations between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27145,"byte_end":27240,"line_start":838,"line_end":838,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27241,"byte_end":27244,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27245,"byte_end":27345,"line_start":840,"line_end":840,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27346,"byte_end":27377,"line_start":841,"line_end":841,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27711,"byte_end":27721,"line_start":853,"line_end":853,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"decl_id":null,"docs":" In-progress recording of a render pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27639,"byte_end":27682,"line_start":851,"line_end":851,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27878,"byte_end":27889,"line_start":860,"line_end":860,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":" In-progress recording of a compute pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a compute pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27805,"byte_end":27849,"line_start":858,"line_end":858,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28368,"byte_end":28387,"line_start":872,"line_end":872,"column_start":12,"column_end":31},"name":"RenderBundleEncoder","qualname":"::RenderBundleEncoder","value":"RenderBundleEncoder {  }","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"decl_id":null,"docs":" Encodes a series of GPU operations into a reusable \"render bundle\".","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations into a reusable \"render bundle\".","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":27974,"byte_end":28045,"line_start":865,"line_end":865,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28046,"byte_end":28049,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28050,"byte_end":28146,"line_start":867,"line_end":867,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28147,"byte_end":28231,"line_start":868,"line_end":868,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28232,"byte_end":28235,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28236,"byte_end":28339,"line_start":870,"line_end":870,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29014,"byte_end":29026,"line_start":888,"line_end":888,"column_start":12,"column_end":24},"name":"RenderBundle","qualname":"::RenderBundle","value":"RenderBundle {  }","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634}],"decl_id":null,"docs":" Pre-prepared reusable bundle of GPU operations.","sig":null,"attributes":[{"value":"/ Pre-prepared reusable bundle of GPU operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28640,"byte_end":28691,"line_start":881,"line_end":881,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28692,"byte_end":28695,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28696,"byte_end":28792,"line_start":883,"line_end":883,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28793,"byte_end":28877,"line_start":884,"line_end":884,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28878,"byte_end":28881,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":28882,"byte_end":28985,"line_start":886,"line_end":886,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29293,"byte_end":29301,"line_start":902,"line_end":902,"column_start":12,"column_end":20},"name":"QuerySet","qualname":"::QuerySet","value":"QuerySet {  }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":" Handle to a query set.\n","sig":null,"attributes":[{"value":"/ Handle to a query set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29255,"byte_end":29281,"line_start":901,"line_end":901,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29772,"byte_end":29777,"line_start":920,"line_end":920,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639}],"decl_id":null,"docs":" Handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ Handle to a command queue on a device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29518,"byte_end":29560,"line_start":915,"line_end":915,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29561,"byte_end":29564,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects and provides convenience methods","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29565,"byte_end":29655,"line_start":917,"line_end":917,"column_start":1,"column_end":91}},{"value":"/ for writing to [buffers](Queue::write_buffer) and [textures](Queue::write_texture).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29656,"byte_end":29743,"line_start":918,"line_end":918,"column_start":1,"column_end":88}}]},{"kind":"StructVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30164,"byte_end":30170,"line_start":933,"line_end":933,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer { buffer, offset, size }","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Binding is backed by a buffer.","sig":null,"attributes":[{"value":"/ Binding is backed by a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29960,"byte_end":29994,"line_start":929,"line_end":929,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29999,"byte_end":30002,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BufferBindingType::Uniform`] and [`wgt::BufferBindingType::Storage`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30007,"byte_end":30101,"line_start":931,"line_end":931,"column_start":5,"column_end":99}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30106,"byte_end":30159,"line_start":932,"line_end":932,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30790,"byte_end":30797,"line_start":947,"line_end":947,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Binding is a sampler.","sig":null,"attributes":[{"value":"/ Binding is a sampler.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30649,"byte_end":30674,"line_start":944,"line_end":944,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30679,"byte_end":30682,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30687,"byte_end":30785,"line_start":946,"line_end":946,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1651},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31016,"byte_end":31027,"line_start":952,"line_end":952,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Binding is backed by a texture.","sig":null,"attributes":[{"value":"/ Binding is backed by a texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30816,"byte_end":30851,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30856,"byte_end":30859,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30864,"byte_end":30958,"line_start":950,"line_end":950,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":30963,"byte_end":31011,"line_start":951,"line_end":951,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31360,"byte_end":31376,"line_start":959,"line_end":959,"column_start":5,"column_end":21},"name":"TextureViewArray","qualname":"::BindingResource::TextureViewArray","value":"BindingResource::TextureViewArray(&'a [&'a TextureView])","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Binding is backed by an array of textures.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of textures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31050,"byte_end":31096,"line_start":953,"line_end":953,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31101,"byte_end":31104,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ [`Features::SAMPLED_TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31109,"byte_end":31195,"line_start":955,"line_end":955,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31200,"byte_end":31203,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31208,"byte_end":31302,"line_start":957,"line_end":957,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31307,"byte_end":31355,"line_start":958,"line_end":958,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29934,"byte_end":29949,"line_start":928,"line_end":928,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"pub enum BindingResource<'a> {\n    Buffer {\n        buffer: &'a Buffer,\n        offset: BufferAddress,\n        size: Option<BufferSize>,\n    },\n    Sampler(&'a Sampler),\n    TextureView(&'a TextureView),\n    TextureViewArray(&'a [&'a TextureView]),\n}","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1654}],"decl_id":null,"docs":" Resource that can be bound to a pipeline.\n","sig":null,"attributes":[{"value":"/ Resource that can be bound to a pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29837,"byte_end":29882,"line_start":925,"line_end":925,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29883,"byte_end":29900,"line_start":926,"line_end":926,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31802,"byte_end":31807,"line_start":970,"line_end":970,"column_start":5,"column_end":10},"name":"Clear","qualname":"::LoadOp::Clear","value":"LoadOp::Clear(V)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Clear with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear with a specified value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31764,"byte_end":31797,"line_start":969,"line_end":969,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1668},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31842,"byte_end":31846,"line_start":972,"line_end":972,"column_start":5,"column_end":9},"name":"Load","qualname":"::LoadOp::Load","value":"LoadOp::Load","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Load from memory.\n","sig":null,"attributes":[{"value":"/ Load from memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31816,"byte_end":31837,"line_start":971,"line_end":971,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1663},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31748,"byte_end":31754,"line_start":968,"line_end":968,"column_start":10,"column_end":16},"name":"LoadOp","qualname":"::LoadOp","value":"pub enum LoadOp<V> { Clear(V), Load, }","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1668}],"decl_id":null,"docs":" Operation to perform to the output attachment at the start of a renderpass.","sig":null,"attributes":[{"value":"/ Operation to perform to the output attachment at the start of a renderpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31404,"byte_end":31483,"line_start":962,"line_end":962,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31484,"byte_end":31487,"line_start":963,"line_end":963,"column_start":1,"column_end":4}},{"value":"/ The render target must be cleared at least once before it's content be loaded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31488,"byte_end":31570,"line_start":964,"line_end":964,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1693},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32211,"byte_end":32221,"line_start":985,"line_end":985,"column_start":12,"column_end":22},"name":"Operations","qualname":"::Operations","value":"Operations { load, store }","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696}],"decl_id":null,"docs":" Pair of load and store operations for an attachment aspect.\n","sig":null,"attributes":[{"value":"/ Pair of load and store operations for an attachment aspect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31968,"byte_end":32031,"line_start":981,"line_end":981,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1695},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32292,"byte_end":32296,"line_start":987,"line_end":987,"column_start":9,"column_end":13},"name":"load","qualname":"::Operations::load","value":"LoadOp<V>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":" How data should be read through this attachment.\n","sig":null,"attributes":[{"value":"/ How data should be read through this attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32231,"byte_end":32283,"line_start":986,"line_end":986,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1696},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32382,"byte_end":32387,"line_start":989,"line_end":989,"column_start":9,"column_end":14},"name":"store","qualname":"::Operations::store","value":"bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":" Whether data will be written to through this attachment.\n","sig":null,"attributes":[{"value":"/ Whether data will be written to through this attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32313,"byte_end":32373,"line_start":988,"line_end":988,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32656,"byte_end":32691,"line_start":1003,"line_end":1003,"column_start":12,"column_end":47},"name":"RenderPassColorAttachmentDescriptor","qualname":"::RenderPassColorAttachmentDescriptor","value":"RenderPassColorAttachmentDescriptor { attachment, resolve_target, ops }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"decl_id":null,"docs":" Describes a color attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a color attachment to a [`RenderPass`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32567,"byte_end":32620,"line_start":1001,"line_end":1001,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32748,"byte_end":32758,"line_start":1005,"line_end":1005,"column_start":9,"column_end":19},"name":"attachment","qualname":"::RenderPassColorAttachmentDescriptor::attachment","value":"&'a TextureView","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32702,"byte_end":32739,"line_start":1004,"line_end":1004,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1723},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32866,"byte_end":32880,"line_start":1007,"line_end":1007,"column_start":9,"column_end":23},"name":"resolve_target","qualname":"::RenderPassColorAttachmentDescriptor::resolve_target","value":"std::option::Option<&'a TextureView>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" The view that will receive the resolved output if multisampling is used.\n","sig":null,"attributes":[{"value":"/ The view that will receive the resolved output if multisampling is used.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32781,"byte_end":32857,"line_start":1006,"line_end":1006,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1724},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32983,"byte_end":32986,"line_start":1009,"line_end":1009,"column_start":9,"column_end":12},"name":"ops","qualname":"::RenderPassColorAttachmentDescriptor::ops","value":"Operations<wgpu_types::Color>","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" What operations will be performed on this color attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on this color attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32911,"byte_end":32974,"line_start":1008,"line_end":1008,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33107,"byte_end":33149,"line_start":1014,"line_end":1014,"column_start":12,"column_end":54},"name":"RenderPassDepthStencilAttachmentDescriptor","qualname":"::RenderPassDepthStencilAttachmentDescriptor","value":"RenderPassDepthStencilAttachmentDescriptor { attachment, depth_ops, stencil_ops }","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"decl_id":null,"docs":" Describes a depth/stencil attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a depth/stencil attachment to a [`RenderPass`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33010,"byte_end":33071,"line_start":1012,"line_end":1012,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1733},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33206,"byte_end":33216,"line_start":1016,"line_end":1016,"column_start":9,"column_end":19},"name":"attachment","qualname":"::RenderPassDepthStencilAttachmentDescriptor::attachment","value":"&'a TextureView","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33160,"byte_end":33197,"line_start":1015,"line_end":1015,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1734},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33322,"byte_end":33331,"line_start":1018,"line_end":1018,"column_start":9,"column_end":18},"name":"depth_ops","qualname":"::RenderPassDepthStencilAttachmentDescriptor::depth_ops","value":"std::option::Option<Operations<f32>>","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" What operations will be performed on the depth part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the depth part of the attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33239,"byte_end":33313,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33447,"byte_end":33458,"line_start":1020,"line_end":1020,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::RenderPassDepthStencilAttachmentDescriptor::stencil_ops","value":"std::option::Option<Operations<u32>>","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" What operations will be performed on the stencil part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the stencil part of the attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33362,"byte_end":33438,"line_start":1019,"line_end":1019,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33598,"byte_end":33603,"line_start":1026,"line_end":1026,"column_start":10,"column_end":15},"name":"Label","qualname":"::Label","value":"Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Object label.\n","sig":null,"attributes":[{"value":"/ Object label.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33571,"byte_end":33588,"line_start":1025,"line_end":1025,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33765,"byte_end":33786,"line_start":1029,"line_end":1029,"column_start":10,"column_end":31},"name":"RequestAdapterOptions","qualname":"::RequestAdapterOptions","value":"RequestAdapterOptionsBase<&'a Surface>","parent":null,"children":[],"decl_id":null,"docs":" Additional information required when requesting an adapter.\n","sig":null,"attributes":[{"value":"/ Additional information required when requesting an adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33692,"byte_end":33755,"line_start":1028,"line_end":1028,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33870,"byte_end":33886,"line_start":1031,"line_end":1031,"column_start":10,"column_end":26},"name":"DeviceDescriptor","qualname":"::DeviceDescriptor","value":"wgt::DeviceDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Device`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Device`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33833,"byte_end":33860,"line_start":1030,"line_end":1030,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33964,"byte_end":33980,"line_start":1033,"line_end":1033,"column_start":10,"column_end":26},"name":"BufferDescriptor","qualname":"::BufferDescriptor","value":"wgt::BufferDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":33927,"byte_end":33954,"line_start":1032,"line_end":1032,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34066,"byte_end":34090,"line_start":1035,"line_end":1035,"column_start":10,"column_end":34},"name":"CommandEncoderDescriptor","qualname":"::CommandEncoderDescriptor","value":"wgt::CommandEncoderDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`CommandEncoder`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34021,"byte_end":34056,"line_start":1034,"line_end":1034,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34182,"byte_end":34204,"line_start":1037,"line_end":1037,"column_start":10,"column_end":32},"name":"RenderBundleDescriptor","qualname":"::RenderBundleDescriptor","value":"wgt::RenderBundleDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`RenderBundle`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundle`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34139,"byte_end":34172,"line_start":1036,"line_end":1036,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34289,"byte_end":34306,"line_start":1039,"line_end":1039,"column_start":10,"column_end":27},"name":"TextureDescriptor","qualname":"::TextureDescriptor","value":"wgt::TextureDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Texture`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Texture`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34251,"byte_end":34279,"line_start":1038,"line_end":1038,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34437,"byte_end":34458,"line_start":1043,"line_end":1043,"column_start":12,"column_end":33},"name":"TextureViewDescriptor","qualname":"::TextureViewDescriptor","value":"TextureViewDescriptor { label, format, dimension, aspect, base_mip_level, level_count, base_array_layer, array_layer_count }","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751}],"decl_id":null,"docs":" Describes a [`TextureView`].\n","sig":null,"attributes":[{"value":"/ Describes a [`TextureView`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34349,"byte_end":34381,"line_start":1041,"line_end":1041,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34579,"byte_end":34584,"line_start":1045,"line_end":1045,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureViewDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Debug label of the texture view. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the texture view. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34469,"byte_end":34570,"line_start":1044,"line_end":1044,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34722,"byte_end":34728,"line_start":1047,"line_end":1047,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureViewDescriptor::format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Format of the texture view. At this time, it must be the same as the underlying format of the texture.\n","sig":null,"attributes":[{"value":"/ Format of the texture view. At this time, it must be the same as the underlying format of the texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34607,"byte_end":34713,"line_start":1046,"line_end":1046,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34956,"byte_end":34965,"line_start":1050,"line_end":1050,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureViewDescriptor::dimension","value":"std::option::Option<wgpu_types::TextureViewDimension>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of\n `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`\n","sig":null,"attributes":[{"value":"/ The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34757,"byte_end":34865,"line_start":1048,"line_end":1048,"column_start":5,"column_end":113}},{"value":"/ `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":34870,"byte_end":34947,"line_start":1049,"line_end":1049,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35083,"byte_end":35089,"line_start":1052,"line_end":1052,"column_start":9,"column_end":15},"name":"aspect","qualname":"::TextureViewDescriptor::aspect","value":"wgpu_types::TextureAspect","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Aspect of the texture. Color textures must be [`TextureAspect::All`].\n","sig":null,"attributes":[{"value":"/ Aspect of the texture. Color textures must be [`TextureAspect::All`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35001,"byte_end":35074,"line_start":1051,"line_end":1051,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35138,"byte_end":35152,"line_start":1054,"line_end":1054,"column_start":9,"column_end":23},"name":"base_mip_level","qualname":"::TextureViewDescriptor::base_mip_level","value":"u32","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Base mip level.\n","sig":null,"attributes":[{"value":"/ Base mip level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35110,"byte_end":35129,"line_start":1053,"line_end":1053,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35395,"byte_end":35406,"line_start":1058,"line_end":1058,"column_start":9,"column_end":20},"name":"level_count","qualname":"::TextureViewDescriptor::level_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Mip level count.\n If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.\n If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Mip level count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35163,"byte_end":35183,"line_start":1055,"line_end":1055,"column_start":5,"column_end":25}},{"value":"/ If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35188,"byte_end":35289,"line_start":1056,"line_end":1056,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35294,"byte_end":35386,"line_start":1057,"line_end":1057,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35462,"byte_end":35478,"line_start":1060,"line_end":1060,"column_start":9,"column_end":25},"name":"base_array_layer","qualname":"::TextureViewDescriptor::base_array_layer","value":"u32","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Base array layer.\n","sig":null,"attributes":[{"value":"/ Base array layer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35432,"byte_end":35453,"line_start":1059,"line_end":1059,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35716,"byte_end":35733,"line_start":1064,"line_end":1064,"column_start":9,"column_end":26},"name":"array_layer_count","qualname":"::TextureViewDescriptor::array_layer_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Layer count.\n If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.\n If `None`, considered to include the rest of the array layers, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Layer count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35489,"byte_end":35505,"line_start":1061,"line_end":1061,"column_start":5,"column_end":21}},{"value":"/ If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35510,"byte_end":35611,"line_start":1062,"line_end":1062,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the array layers, but at least 1 in total.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35616,"byte_end":35707,"line_start":1063,"line_end":1063,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35904,"byte_end":35928,"line_start":1071,"line_end":1071,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { label, bind_group_layouts, push_constant_ranges }","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" Describes a pipeline layout.","sig":null,"attributes":[{"value":"/ Describes a pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35758,"byte_end":35790,"line_start":1067,"line_end":1067,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35791,"byte_end":35794,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayoutDescriptor` can be used to create a pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35795,"byte_end":35868,"line_start":1069,"line_end":1069,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36052,"byte_end":36057,"line_start":1073,"line_end":1073,"column_start":9,"column_end":14},"name":"label","qualname":"::PipelineLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1767},"children":[],"decl_id":null,"docs":" Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":35939,"byte_end":36043,"line_start":1072,"line_end":1072,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36260,"byte_end":36278,"line_start":1076,"line_end":1076,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":1767},"children":[],"decl_id":null,"docs":" Bind groups that this pipeline uses. The first entry will provide all the bindings for\n \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.\n","sig":null,"attributes":[{"value":"/ Bind groups that this pipeline uses. The first entry will provide all the bindings for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36080,"byte_end":36170,"line_start":1074,"line_end":1074,"column_start":5,"column_end":95}},{"value":"/ \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36175,"byte_end":36251,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36640,"byte_end":36660,"line_start":1082,"line_end":1082,"column_start":9,"column_end":29},"name":"push_constant_ranges","qualname":"::PipelineLayoutDescriptor::push_constant_ranges","value":"&'a [wgpu_types::PushConstantRange]","parent":{"krate":0,"index":1767},"children":[],"decl_id":null,"docs":" Set of push constant ranges this pipeline uses. Each shader stage that uses push constants\n must define the range in push constant memory that corresponds to its single `layout(push_constant)`\n uniform block.","sig":null,"attributes":[{"value":"/ Set of push constant ranges this pipeline uses. Each shader stage that uses push constants","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36311,"byte_end":36405,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ must define the range in push constant memory that corresponds to its single `layout(push_constant)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36410,"byte_end":36514,"line_start":1078,"line_end":1078,"column_start":5,"column_end":109}},{"value":"/ uniform block.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36519,"byte_end":36537,"line_start":1079,"line_end":1079,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36542,"byte_end":36545,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ If this array is non-empty, the [`Features::PUSH_CONSTANTS`] must be enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36550,"byte_end":36631,"line_start":1081,"line_end":1081,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36764,"byte_end":36781,"line_start":1087,"line_end":1087,"column_start":12,"column_end":29},"name":"SamplerDescriptor","qualname":"::SamplerDescriptor","value":"SamplerDescriptor { label, address_mode_u, address_mode_v, address_mode_w, mag_filter, min_filter, mipmap_filter, lod_min_clamp, lod_max_clamp, compare, anisotropy_clamp, border_color }","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791}],"decl_id":null,"docs":" Describes a [`Sampler`]\n","sig":null,"attributes":[{"value":"/ Describes a [`Sampler`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36690,"byte_end":36717,"line_start":1085,"line_end":1085,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1780},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36897,"byte_end":36902,"line_start":1089,"line_end":1089,"column_start":9,"column_end":14},"name":"label","qualname":"::SamplerDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Debug label of the sampler. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the sampler. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36792,"byte_end":36888,"line_start":1088,"line_end":1088,"column_start":5,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":1781},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37005,"byte_end":37019,"line_start":1091,"line_end":1091,"column_start":9,"column_end":23},"name":"address_mode_u","qualname":"::SamplerDescriptor::address_mode_u","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the u (i.e. x) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the u (i.e. x) direction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":36925,"byte_end":36996,"line_start":1090,"line_end":1090,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1782},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37118,"byte_end":37132,"line_start":1093,"line_end":1093,"column_start":9,"column_end":23},"name":"address_mode_v","qualname":"::SamplerDescriptor::address_mode_v","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the v (i.e. y) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the v (i.e. y) direction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37038,"byte_end":37109,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1783},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37231,"byte_end":37245,"line_start":1095,"line_end":1095,"column_start":9,"column_end":23},"name":"address_mode_w","qualname":"::SamplerDescriptor::address_mode_w","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the w (i.e. z) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the w (i.e. z) direction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37151,"byte_end":37222,"line_start":1094,"line_end":1094,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1784},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37346,"byte_end":37356,"line_start":1097,"line_end":1097,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::SamplerDescriptor::mag_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be magnified (made larger)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be magnified (made larger)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37264,"byte_end":37337,"line_start":1096,"line_end":1096,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37456,"byte_end":37466,"line_start":1099,"line_end":1099,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::SamplerDescriptor::min_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be minified (made smaller)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be minified (made smaller)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37374,"byte_end":37447,"line_start":1098,"line_end":1098,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37533,"byte_end":37546,"line_start":1101,"line_end":1101,"column_start":9,"column_end":22},"name":"mipmap_filter","qualname":"::SamplerDescriptor::mipmap_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" How to filter between mip map levels\n","sig":null,"attributes":[{"value":"/ How to filter between mip map levels","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37484,"byte_end":37524,"line_start":1100,"line_end":1100,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1787},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37624,"byte_end":37637,"line_start":1103,"line_end":1103,"column_start":9,"column_end":22},"name":"lod_min_clamp","qualname":"::SamplerDescriptor::lod_min_clamp","value":"f32","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Minimum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Minimum level of detail (i.e. mip level) to use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37564,"byte_end":37615,"line_start":1102,"line_end":1102,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1788},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37708,"byte_end":37721,"line_start":1105,"line_end":1105,"column_start":9,"column_end":22},"name":"lod_max_clamp","qualname":"::SamplerDescriptor::lod_max_clamp","value":"f32","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Maximum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Maximum level of detail (i.e. mip level) to use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37648,"byte_end":37699,"line_start":1104,"line_end":1104,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37830,"byte_end":37837,"line_start":1107,"line_end":1107,"column_start":9,"column_end":16},"name":"compare","qualname":"::SamplerDescriptor::compare","value":"std::option::Option<wgpu_types::CompareFunction>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" If this is enabled, this is a comparison sampler using the given comparison function.\n","sig":null,"attributes":[{"value":"/ If this is enabled, this is a comparison sampler using the given comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37732,"byte_end":37821,"line_start":1106,"line_end":1106,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1790},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37914,"byte_end":37930,"line_start":1109,"line_end":1109,"column_start":9,"column_end":25},"name":"anisotropy_clamp","qualname":"::SamplerDescriptor::anisotropy_clamp","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Valid values: 1, 2, 4, 8, and 16.\n","sig":null,"attributes":[{"value":"/ Valid values: 1, 2, 4, 8, and 16.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37868,"byte_end":37905,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38039,"byte_end":38051,"line_start":1111,"line_end":1111,"column_start":9,"column_end":21},"name":"border_color","qualname":"::SamplerDescriptor::border_color","value":"std::option::Option<wgpu_types::SamplerBorderColor>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Border color to use when address_mode is [`AddressMode::ClampToBorder`]\n","sig":null,"attributes":[{"value":"/ Border color to use when address_mode is [`AddressMode::ClampToBorder`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":37955,"byte_end":38030,"line_start":1110,"line_end":1110,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38744,"byte_end":38758,"line_start":1135,"line_end":1135,"column_start":12,"column_end":26},"name":"BindGroupEntry","qualname":"::BindGroupEntry","value":"BindGroupEntry { binding, resource }","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"decl_id":null,"docs":" Bindable resource and the slot to bind it to.\n","sig":null,"attributes":[{"value":"/ Bindable resource and the slot to bind it to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38659,"byte_end":38708,"line_start":1133,"line_end":1133,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38919,"byte_end":38926,"line_start":1138,"line_end":1138,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupEntry::binding","value":"u32","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Slot for which binding provides resource. Corresponds to an entry of the same\n binding index in the [`BindGroupLayoutDescriptor`].\n","sig":null,"attributes":[{"value":"/ Slot for which binding provides resource. Corresponds to an entry of the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38769,"byte_end":38850,"line_start":1136,"line_end":1136,"column_start":5,"column_end":86}},{"value":"/ binding index in the [`BindGroupLayoutDescriptor`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38855,"byte_end":38910,"line_start":1137,"line_end":1137,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38983,"byte_end":38991,"line_start":1140,"line_end":1140,"column_start":9,"column_end":17},"name":"resource","qualname":"::BindGroupEntry::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Resource to attach to the binding\n","sig":null,"attributes":[{"value":"/ Resource to attach to the binding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38937,"byte_end":38974,"line_start":1139,"line_end":1139,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39117,"byte_end":39136,"line_start":1145,"line_end":1145,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { label, layout, entries }","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818}],"decl_id":null,"docs":" Describes a group of bindings and the resources to be bound.\n","sig":null,"attributes":[{"value":"/ Describes a group of bindings and the resources to be bound.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39017,"byte_end":39081,"line_start":1143,"line_end":1143,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39255,"byte_end":39260,"line_start":1147,"line_end":1147,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Debug label of the bind group. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39147,"byte_end":39246,"line_start":1146,"line_end":1146,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39356,"byte_end":39362,"line_start":1149,"line_end":1149,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The [`BindGroupLayout`] that corresponds to this bind group.\n","sig":null,"attributes":[{"value":"/ The [`BindGroupLayout`] that corresponds to this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39283,"byte_end":39347,"line_start":1148,"line_end":1148,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39443,"byte_end":39450,"line_start":1151,"line_end":1151,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupDescriptor::entries","value":"&'a [BindGroupEntry<'a>]","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39389,"byte_end":39434,"line_start":1150,"line_end":1150,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39724,"byte_end":39744,"line_start":1159,"line_end":1159,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { label, color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" Describes the attachments of a render pass.","sig":null,"attributes":[{"value":"/ Describes the attachments of a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39481,"byte_end":39528,"line_start":1154,"line_end":1154,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39529,"byte_end":39532,"line_start":1155,"line_end":1155,"column_start":1,"column_end":4}},{"value":"/ Note: separate lifetimes are needed because the texture views","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39533,"byte_end":39598,"line_start":1156,"line_end":1156,"column_start":1,"column_end":66}},{"value":"/ have to live as long as the pass is recorded, while everything else doesn't.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39599,"byte_end":39679,"line_start":1157,"line_end":1157,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39868,"byte_end":39873,"line_start":1161,"line_end":1161,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPassDescriptor::label","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":" Debug label of the render pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39759,"byte_end":39859,"line_start":1160,"line_end":1160,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39950,"byte_end":39967,"line_start":1163,"line_end":1163,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'b [RenderPassColorAttachmentDescriptor<'a>]","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":39896,"byte_end":39941,"line_start":1162,"line_end":1162,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40093,"byte_end":40117,"line_start":1165,"line_end":1165,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<RenderPassDepthStencilAttachmentDescriptor<'a>>","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40020,"byte_end":40084,"line_start":1164,"line_end":1164,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40286,"byte_end":40304,"line_start":1170,"line_end":1170,"column_start":12,"column_end":30},"name":"VertexBufferLayout","qualname":"::VertexBufferLayout","value":"VertexBufferLayout { array_stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847}],"decl_id":null,"docs":" Describes how the vertex buffer is interpreted.\n","sig":null,"attributes":[{"value":"/ Describes how the vertex buffer is interpreted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40178,"byte_end":40229,"line_start":1168,"line_end":1168,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1845},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40382,"byte_end":40394,"line_start":1172,"line_end":1172,"column_start":9,"column_end":21},"name":"array_stride","qualname":"::VertexBufferLayout::array_stride","value":"u64","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40315,"byte_end":40373,"line_start":1171,"line_end":1171,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40478,"byte_end":40487,"line_start":1174,"line_end":1174,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferLayout::step_mode","value":"wgpu_types::InputStepMode","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" How often this vertex buffer is \"stepped\" forward.\n","sig":null,"attributes":[{"value":"/ How often this vertex buffer is \"stepped\" forward.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40415,"byte_end":40469,"line_start":1173,"line_end":1173,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1847},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40575,"byte_end":40585,"line_start":1176,"line_end":1176,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferLayout::attributes","value":"&'a [wgpu_types::VertexAttribute]","parent":{"krate":0,"index":1843},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40508,"byte_end":40566,"line_start":1175,"line_end":1175,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40703,"byte_end":40714,"line_start":1181,"line_end":1181,"column_start":12,"column_end":23},"name":"VertexState","qualname":"::VertexState","value":"VertexState { module, entry_point, buffers }","parent":null,"children":[{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873}],"decl_id":null,"docs":" Describes the vertex process in a render pipeline.\n","sig":null,"attributes":[{"value":"/ Describes the vertex process in a render pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40613,"byte_end":40667,"line_start":1179,"line_end":1179,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1871},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40780,"byte_end":40786,"line_start":1183,"line_end":1183,"column_start":9,"column_end":15},"name":"module","qualname":"::VertexState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40725,"byte_end":40771,"line_start":1182,"line_end":1182,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1872},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40955,"byte_end":40966,"line_start":1186,"line_end":1186,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::VertexState::entry_point","value":"&'a str","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40810,"byte_end":40903,"line_start":1184,"line_end":1184,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40908,"byte_end":40946,"line_start":1185,"line_end":1185,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41051,"byte_end":41058,"line_start":1188,"line_end":1188,"column_start":9,"column_end":16},"name":"buffers","qualname":"::VertexState::buffers","value":"&'a [VertexBufferLayout<'a>]","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":40981,"byte_end":41042,"line_start":1187,"line_end":1187,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1880},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41185,"byte_end":41198,"line_start":1193,"line_end":1193,"column_start":12,"column_end":25},"name":"FragmentState","qualname":"::FragmentState","value":"FragmentState { module, entry_point, targets }","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"decl_id":null,"docs":" Describes the fragment process in a render pipeline.\n","sig":null,"attributes":[{"value":"/ Describes the fragment process in a render pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41093,"byte_end":41149,"line_start":1191,"line_end":1191,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41264,"byte_end":41270,"line_start":1195,"line_end":1195,"column_start":9,"column_end":15},"name":"module","qualname":"::FragmentState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41209,"byte_end":41255,"line_start":1194,"line_end":1194,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1883},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41439,"byte_end":41450,"line_start":1198,"line_end":1198,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::FragmentState::entry_point","value":"&'a str","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41294,"byte_end":41387,"line_start":1196,"line_end":1196,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41392,"byte_end":41430,"line_start":1197,"line_end":1197,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1884},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41535,"byte_end":41542,"line_start":1200,"line_end":1200,"column_start":9,"column_end":16},"name":"targets","qualname":"::FragmentState::targets","value":"&'a [wgpu_types::ColorTargetState]","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41465,"byte_end":41526,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1891},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41650,"byte_end":41674,"line_start":1205,"line_end":1205,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { label, layout, vertex, primitive, depth_stencil, multisample, fragment }","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899}],"decl_id":null,"docs":" Describes a render (graphics) pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a render (graphics) pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41571,"byte_end":41614,"line_start":1203,"line_end":1203,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41791,"byte_end":41796,"line_start":1207,"line_end":1207,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41685,"byte_end":41782,"line_start":1206,"line_end":1206,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1894},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41876,"byte_end":41882,"line_start":1209,"line_end":1209,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41819,"byte_end":41867,"line_start":1208,"line_end":1208,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1895},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42002,"byte_end":42008,"line_start":1211,"line_end":1211,"column_start":9,"column_end":15},"name":"vertex","qualname":"::RenderPipelineDescriptor::vertex","value":"VertexState<'a>","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The compiled vertex stage, its entry point, and the input buffers layout.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage, its entry point, and the input buffers layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":41916,"byte_end":41993,"line_start":1210,"line_end":1210,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42125,"byte_end":42134,"line_start":1213,"line_end":1213,"column_start":9,"column_end":18},"name":"primitive","qualname":"::RenderPipelineDescriptor::primitive","value":"wgpu_types::PrimitiveState","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The properties of the pipeline at the primitive assembly and rasterization level.\n","sig":null,"attributes":[{"value":"/ The properties of the pipeline at the primitive assembly and rasterization level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42031,"byte_end":42116,"line_start":1212,"line_end":1212,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42256,"byte_end":42269,"line_start":1215,"line_end":1215,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::RenderPipelineDescriptor::depth_stencil","value":"std::option::Option<wgpu_types::DepthStencilState>","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42156,"byte_end":42247,"line_start":1214,"line_end":1214,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":1898},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42361,"byte_end":42372,"line_start":1217,"line_end":1217,"column_start":9,"column_end":20},"name":"multisample","qualname":"::RenderPipelineDescriptor::multisample","value":"wgpu_types::MultisampleState","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The multi-sampling properties of the pipeline.\n","sig":null,"attributes":[{"value":"/ The multi-sampling properties of the pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42302,"byte_end":42352,"line_start":1216,"line_end":1216,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42477,"byte_end":42485,"line_start":1219,"line_end":1219,"column_start":9,"column_end":17},"name":"fragment","qualname":"::RenderPipelineDescriptor::fragment","value":"std::option::Option<FragmentState<'a>>","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":" The compiled fragment stage, its entry point, and the color targets.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage, its entry point, and the color targets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42396,"byte_end":42468,"line_start":1218,"line_end":1218,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42610,"byte_end":42631,"line_start":1224,"line_end":1224,"column_start":12,"column_end":33},"name":"ComputePassDescriptor","qualname":"::ComputePassDescriptor","value":"ComputePassDescriptor { label }","parent":null,"children":[{"krate":0,"index":1908}],"decl_id":null,"docs":" Describes the attachments of a compute pass.\n","sig":null,"attributes":[{"value":"/ Describes the attachments of a compute pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42517,"byte_end":42565,"line_start":1222,"line_end":1222,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42752,"byte_end":42757,"line_start":1226,"line_end":1226,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePassDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Debug label of the compute pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the compute pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42642,"byte_end":42743,"line_start":1225,"line_end":1225,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":1918},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42848,"byte_end":42873,"line_start":1231,"line_end":1231,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { label, layout, module, entry_point }","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923}],"decl_id":null,"docs":" Describes a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42779,"byte_end":42812,"line_start":1229,"line_end":1229,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1920},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42990,"byte_end":42995,"line_start":1233,"line_end":1233,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":42884,"byte_end":42981,"line_start":1232,"line_end":1232,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43075,"byte_end":43081,"line_start":1235,"line_end":1235,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43018,"byte_end":43066,"line_start":1234,"line_end":1234,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43170,"byte_end":43176,"line_start":1237,"line_end":1237,"column_start":9,"column_end":15},"name":"module","qualname":"::ComputePipelineDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43115,"byte_end":43161,"line_start":1236,"line_end":1236,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43345,"byte_end":43356,"line_start":1240,"line_end":1240,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ComputePipelineDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43200,"byte_end":43293,"line_start":1238,"line_end":1238,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43298,"byte_end":43336,"line_start":1239,"line_end":1239,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1123},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43496,"byte_end":43510,"line_start":1245,"line_end":1245,"column_start":10,"column_end":24},"name":"BufferCopyView","qualname":"::BufferCopyView","value":"BufferCopyViewBase<&'a Buffer>","parent":null,"children":[],"decl_id":null,"docs":" View of a buffer which can be used to copy to/from a texture.\n","sig":null,"attributes":[{"value":"/ View of a buffer which can be used to copy to/from a texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43421,"byte_end":43486,"line_start":1244,"line_end":1244,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43686,"byte_end":43701,"line_start":1249,"line_end":1249,"column_start":10,"column_end":25},"name":"TextureCopyView","qualname":"::TextureCopyView","value":"TextureCopyViewBase<&'a Texture>","parent":null,"children":[],"decl_id":null,"docs":" View of a texture which can be used to copy to/from a buffer/texture.\n","sig":null,"attributes":[{"value":"/ View of a texture which can be used to copy to/from a buffer/texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43603,"byte_end":43676,"line_start":1248,"line_end":1248,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43815,"byte_end":43840,"line_start":1253,"line_end":1253,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { label, entries }","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933}],"decl_id":null,"docs":" Describes a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Describes a [`BindGroupLayout`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43743,"byte_end":43779,"line_start":1251,"line_end":1251,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43966,"byte_end":43971,"line_start":1255,"line_end":1255,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43851,"byte_end":43957,"line_start":1254,"line_end":1254,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44048,"byte_end":44055,"line_start":1258,"line_end":1258,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupLayoutDescriptor::entries","value":"&'a [wgpu_types::BindGroupLayoutEntry]","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Array of entries in this BindGroupLayout\n","sig":null,"attributes":[{"value":"/ Array of entries in this BindGroupLayout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":43995,"byte_end":44039,"line_start":1257,"line_end":1257,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44194,"byte_end":44223,"line_start":1263,"line_end":1263,"column_start":12,"column_end":41},"name":"RenderBundleEncoderDescriptor","qualname":"::RenderBundleEncoderDescriptor","value":"RenderBundleEncoderDescriptor { label, color_formats, depth_stencil_format, sample_count }","parent":null,"children":[{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945}],"decl_id":null,"docs":" Describes a [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundleEncoder`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44088,"byte_end":44128,"line_start":1261,"line_end":1261,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44353,"byte_end":44358,"line_start":1265,"line_end":1265,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderBundleEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44234,"byte_end":44344,"line_start":1264,"line_end":1264,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":1943},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44596,"byte_end":44609,"line_start":1268,"line_end":1268,"column_start":9,"column_end":22},"name":"color_formats","qualname":"::RenderBundleEncoderDescriptor::color_formats","value":"&'a [wgpu_types::TextureFormat]","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" The formats of the color attachments that this render bundle is capable to rendering to. This\n must match the formats of the color attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the color attachments that this render bundle is capable to rendering to. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44381,"byte_end":44478,"line_start":1266,"line_end":1266,"column_start":5,"column_end":102}},{"value":"/ must match the formats of the color attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44483,"byte_end":44587,"line_start":1267,"line_end":1267,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44850,"byte_end":44870,"line_start":1271,"line_end":1271,"column_start":9,"column_end":29},"name":"depth_stencil_format","qualname":"::RenderBundleEncoderDescriptor::depth_stencil_format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" The formats of the depth attachment that this render bundle is capable to rendering to. This\n must match the formats of the depth attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the depth attachment that this render bundle is capable to rendering to. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44636,"byte_end":44732,"line_start":1269,"line_end":1269,"column_start":5,"column_end":101}},{"value":"/ must match the formats of the depth attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44737,"byte_end":44841,"line_start":1270,"line_end":1270,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45045,"byte_end":45057,"line_start":1274,"line_end":1274,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderBundleEncoderDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Sample count this render bundle is capable of rendering to. This must match the pipelines and\n the renderpasses it is used in.\n","sig":null,"attributes":[{"value":"/ Sample count this render bundle is capable of rendering to. This must match the pipelines and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":44899,"byte_end":44996,"line_start":1272,"line_end":1272,"column_start":5,"column_end":102}},{"value":"/ the renderpasses it is used in.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45001,"byte_end":45036,"line_start":1273,"line_end":1273,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45141,"byte_end":45157,"line_start":1279,"line_end":1279,"column_start":12,"column_end":28},"name":"SwapChainTexture","qualname":"::SwapChainTexture","value":"SwapChainTexture { view }","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1972}],"decl_id":null,"docs":" Swap chain image that can be rendered to.\n","sig":null,"attributes":[{"value":"/ Swap chain image that can be rendered to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45067,"byte_end":45112,"line_start":1277,"line_end":1277,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45206,"byte_end":45210,"line_start":1281,"line_end":1281,"column_start":9,"column_end":13},"name":"view","qualname":"::SwapChainTexture::view","value":"TextureView","parent":{"krate":0,"index":1970},"children":[],"decl_id":null,"docs":" Accessible view of the frame.\n","sig":null,"attributes":[{"value":"/ Accessible view of the frame.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45164,"byte_end":45197,"line_start":1280,"line_end":1280,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1975},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45376,"byte_end":45390,"line_start":1287,"line_end":1287,"column_start":12,"column_end":26},"name":"SwapChainFrame","qualname":"::SwapChainFrame","value":"SwapChainFrame { output, suboptimal }","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977}],"decl_id":null,"docs":" Result of a successful call to [`SwapChain::get_current_frame`].\n","sig":null,"attributes":[{"value":"/ Result of a successful call to [`SwapChain::get_current_frame`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45279,"byte_end":45347,"line_start":1285,"line_end":1285,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1976},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45467,"byte_end":45473,"line_start":1289,"line_end":1289,"column_start":9,"column_end":15},"name":"output","qualname":"::SwapChainFrame::output","value":"SwapChainTexture","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The texture into which the next frame should be rendered.\n","sig":null,"attributes":[{"value":"/ The texture into which the next frame should be rendered.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45397,"byte_end":45458,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1977},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45629,"byte_end":45639,"line_start":1292,"line_end":1292,"column_start":9,"column_end":19},"name":"suboptimal","qualname":"::SwapChainFrame::suboptimal","value":"bool","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" `true` if the acquired buffer can still be used for rendering,\n but should be recreated for maximum performance.\n","sig":null,"attributes":[{"value":"/ `true` if the acquired buffer can still be used for rendering,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45497,"byte_end":45563,"line_start":1290,"line_end":1290,"column_start":5,"column_end":71}},{"value":"/ but should be recreated for maximum performance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45568,"byte_end":45620,"line_start":1291,"line_end":1291,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1981},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45865,"byte_end":45872,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::SwapChainError::Timeout","value":"SwapChainError::Timeout","parent":{"krate":0,"index":1980},"children":[],"decl_id":null,"docs":" A timeout was encountered while trying to acquire the next frame.\n","sig":null,"attributes":[{"value":"/ A timeout was encountered while trying to acquire the next frame.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45791,"byte_end":45860,"line_start":1298,"line_end":1298,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1983},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45968,"byte_end":45976,"line_start":1301,"line_end":1301,"column_start":5,"column_end":13},"name":"Outdated","qualname":"::SwapChainError::Outdated","value":"SwapChainError::Outdated","parent":{"krate":0,"index":1980},"children":[],"decl_id":null,"docs":" The underlying surface has changed, and therefore the swap chain must be updated.\n","sig":null,"attributes":[{"value":"/ The underlying surface has changed, and therefore the swap chain must be updated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45878,"byte_end":45963,"line_start":1300,"line_end":1300,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1985},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46046,"byte_end":46050,"line_start":1303,"line_end":1303,"column_start":5,"column_end":9},"name":"Lost","qualname":"::SwapChainError::Lost","value":"SwapChainError::Lost","parent":{"krate":0,"index":1980},"children":[],"decl_id":null,"docs":" The swap chain has been lost and needs to be recreated.\n","sig":null,"attributes":[{"value":"/ The swap chain has been lost and needs to be recreated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45982,"byte_end":46041,"line_start":1302,"line_end":1302,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1987},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46118,"byte_end":46129,"line_start":1305,"line_end":1305,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::SwapChainError::OutOfMemory","value":"SwapChainError::OutOfMemory","parent":{"krate":0,"index":1980},"children":[],"decl_id":null,"docs":" There is no more memory left to allocate a new frame.\n","sig":null,"attributes":[{"value":"/ There is no more memory left to allocate a new frame.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46056,"byte_end":46113,"line_start":1304,"line_end":1304,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":1980},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45770,"byte_end":45784,"line_start":1297,"line_end":1297,"column_start":10,"column_end":24},"name":"SwapChainError","qualname":"::SwapChainError","value":"pub enum SwapChainError { Timeout, Outdated, Lost, OutOfMemory, }","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987}],"decl_id":null,"docs":" Result of an unsuccessful call to [`SwapChain::get_current_frame`].\n","sig":null,"attributes":[{"value":"/ Result of an unsuccessful call to [`SwapChain::get_current_frame`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":45650,"byte_end":45721,"line_start":1295,"line_end":1295,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46942,"byte_end":46945,"line_start":1328,"line_end":1328,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(BackendBit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46744,"byte_end":46779,"line_start":1322,"line_end":1322,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46784,"byte_end":46787,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46792,"byte_end":46807,"line_start":1324,"line_end":1324,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46812,"byte_end":46815,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Controls from which [backends][BackendBit] wgpu will choose","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46820,"byte_end":46898,"line_start":1326,"line_end":1326,"column_start":5,"column_end":83}},{"value":"/   during instantiation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46903,"byte_end":46930,"line_start":1327,"line_end":1327,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47299,"byte_end":47317,"line_start":1340,"line_end":1340,"column_start":12,"column_end":30},"name":"enumerate_adapters","qualname":"<Instance>::enumerate_adapters","value":"pub fn enumerate_adapters(&Self, BackendBit) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all available [`Adapter`]s that match the given [`BackendBit`].","sig":null,"attributes":[{"value":"/ Retrieves all available [`Adapter`]s that match the given [`BackendBit`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47068,"byte_end":47145,"line_start":1334,"line_end":1334,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47150,"byte_end":47153,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47158,"byte_end":47173,"line_start":1336,"line_end":1336,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47178,"byte_end":47181,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Backends from which to enumerate adapters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47186,"byte_end":47247,"line_start":1338,"line_end":1338,"column_start":5,"column_end":66}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47252,"byte_end":47287,"line_start":1339,"line_end":1339,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47934,"byte_end":47949,"line_start":1356,"line_end":1356,"column_start":12,"column_end":27},"name":"request_adapter","qualname":"<Instance>::request_adapter","value":"pub fn request_adapter(&Self, &RequestAdapterOptions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47656,"byte_end":47735,"line_start":1351,"line_end":1351,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47740,"byte_end":47743,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47748,"byte_end":47824,"line_start":1353,"line_end":1353,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47829,"byte_end":47832,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":47837,"byte_end":47922,"line_start":1355,"line_end":1355,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48440,"byte_end":48454,"line_start":1370,"line_end":1370,"column_start":19,"column_end":33},"name":"create_surface","qualname":"<Instance>::create_surface","value":"pub unsafe fn create_surface<W: raw_window_handle::HasRawWindowHandle>(&Self,\n                                                                       &W)\n-> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48264,"byte_end":48311,"line_start":1365,"line_end":1365,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48316,"byte_end":48319,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48324,"byte_end":48336,"line_start":1367,"line_end":1367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48341,"byte_end":48344,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ - Raw Window Handle must be a valid object to create a surface upon.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":48349,"byte_end":48421,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49910,"byte_end":49924,"line_start":1411,"line_end":1411,"column_start":12,"column_end":26},"name":"request_device","qualname":"<Adapter>::request_device","value":"pub fn request_device(&Self, &DeviceDescriptor, Option<&std::path::Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49145,"byte_end":49219,"line_start":1395,"line_end":1395,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49224,"byte_end":49227,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Returns the [`Device`] together with a [`Queue`] that executes command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49232,"byte_end":49315,"line_start":1397,"line_end":1397,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49320,"byte_end":49323,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49328,"byte_end":49343,"line_start":1399,"line_end":1399,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49348,"byte_end":49351,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ - `desc` - Description of the features and limits requested from the given device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49356,"byte_end":49442,"line_start":1401,"line_end":1401,"column_start":5,"column_end":91}},{"value":"/ - `trace_path` - Can be used for API call tracing, if that feature is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49447,"byte_end":49520,"line_start":1402,"line_end":1402,"column_start":5,"column_end":78}},{"value":"/   enabled in `wgpu-core`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49525,"byte_end":49554,"line_start":1403,"line_end":1403,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49559,"byte_end":49562,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49567,"byte_end":49579,"line_start":1405,"line_end":1405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49584,"byte_end":49587,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ - Features specified by `desc` are not supported by this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49592,"byte_end":49661,"line_start":1407,"line_end":1407,"column_start":5,"column_end":74}},{"value":"/ - Unsafe features were requested but not enabled when requesting the adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49666,"byte_end":49747,"line_start":1408,"line_end":1408,"column_start":5,"column_end":86}},{"value":"/ - Limits requested exceed the values provided by the adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49752,"byte_end":49817,"line_start":1409,"line_end":1409,"column_start":5,"column_end":70}},{"value":"/ - Adapter does not support all features wgpu requires to safely operate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49822,"byte_end":49898,"line_start":1410,"line_end":1410,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":50764,"byte_end":50795,"line_start":1435,"line_end":1435,"column_start":12,"column_end":43},"name":"get_swap_chain_preferred_format","qualname":"<Adapter>::get_swap_chain_preferred_format","value":"pub fn get_swap_chain_preferred_format(&Self, &Surface) -> TextureFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns an optimal texture format to use for the [`SwapChain`] with this adapter.\n","sig":null,"attributes":[{"value":"/ Returns an optimal texture format to use for the [`SwapChain`] with this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":50667,"byte_end":50752,"line_start":1434,"line_end":1434,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51134,"byte_end":51142,"line_start":1443,"line_end":1443,"column_start":12,"column_end":20},"name":"features","qualname":"<Adapter>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that are supported with this adapter.","sig":null,"attributes":[{"value":"/ List all features that are supported with this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":50948,"byte_end":51007,"line_start":1439,"line_end":1439,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51012,"byte_end":51015,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Features must be explicitly requested in [`Adapter::request_device`] in order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51020,"byte_end":51101,"line_start":1441,"line_end":1441,"column_start":5,"column_end":86}},{"value":"/ to use them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51106,"byte_end":51122,"line_start":1442,"line_end":1442,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51447,"byte_end":51453,"line_start":1451,"line_end":1451,"column_start":12,"column_end":18},"name":"limits","qualname":"<Adapter>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List the \"best\" limits that are supported by this adapter.","sig":null,"attributes":[{"value":"/ List the \"best\" limits that are supported by this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51235,"byte_end":51297,"line_start":1447,"line_end":1447,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51302,"byte_end":51305,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ Limits must be explicitly requested in [`Adapter::request_device`] to set","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51310,"byte_end":51387,"line_start":1449,"line_end":1449,"column_start":5,"column_end":82}},{"value":"/ the values that you are allowed to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51392,"byte_end":51435,"line_start":1450,"line_end":1450,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51698,"byte_end":51718,"line_start":1458,"line_end":1458,"column_start":12,"column_end":32},"name":"get_timestamp_period","qualname":"<Adapter>::get_timestamp_period","value":"pub fn get_timestamp_period(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the amount of nanoseconds each tick of a timestamp query represents.","sig":null,"attributes":[{"value":"/ Gets the amount of nanoseconds each tick of a timestamp query represents.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51542,"byte_end":51619,"line_start":1455,"line_end":1455,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51624,"byte_end":51627,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ Returns zero if timestamp queries are unsupported.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51632,"byte_end":51686,"line_start":1457,"line_end":1457,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51868,"byte_end":51876,"line_start":1463,"line_end":1463,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"pub fn get_info(&Self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51818,"byte_end":51856,"line_start":1462,"line_end":1462,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52280,"byte_end":52307,"line_start":1471,"line_end":1471,"column_start":12,"column_end":39},"name":"get_texture_format_features","qualname":"<Adapter>::get_texture_format_features","value":"pub fn get_texture_format_features(&Self, wgt::TextureFormat)\n-> wgt::TextureFormatFeatures","parent":null,"children":[],"decl_id":null,"docs":" Returns the features supported for a given texture format by this adapter.","sig":null,"attributes":[{"value":"/ Returns the features supported for a given texture format by this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":51972,"byte_end":52050,"line_start":1467,"line_end":1467,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52055,"byte_end":52058,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ Note that the WebGPU spec further restricts the available usages/features.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52063,"byte_end":52141,"line_start":1469,"line_end":1469,"column_start":5,"column_end":83}},{"value":"/ To disable these restrictions on a device, request the [`Features::TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES`] feature.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52146,"byte_end":52268,"line_start":1470,"line_end":1470,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52644,"byte_end":52648,"line_start":1483,"line_end":1483,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"pub fn poll(&Self, Maintain)","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52512,"byte_end":52566,"line_start":1480,"line_end":1480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52571,"byte_end":52574,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ no-op on the web, device is automatically polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52579,"byte_end":52632,"line_start":1482,"line_end":1482,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52892,"byte_end":52900,"line_start":1490,"line_end":1490,"column_start":12,"column_end":20},"name":"features","qualname":"<Device>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that may be used with this device.","sig":null,"attributes":[{"value":"/ List all features that may be used with this device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52755,"byte_end":52811,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52816,"byte_end":52819,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Functions may panic if you use unsupported features.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52824,"byte_end":52880,"line_start":1489,"line_end":1489,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53133,"byte_end":53139,"line_start":1497,"line_end":1497,"column_start":12,"column_end":18},"name":"limits","qualname":"<Device>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List all limits that were requested of this device.","sig":null,"attributes":[{"value":"/ List all limits that were requested of this device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52992,"byte_end":53047,"line_start":1494,"line_end":1494,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53052,"byte_end":53055,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ If any of these limits are exceeded, functions may panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53060,"byte_end":53121,"line_start":1496,"line_end":1496,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53306,"byte_end":53326,"line_start":1502,"line_end":1502,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"pub fn create_shader_module(&Self, &ShaderModuleDescriptor) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53227,"byte_end":53294,"line_start":1501,"line_end":1501,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53613,"byte_end":53635,"line_start":1510,"line_end":1510,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"pub fn create_command_encoder(&Self, &CommandEncoderDescriptor)\n-> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53561,"byte_end":53601,"line_start":1509,"line_end":1509,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53971,"byte_end":53999,"line_start":1519,"line_end":1519,"column_start":12,"column_end":40},"name":"create_render_bundle_encoder","qualname":"<Device>::create_render_bundle_encoder","value":"pub fn create_render_bundle_encoder(&Self, &RenderBundleEncoderDescriptor)\n-> RenderBundleEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`RenderBundleEncoder`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":53914,"byte_end":53959,"line_start":1518,"line_end":1518,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54393,"byte_end":54410,"line_start":1532,"line_end":1532,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"pub fn create_bind_group(&Self, &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BindGroup`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`BindGroup`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54349,"byte_end":54381,"line_start":1531,"line_end":1531,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54679,"byte_end":54703,"line_start":1540,"line_end":1540,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"pub fn create_bind_group_layout(&Self, &BindGroupLayoutDescriptor)\n-> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`BindGroupLayout`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54633,"byte_end":54667,"line_start":1539,"line_end":1539,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54996,"byte_end":55018,"line_start":1548,"line_end":1548,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"pub fn create_pipeline_layout(&Self, &PipelineLayoutDescriptor)\n-> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PipelineLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`PipelineLayout`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":54951,"byte_end":54984,"line_start":1547,"line_end":1547,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55306,"byte_end":55328,"line_start":1556,"line_end":1556,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"pub fn create_render_pipeline(&Self, &RenderPipelineDescriptor)\n-> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`RenderPipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`RenderPipeline`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55261,"byte_end":55294,"line_start":1555,"line_end":1555,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55617,"byte_end":55640,"line_start":1564,"line_end":1564,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"pub fn create_compute_pipeline(&Self, &ComputePipelineDescriptor)\n-> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`ComputePipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`ComputePipeline`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55571,"byte_end":55605,"line_start":1563,"line_end":1563,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55924,"byte_end":55937,"line_start":1572,"line_end":1572,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"pub fn create_buffer(&Self, &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Creates a [`Buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":55887,"byte_end":55912,"line_start":1571,"line_end":1571,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56497,"byte_end":56511,"line_start":1588,"line_end":1588,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"pub fn create_texture(&Self, &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56387,"byte_end":56417,"line_start":1585,"line_end":1585,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56422,"byte_end":56425,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56430,"byte_end":56485,"line_start":1587,"line_end":1587,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56854,"byte_end":56868,"line_start":1599,"line_end":1599,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"pub fn create_sampler(&Self, &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56750,"byte_end":56780,"line_start":1596,"line_end":1596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56785,"byte_end":56788,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":56793,"byte_end":56842,"line_start":1598,"line_end":1598,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57125,"byte_end":57141,"line_start":1607,"line_end":1607,"column_start":12,"column_end":28},"name":"create_query_set","qualname":"<Device>::create_query_set","value":"pub fn create_query_set(&Self, &QuerySetDescriptor) -> QuerySet","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`QuerySet`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`QuerySet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57082,"byte_end":57113,"line_start":1606,"line_end":1606,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57609,"byte_end":57626,"line_start":1620,"line_end":1620,"column_start":12,"column_end":29},"name":"create_swap_chain","qualname":"<Device>::create_swap_chain","value":"pub fn create_swap_chain(&Self, &Surface, &SwapChainDescriptor) -> SwapChain","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SwapChain`] which targets `surface`.","sig":null,"attributes":[{"value":"/ Create a new [`SwapChain`] which targets `surface`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57360,"byte_end":57415,"line_start":1614,"line_end":1614,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57420,"byte_end":57423,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57428,"byte_end":57440,"line_start":1616,"line_end":1616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57445,"byte_end":57448,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ - A old [`SwapChainFrame`] is still alive referencing an old swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57453,"byte_end":57528,"line_start":1618,"line_end":1618,"column_start":5,"column_end":80}},{"value":"/ - Texture format requested is unsupported on the swap chain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57533,"byte_end":57597,"line_start":1619,"line_end":1619,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57960,"byte_end":57979,"line_start":1628,"line_end":1628,"column_start":12,"column_end":31},"name":"on_uncaptured_error","qualname":"<Device>::on_uncaptured_error","value":"pub fn on_uncaptured_error<impl UncapturedErrorHandler: UncapturedErrorHandler>(&Self,\n                                                                                impl UncapturedErrorHandler)","parent":null,"children":[],"decl_id":null,"docs":" Set a callback for errors that are not handled in error scopes.\n","sig":null,"attributes":[{"value":"/ Set a callback for errors that are not handled in error scopes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":57881,"byte_end":57948,"line_start":1627,"line_end":1627,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58335,"byte_end":58353,"line_start":1643,"line_end":1643,"column_start":12,"column_end":30},"name":"RequestDeviceError","qualname":"::RequestDeviceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Requesting a device failed.\n","sig":null,"attributes":[{"value":"/ Requesting a device failed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58253,"byte_end":58284,"line_start":1641,"line_end":1641,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58673,"byte_end":58689,"line_start":1655,"line_end":1655,"column_start":12,"column_end":28},"name":"BufferAsyncError","qualname":"::BufferAsyncError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred when trying to async map a buffer.\n","sig":null,"attributes":[{"value":"/ Error occurred when trying to async map a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58569,"byte_end":58622,"line_start":1653,"line_end":1653,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59044,"byte_end":59048,"line_start":1669,"line_end":1669,"column_start":5,"column_end":9},"name":"Read","qualname":"::MapMode::Read","value":"MapMode::Read","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Map only for reading\n","sig":null,"attributes":[{"value":"/ Map only for reading","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59015,"byte_end":59039,"line_start":1668,"line_end":1668,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59083,"byte_end":59088,"line_start":1671,"line_end":1671,"column_start":5,"column_end":10},"name":"Write","qualname":"::MapMode::Write","value":"MapMode::Write","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Map only for writing\n","sig":null,"attributes":[{"value":"/ Map only for writing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59054,"byte_end":59078,"line_start":1670,"line_end":1670,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":2023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59001,"byte_end":59008,"line_start":1667,"line_end":1667,"column_start":10,"column_end":17},"name":"MapMode","qualname":"::MapMode","value":"pub enum MapMode { Read, Write, }","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2026}],"decl_id":null,"docs":" Type of buffer mapping.\n","sig":null,"attributes":[{"value":"/ Type of buffer mapping.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58923,"byte_end":58950,"line_start":1665,"line_end":1665,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2036},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59800,"byte_end":59810,"line_start":1698,"line_end":1698,"column_start":12,"column_end":22},"name":"BufferView","qualname":"::BufferView","value":"BufferView {  }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"decl_id":null,"docs":" Read only view into a mapped buffer.\n","sig":null,"attributes":[{"value":"/ Read only view into a mapped buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59731,"byte_end":59771,"line_start":1696,"line_end":1696,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59949,"byte_end":59962,"line_start":1705,"line_end":1705,"column_start":12,"column_end":25},"name":"BufferViewMut","qualname":"::BufferViewMut","value":"BufferViewMut {  }","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047}],"decl_id":null,"docs":" Write only view into mapped buffer.\n","sig":null,"attributes":[{"value":"/ Write only view into mapped buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":59881,"byte_end":59920,"line_start":1703,"line_end":1703,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61338,"byte_end":61355,"line_start":1772,"line_end":1772,"column_start":12,"column_end":29},"name":"as_entire_binding","qualname":"<Buffer>::as_entire_binding","value":"pub fn as_entire_binding(&Self) -> BindingResource","parent":null,"children":[],"decl_id":null,"docs":" Return the binding view of the entire buffer.\n","sig":null,"attributes":[{"value":"/ Return the binding view of the entire buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61277,"byte_end":61326,"line_start":1771,"line_end":1771,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61714,"byte_end":61719,"line_start":1782,"line_end":1782,"column_start":12,"column_end":17},"name":"slice","qualname":"<Buffer>::slice","value":"pub fn slice<S: RangeBounds<BufferAddress>>(&Self, S) -> BufferSlice","parent":null,"children":[],"decl_id":null,"docs":" Use only a portion of this Buffer for a given operation. Choosing a range with no end\n will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.\n","sig":null,"attributes":[{"value":"/ Use only a portion of this Buffer for a given operation. Choosing a range with no end","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61512,"byte_end":61601,"line_start":1780,"line_end":1780,"column_start":5,"column_end":94}},{"value":"/ will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61606,"byte_end":61702,"line_start":1781,"line_end":1781,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62044,"byte_end":62049,"line_start":1792,"line_end":1792,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"pub fn unmap(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61952,"byte_end":62032,"line_start":1791,"line_end":1791,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62244,"byte_end":62251,"line_start":1798,"line_end":1798,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Buffer>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62168,"byte_end":62232,"line_start":1797,"line_end":1797,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62920,"byte_end":62929,"line_start":1814,"line_end":1814,"column_start":12,"column_end":21},"name":"map_async","qualname":"<BufferSlice>::map_async","value":"pub fn map_async(&Self, MapMode) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer. Buffer is ready to map once the future is resolved.","sig":null,"attributes":[{"value":"/ Map the buffer. Buffer is ready to map once the future is resolved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62397,"byte_end":62468,"line_start":1806,"line_end":1806,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62473,"byte_end":62476,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ For the future to complete, `device.poll(...)` must be called elsewhere in the runtime, possibly integrated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62481,"byte_end":62592,"line_start":1808,"line_end":1808,"column_start":5,"column_end":116}},{"value":"/ into an event loop, run on a separate thread, or continually polled in the same task runtime that this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62597,"byte_end":62703,"line_start":1809,"line_end":1809,"column_start":5,"column_end":111}},{"value":"/ future will be run on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62708,"byte_end":62734,"line_start":1810,"line_end":1810,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62739,"byte_end":62742,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ It's expected that wgpu will eventually supply its own event loop infrastructure that will be easy to integrate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62747,"byte_end":62862,"line_start":1812,"line_end":1812,"column_start":5,"column_end":120}},{"value":"/ into other event loops, like winit's.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62867,"byte_end":62908,"line_start":1813,"line_end":1813,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":63797,"byte_end":63813,"line_start":1841,"line_end":1841,"column_start":12,"column_end":28},"name":"get_mapped_range","qualname":"<BufferSlice>::get_mapped_range","value":"pub fn get_mapped_range(&Self) -> BufferView","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":63584,"byte_end":63685,"line_start":1839,"line_end":1839,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":63690,"byte_end":63785,"line_start":1840,"line_end":1840,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64343,"byte_end":64363,"line_start":1853,"line_end":1853,"column_start":12,"column_end":32},"name":"get_mapped_range_mut","qualname":"<BufferSlice>::get_mapped_range_mut","value":"pub fn get_mapped_range_mut(&Self) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64130,"byte_end":64231,"line_start":1851,"line_end":1851,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64236,"byte_end":64331,"line_start":1852,"line_end":1852,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65005,"byte_end":65016,"line_start":1878,"line_end":1878,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"pub fn create_view(&Self, &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64958,"byte_end":64993,"line_start":1877,"line_end":1877,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65341,"byte_end":65348,"line_start":1887,"line_end":1887,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Texture>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65265,"byte_end":65329,"line_start":1886,"line_end":1886,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65895,"byte_end":65901,"line_start":1910,"line_end":1910,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"pub fn finish(Self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65792,"byte_end":65883,"line_start":1909,"line_end":1909,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66249,"byte_end":66266,"line_start":1920,"line_end":1920,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"pub fn begin_render_pass<'a>(&'a mut Self, &RenderPassDescriptor)\n-> RenderPass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66101,"byte_end":66139,"line_start":1917,"line_end":1917,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66144,"byte_end":66147,"line_start":1918,"line_end":1918,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66152,"byte_end":66237,"line_start":1919,"line_end":1919,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66676,"byte_end":66694,"line_start":1933,"line_end":1933,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"pub fn begin_compute_pass(&mut Self, &ComputePassDescriptor) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66525,"byte_end":66564,"line_start":1930,"line_end":1930,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66569,"byte_end":66572,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66577,"byte_end":66664,"line_start":1932,"line_end":1932,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67121,"byte_end":67142,"line_start":1946,"line_end":1946,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"pub fn copy_buffer_to_buffer(&mut Self, &Buffer, BufferAddress, &Buffer,\n                             BufferAddress, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66915,"byte_end":66956,"line_start":1940,"line_end":1940,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66961,"byte_end":66964,"line_start":1941,"line_end":1941,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66969,"byte_end":66981,"line_start":1942,"line_end":1942,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66986,"byte_end":66989,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ - Buffer offsets or copy size not a multiple of [`COPY_BUFFER_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":66994,"byte_end":67072,"line_start":1944,"line_end":1944,"column_start":5,"column_end":83}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67077,"byte_end":67109,"line_start":1945,"line_end":1945,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67858,"byte_end":67880,"line_start":1972,"line_end":1972,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"pub fn copy_buffer_to_texture(&mut Self, BufferCopyView, TextureCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67604,"byte_end":67645,"line_start":1965,"line_end":1965,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67650,"byte_end":67653,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67658,"byte_end":67670,"line_start":1967,"line_end":1967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67675,"byte_end":67678,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67683,"byte_end":67715,"line_start":1969,"line_end":1969,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67720,"byte_end":67753,"line_start":1970,"line_end":1970,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":67758,"byte_end":67846,"line_start":1971,"line_end":1971,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68459,"byte_end":68481,"line_start":1994,"line_end":1994,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"pub fn copy_texture_to_buffer(&mut Self, TextureCopyView, BufferCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68205,"byte_end":68246,"line_start":1987,"line_end":1987,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68251,"byte_end":68254,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68259,"byte_end":68271,"line_start":1989,"line_end":1989,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68276,"byte_end":68279,"line_start":1990,"line_end":1990,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68284,"byte_end":68316,"line_start":1991,"line_end":1991,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68321,"byte_end":68354,"line_start":1992,"line_end":1992,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68359,"byte_end":68447,"line_start":1993,"line_end":1993,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69069,"byte_end":69092,"line_start":2016,"line_end":2016,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"pub fn copy_texture_to_texture(&mut Self, TextureCopyView, TextureCopyView,\n                               Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68806,"byte_end":68848,"line_start":2009,"line_end":2009,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68853,"byte_end":68856,"line_start":2010,"line_end":2010,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68861,"byte_end":68873,"line_start":2011,"line_end":2011,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68878,"byte_end":68881,"line_start":2012,"line_end":2012,"column_start":5,"column_end":8}},{"value":"/ - Textures are not the same type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68886,"byte_end":68922,"line_start":2013,"line_end":2013,"column_start":5,"column_end":41}},{"value":"/ - If a depth texture, or a multisampled texture, the entire texture must be copied","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":68927,"byte_end":69013,"line_start":2014,"line_end":2014,"column_start":5,"column_end":91}},{"value":"/ - Copy would overrun either texture","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69018,"byte_end":69057,"line_start":2015,"line_end":2015,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69456,"byte_end":69475,"line_start":2032,"line_end":2032,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<CommandEncoder>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69419,"byte_end":69444,"line_start":2031,"line_end":2031,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69675,"byte_end":69691,"line_start":2037,"line_end":2037,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<CommandEncoder>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69600,"byte_end":69663,"line_start":2036,"line_end":2036,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69877,"byte_end":69892,"line_start":2042,"line_end":2042,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<CommandEncoder>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":69813,"byte_end":69865,"line_start":2041,"line_end":2041,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70533,"byte_end":70548,"line_start":2056,"line_end":2056,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<CommandEncoder>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue.\n The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70115,"byte_end":70172,"line_start":2049,"line_end":2049,"column_start":5,"column_end":62}},{"value":"/ The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70177,"byte_end":70262,"line_start":2050,"line_end":2050,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70267,"byte_end":70270,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Device::get_timestamp_period`] to get","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70275,"byte_end":70340,"line_start":2052,"line_end":2052,"column_start":5,"column_end":70}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70345,"byte_end":70407,"line_start":2053,"line_end":2053,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70412,"byte_end":70473,"line_start":2054,"line_end":2054,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70478,"byte_end":70521,"line_start":2055,"line_end":2055,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71147,"byte_end":71164,"line_start":2071,"line_end":2071,"column_start":12,"column_end":29},"name":"resolve_query_set","qualname":"<CommandEncoder>::resolve_query_set","value":"pub fn resolve_query_set(&mut Self, &QuerySet, Range<u32>, &Buffer,\n                         BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Resolve a query set, writing the results into the supplied destination buffer.","sig":null,"attributes":[{"value":"/ Resolve a query set, writing the results into the supplied destination buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70940,"byte_end":71022,"line_start":2068,"line_end":2068,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71027,"byte_end":71030,"line_start":2069,"line_end":2069,"column_start":5,"column_end":8}},{"value":"/ Queries may be between 8 and 40 bytes each. See [`PipelineStatisticsType`] for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71035,"byte_end":71135,"line_start":2070,"line_end":2070,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72023,"byte_end":72037,"line_start":2096,"line_end":2096,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71648,"byte_end":71730,"line_start":2091,"line_end":2091,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71735,"byte_end":71840,"line_start":2092,"line_end":2092,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71845,"byte_end":71848,"line_start":2093,"line_end":2093,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71853,"byte_end":71940,"line_start":2094,"line_end":2094,"column_start":5,"column_end":92}},{"value":"/ These offsets have to be aligned to [`BIND_BUFFER_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71945,"byte_end":72011,"line_start":2095,"line_end":2095,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72384,"byte_end":72396,"line_start":2108,"line_end":2108,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72249,"byte_end":72285,"line_start":2105,"line_end":2105,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72290,"byte_end":72293,"line_start":2106,"line_end":2106,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72298,"byte_end":72372,"line_start":2107,"line_end":2107,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72660,"byte_end":72675,"line_start":2115,"line_end":2115,"column_start":12,"column_end":27},"name":"set_blend_color","qualname":"<RenderPass>::set_blend_color","value":"pub fn set_blend_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend color as used by some of the blending modes.","sig":null,"attributes":[{"value":"/ Sets the blend color as used by some of the blending modes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72513,"byte_end":72576,"line_start":2112,"line_end":2112,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72581,"byte_end":72584,"line_start":2113,"line_end":2113,"column_start":5,"column_end":8}},{"value":"/ Subsequent blending tests will test against this value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72589,"byte_end":72648,"line_start":2114,"line_end":2114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72954,"byte_end":72970,"line_start":2123,"line_end":2123,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72753,"byte_end":72786,"line_start":2119,"line_end":2119,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72791,"byte_end":72794,"line_start":2120,"line_end":2120,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72799,"byte_end":72893,"line_start":2121,"line_end":2121,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":72898,"byte_end":72942,"line_start":2122,"line_end":2122,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73678,"byte_end":73695,"line_start":2143,"line_end":2143,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderPass>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73255,"byte_end":73292,"line_start":2133,"line_end":2133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73297,"byte_end":73300,"line_start":2134,"line_end":2134,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73305,"byte_end":73366,"line_start":2135,"line_end":2135,"column_start":5,"column_end":66}},{"value":"/ [`RenderPass`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73371,"byte_end":73444,"line_start":2136,"line_end":2136,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73449,"byte_end":73452,"line_start":2137,"line_end":2137,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73457,"byte_end":73521,"line_start":2138,"line_end":2138,"column_start":5,"column_end":69}},{"value":"/ [`VertexStateDescriptor::vertex_buffers`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73526,"byte_end":73572,"line_start":2139,"line_end":2139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73577,"byte_end":73580,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderPass::draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73585,"byte_end":73615,"line_start":2141,"line_end":2141,"column_start":5,"column_end":35}},{"value":"/ [`draw_indexed`]: RenderPass::draw_indexed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73620,"byte_end":73666,"line_start":2142,"line_end":2142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74093,"byte_end":74109,"line_start":2156,"line_end":2156,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"pub fn set_scissor_rect(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73957,"byte_end":73985,"line_start":2153,"line_end":2153,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73990,"byte_end":73993,"line_start":2154,"line_end":2154,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":73998,"byte_end":74081,"line_start":2155,"line_end":2155,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74349,"byte_end":74361,"line_start":2163,"line_end":2163,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"pub fn set_viewport(&mut Self, f32, f32, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74230,"byte_end":74259,"line_start":2160,"line_end":2160,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74264,"byte_end":74267,"line_start":2161,"line_end":2161,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74272,"byte_end":74337,"line_start":2162,"line_end":2162,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74628,"byte_end":74649,"line_start":2170,"line_end":2170,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"pub fn set_stencil_reference(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74514,"byte_end":74545,"line_start":2167,"line_end":2167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74550,"byte_end":74553,"line_start":2168,"line_end":2168,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74558,"byte_end":74616,"line_start":2169,"line_end":2169,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74899,"byte_end":74903,"line_start":2177,"line_end":2177,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74740,"byte_end":74794,"line_start":2174,"line_end":2174,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74799,"byte_end":74802,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":74807,"byte_end":74887,"line_start":2176,"line_end":2176,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75071,"byte_end":75090,"line_start":2182,"line_end":2182,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<RenderPass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75034,"byte_end":75059,"line_start":2181,"line_end":2181,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75247,"byte_end":75263,"line_start":2187,"line_end":2187,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<RenderPass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75172,"byte_end":75235,"line_start":2186,"line_end":2186,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75406,"byte_end":75421,"line_start":2192,"line_end":2192,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<RenderPass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75342,"byte_end":75394,"line_start":2191,"line_end":2191,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75763,"byte_end":75775,"line_start":2200,"line_end":2200,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75481,"byte_end":75570,"line_start":2196,"line_end":2196,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75575,"byte_end":75578,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75583,"byte_end":75677,"line_start":2198,"line_end":2198,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75682,"byte_end":75751,"line_start":2199,"line_end":2199,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76612,"byte_end":76625,"line_start":2219,"line_end":2219,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":75944,"byte_end":76045,"line_start":2204,"line_end":2204,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76050,"byte_end":76053,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76058,"byte_end":76138,"line_start":2206,"line_end":2206,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76143,"byte_end":76146,"line_start":2207,"line_end":2207,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76151,"byte_end":76216,"line_start":2208,"line_end":2208,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76221,"byte_end":76224,"line_start":2209,"line_end":2209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76229,"byte_end":76240,"line_start":2210,"line_end":2210,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76245,"byte_end":76259,"line_start":2211,"line_end":2211,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76264,"byte_end":76289,"line_start":2212,"line_end":2212,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76294,"byte_end":76355,"line_start":2213,"line_end":2213,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76360,"byte_end":76424,"line_start":2214,"line_end":2214,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76429,"byte_end":76496,"line_start":2215,"line_end":2215,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76501,"byte_end":76578,"line_start":2216,"line_end":2216,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76583,"byte_end":76588,"line_start":2217,"line_end":2217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76593,"byte_end":76600,"line_start":2218,"line_end":2218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77698,"byte_end":77719,"line_start":2241,"line_end":2241,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76780,"byte_end":76869,"line_start":2223,"line_end":2223,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76874,"byte_end":76925,"line_start":2224,"line_end":2224,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76930,"byte_end":76933,"line_start":2225,"line_end":2225,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":76938,"byte_end":77032,"line_start":2226,"line_end":2226,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77037,"byte_end":77106,"line_start":2227,"line_end":2227,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77111,"byte_end":77114,"line_start":2228,"line_end":2228,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77119,"byte_end":77184,"line_start":2229,"line_end":2229,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77189,"byte_end":77192,"line_start":2230,"line_end":2230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77197,"byte_end":77208,"line_start":2231,"line_end":2231,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77213,"byte_end":77227,"line_start":2232,"line_end":2232,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77232,"byte_end":77264,"line_start":2233,"line_end":2233,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77269,"byte_end":77330,"line_start":2234,"line_end":2234,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77335,"byte_end":77399,"line_start":2235,"line_end":2235,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77404,"byte_end":77471,"line_start":2236,"line_end":2236,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77476,"byte_end":77582,"line_start":2237,"line_end":2237,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77587,"byte_end":77664,"line_start":2238,"line_end":2238,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77669,"byte_end":77674,"line_start":2239,"line_end":2239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77679,"byte_end":77686,"line_start":2240,"line_end":2240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78056,"byte_end":78071,"line_start":2252,"line_end":2252,"column_start":12,"column_end":27},"name":"execute_bundles","qualname":"<RenderPass>::execute_bundles","value":"pub fn execute_bundles<I: Iterator<Item = &'a RenderBundle>>(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands\n that can be run together.\n","sig":null,"attributes":[{"value":"/ Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":77926,"byte_end":78010,"line_start":2250,"line_end":2250,"column_start":5,"column_end":89}},{"value":"/ that can be run together.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78015,"byte_end":78044,"line_start":2251,"line_end":2251,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79167,"byte_end":79186,"line_start":2278,"line_end":2278,"column_start":12,"column_end":31},"name":"multi_draw_indirect","qualname":"<RenderPass>::multi_draw_indirect","value":"pub fn multi_draw_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78373,"byte_end":78488,"line_start":2260,"line_end":2260,"column_start":5,"column_end":120}},{"value":"/ `count` draw calls are issued.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78493,"byte_end":78527,"line_start":2261,"line_end":2261,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78532,"byte_end":78535,"line_start":2262,"line_end":2262,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78540,"byte_end":78620,"line_start":2263,"line_end":2263,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78625,"byte_end":78628,"line_start":2264,"line_end":2264,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78633,"byte_end":78698,"line_start":2265,"line_end":2265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78703,"byte_end":78706,"line_start":2266,"line_end":2266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78711,"byte_end":78722,"line_start":2267,"line_end":2267,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78727,"byte_end":78741,"line_start":2268,"line_end":2268,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78746,"byte_end":78771,"line_start":2269,"line_end":2269,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78776,"byte_end":78837,"line_start":2270,"line_end":2270,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78842,"byte_end":78906,"line_start":2271,"line_end":2271,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78911,"byte_end":78978,"line_start":2272,"line_end":2272,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78983,"byte_end":79060,"line_start":2273,"line_end":2273,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79065,"byte_end":79070,"line_start":2274,"line_end":2274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79075,"byte_end":79082,"line_start":2275,"line_end":2275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79087,"byte_end":79090,"line_start":2276,"line_end":2276,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79095,"byte_end":79155,"line_start":2277,"line_end":2277,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80445,"byte_end":80472,"line_start":2308,"line_end":2308,"column_start":12,"column_end":39},"name":"multi_draw_indexed_indirect","qualname":"<RenderPass>::multi_draw_indexed_indirect","value":"pub fn multi_draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79418,"byte_end":79512,"line_start":2288,"line_end":2288,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. `count` draw calls are issued.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79517,"byte_end":79599,"line_start":2289,"line_end":2289,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79604,"byte_end":79607,"line_start":2290,"line_end":2290,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79612,"byte_end":79706,"line_start":2291,"line_end":2291,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79711,"byte_end":79780,"line_start":2292,"line_end":2292,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79785,"byte_end":79788,"line_start":2293,"line_end":2293,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79793,"byte_end":79858,"line_start":2294,"line_end":2294,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79863,"byte_end":79866,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79871,"byte_end":79882,"line_start":2296,"line_end":2296,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79887,"byte_end":79901,"line_start":2297,"line_end":2297,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79906,"byte_end":79938,"line_start":2298,"line_end":2298,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":79943,"byte_end":80004,"line_start":2299,"line_end":2299,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80009,"byte_end":80073,"line_start":2300,"line_end":2300,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80078,"byte_end":80145,"line_start":2301,"line_end":2301,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80150,"byte_end":80256,"line_start":2302,"line_end":2302,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80261,"byte_end":80338,"line_start":2303,"line_end":2303,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80343,"byte_end":80348,"line_start":2304,"line_end":2304,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80353,"byte_end":80360,"line_start":2305,"line_end":2305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80365,"byte_end":80368,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80373,"byte_end":80433,"line_start":2307,"line_end":2307,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82117,"byte_end":82142,"line_start":2351,"line_end":2351,"column_start":12,"column_end":37},"name":"multi_draw_indirect_count","qualname":"<RenderPass>::multi_draw_indirect_count","value":"pub fn multi_draw_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n                                 &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80848,"byte_end":80963,"line_start":2321,"line_end":2321,"column_start":5,"column_end":120}},{"value":"/ The count buffer is read to determine how many draws to issue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80968,"byte_end":81034,"line_start":2322,"line_end":2322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81039,"byte_end":81042,"line_start":2323,"line_end":2323,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81047,"byte_end":81150,"line_start":2324,"line_end":2324,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81155,"byte_end":81244,"line_start":2325,"line_end":2325,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81249,"byte_end":81252,"line_start":2326,"line_end":2326,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81257,"byte_end":81337,"line_start":2327,"line_end":2327,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81342,"byte_end":81345,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81350,"byte_end":81415,"line_start":2329,"line_end":2329,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81420,"byte_end":81423,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81428,"byte_end":81439,"line_start":2331,"line_end":2331,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81444,"byte_end":81458,"line_start":2332,"line_end":2332,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81463,"byte_end":81488,"line_start":2333,"line_end":2333,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81493,"byte_end":81554,"line_start":2334,"line_end":2334,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81559,"byte_end":81623,"line_start":2335,"line_end":2335,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81628,"byte_end":81695,"line_start":2336,"line_end":2336,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81700,"byte_end":81777,"line_start":2337,"line_end":2337,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81782,"byte_end":81787,"line_start":2338,"line_end":2338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81792,"byte_end":81799,"line_start":2339,"line_end":2339,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81804,"byte_end":81807,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81812,"byte_end":81872,"line_start":2341,"line_end":2341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81877,"byte_end":81880,"line_start":2342,"line_end":2342,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81885,"byte_end":81947,"line_start":2343,"line_end":2343,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81952,"byte_end":81955,"line_start":2344,"line_end":2344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81960,"byte_end":81971,"line_start":2345,"line_end":2345,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81976,"byte_end":81990,"line_start":2346,"line_end":2346,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirectCount {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":81995,"byte_end":82025,"line_start":2347,"line_end":2347,"column_start":5,"column_end":35}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82030,"byte_end":82083,"line_start":2348,"line_end":2348,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82088,"byte_end":82093,"line_start":2349,"line_end":2349,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82098,"byte_end":82105,"line_start":2350,"line_end":2350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84058,"byte_end":84091,"line_start":2400,"line_end":2400,"column_start":12,"column_end":45},"name":"multi_draw_indexed_indirect_count","qualname":"<RenderPass>::multi_draw_indexed_indirect_count","value":"pub fn multi_draw_indexed_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n                                         &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82549,"byte_end":82643,"line_start":2368,"line_end":2368,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82648,"byte_end":82762,"line_start":2369,"line_end":2369,"column_start":5,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82767,"byte_end":82770,"line_start":2370,"line_end":2370,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82775,"byte_end":82878,"line_start":2371,"line_end":2371,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82883,"byte_end":82972,"line_start":2372,"line_end":2372,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82977,"byte_end":82980,"line_start":2373,"line_end":2373,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":82985,"byte_end":83079,"line_start":2374,"line_end":2374,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83084,"byte_end":83153,"line_start":2375,"line_end":2375,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83158,"byte_end":83161,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83166,"byte_end":83231,"line_start":2377,"line_end":2377,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83236,"byte_end":83239,"line_start":2378,"line_end":2378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83244,"byte_end":83255,"line_start":2379,"line_end":2379,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83260,"byte_end":83274,"line_start":2380,"line_end":2380,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83279,"byte_end":83311,"line_start":2381,"line_end":2381,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83316,"byte_end":83377,"line_start":2382,"line_end":2382,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83382,"byte_end":83446,"line_start":2383,"line_end":2383,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83451,"byte_end":83518,"line_start":2384,"line_end":2384,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83523,"byte_end":83629,"line_start":2385,"line_end":2385,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83634,"byte_end":83711,"line_start":2386,"line_end":2386,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83716,"byte_end":83721,"line_start":2387,"line_end":2387,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83726,"byte_end":83733,"line_start":2388,"line_end":2388,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83738,"byte_end":83741,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83746,"byte_end":83806,"line_start":2390,"line_end":2390,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83811,"byte_end":83814,"line_start":2391,"line_end":2391,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83819,"byte_end":83881,"line_start":2392,"line_end":2392,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83886,"byte_end":83889,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83894,"byte_end":83905,"line_start":2394,"line_end":2394,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83910,"byte_end":83924,"line_start":2395,"line_end":2395,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirectCount {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83929,"byte_end":83966,"line_start":2396,"line_end":2396,"column_start":5,"column_end":42}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":83971,"byte_end":84024,"line_start":2397,"line_end":2397,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84029,"byte_end":84034,"line_start":2398,"line_end":2398,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84039,"byte_end":84046,"line_start":2399,"line_end":2399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85841,"byte_end":85859,"line_start":2448,"line_end":2448,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderPass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStage, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84631,"byte_end":84658,"line_start":2420,"line_end":2420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84663,"byte_end":84666,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84671,"byte_end":84758,"line_start":2422,"line_end":2422,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84763,"byte_end":84766,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84771,"byte_end":84867,"line_start":2424,"line_end":2424,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84872,"byte_end":84965,"line_start":2425,"line_end":2425,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84970,"byte_end":84983,"line_start":2426,"line_end":2426,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84988,"byte_end":84991,"line_start":2427,"line_end":2427,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84996,"byte_end":85102,"line_start":2428,"line_end":2428,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85107,"byte_end":85212,"line_start":2429,"line_end":2429,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85217,"byte_end":85247,"line_start":2430,"line_end":2430,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85252,"byte_end":85255,"line_start":2431,"line_end":2431,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85260,"byte_end":85271,"line_start":2432,"line_end":2432,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85276,"byte_end":85301,"line_start":2433,"line_end":2433,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85306,"byte_end":85323,"line_start":2434,"line_end":2434,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85328,"byte_end":85347,"line_start":2435,"line_end":2435,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85352,"byte_end":85359,"line_start":2436,"line_end":2436,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85364,"byte_end":85367,"line_start":2437,"line_end":2437,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85372,"byte_end":85501,"line_start":2438,"line_end":2438,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85506,"byte_end":85509,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85514,"byte_end":85525,"line_start":2440,"line_end":2440,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85530,"byte_end":85555,"line_start":2441,"line_end":2441,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85560,"byte_end":85578,"line_start":2442,"line_end":2442,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85583,"byte_end":85603,"line_start":2443,"line_end":2443,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85608,"byte_end":85615,"line_start":2444,"line_end":2444,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85620,"byte_end":85623,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85628,"byte_end":85743,"line_start":2446,"line_end":2446,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":85748,"byte_end":85829,"line_start":2447,"line_end":2447,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86538,"byte_end":86553,"line_start":2462,"line_end":2462,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<RenderPass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The\n timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86120,"byte_end":86181,"line_start":2455,"line_end":2455,"column_start":5,"column_end":66}},{"value":"/ timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86186,"byte_end":86267,"line_start":2456,"line_end":2456,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86272,"byte_end":86275,"line_start":2457,"line_end":2457,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Device::get_timestamp_period`] to get","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86280,"byte_end":86345,"line_start":2458,"line_end":2458,"column_start":5,"column_end":70}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86350,"byte_end":86412,"line_start":2459,"line_end":2459,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86417,"byte_end":86478,"line_start":2460,"line_end":2460,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86483,"byte_end":86526,"line_start":2461,"line_end":2461,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86993,"byte_end":87024,"line_start":2471,"line_end":2471,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<RenderPass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86814,"byte_end":86893,"line_start":2469,"line_end":2469,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86898,"byte_end":86981,"line_start":2470,"line_end":2470,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87362,"byte_end":87391,"line_start":2478,"line_end":2478,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<RenderPass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87179,"byte_end":87260,"line_start":2476,"line_end":2476,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87265,"byte_end":87350,"line_start":2477,"line_end":2477,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88116,"byte_end":88130,"line_start":2499,"line_end":2499,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87737,"byte_end":87819,"line_start":2494,"line_end":2494,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87824,"byte_end":87933,"line_start":2495,"line_end":2495,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87938,"byte_end":87941,"line_start":2496,"line_end":2496,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87946,"byte_end":88033,"line_start":2497,"line_end":2497,"column_start":5,"column_end":92}},{"value":"/ These offsets have to be aligned to [`BIND_BUFFER_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88038,"byte_end":88104,"line_start":2498,"line_end":2498,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88397,"byte_end":88409,"line_start":2509,"line_end":2509,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88348,"byte_end":88385,"line_start":2508,"line_end":2508,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88570,"byte_end":88589,"line_start":2514,"line_end":2514,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<ComputePass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88533,"byte_end":88558,"line_start":2513,"line_end":2513,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88746,"byte_end":88762,"line_start":2519,"line_end":2519,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<ComputePass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88671,"byte_end":88734,"line_start":2518,"line_end":2518,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88905,"byte_end":88920,"line_start":2524,"line_end":2524,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<ComputePass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88841,"byte_end":88893,"line_start":2523,"line_end":2523,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89128,"byte_end":89136,"line_start":2531,"line_end":2531,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ComputePass>::dispatch","value":"pub fn dispatch(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":88980,"byte_end":89019,"line_start":2528,"line_end":2528,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89024,"byte_end":89027,"line_start":2529,"line_end":2529,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89032,"byte_end":89116,"line_start":2530,"line_end":2530,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89343,"byte_end":89360,"line_start":2536,"line_end":2536,"column_start":12,"column_end":29},"name":"dispatch_indirect","qualname":"<ComputePass>::dispatch_indirect","value":"pub fn dispatch_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.\n","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89244,"byte_end":89331,"line_start":2535,"line_end":2535,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90064,"byte_end":90082,"line_start":2554,"line_end":2554,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<ComputePass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89700,"byte_end":89727,"line_start":2547,"line_end":2547,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89732,"byte_end":89735,"line_start":2548,"line_end":2548,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89740,"byte_end":89827,"line_start":2549,"line_end":2549,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89832,"byte_end":89835,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89840,"byte_end":89936,"line_start":2551,"line_end":2551,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89941,"byte_end":90034,"line_start":2552,"line_end":2552,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90039,"byte_end":90052,"line_start":2553,"line_end":2553,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90720,"byte_end":90735,"line_start":2567,"line_end":2567,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<ComputePass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90310,"byte_end":90449,"line_start":2561,"line_end":2561,"column_start":5,"column_end":144}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90454,"byte_end":90457,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Device::get_timestamp_period`] to get","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90462,"byte_end":90527,"line_start":2563,"line_end":2563,"column_start":5,"column_end":70}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90532,"byte_end":90594,"line_start":2564,"line_end":2564,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90599,"byte_end":90660,"line_start":2565,"line_end":2565,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90665,"byte_end":90708,"line_start":2566,"line_end":2566,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91176,"byte_end":91207,"line_start":2576,"line_end":2576,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<ComputePass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90997,"byte_end":91076,"line_start":2574,"line_end":2574,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91081,"byte_end":91164,"line_start":2575,"line_end":2575,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91545,"byte_end":91574,"line_start":2583,"line_end":2583,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<ComputePass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91362,"byte_end":91443,"line_start":2581,"line_end":2581,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91448,"byte_end":91533,"line_start":2582,"line_end":2582,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92040,"byte_end":92046,"line_start":2600,"line_end":2600,"column_start":12,"column_end":18},"name":"finish","qualname":"<RenderBundleEncoder>::finish","value":"pub fn finish(Self, &RenderBundleDescriptor) -> RenderBundle","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91930,"byte_end":92028,"line_start":2599,"line_end":2599,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92584,"byte_end":92598,"line_start":2611,"line_end":2611,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderBundleEncoder>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92280,"byte_end":92362,"line_start":2607,"line_end":2607,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92367,"byte_end":92472,"line_start":2608,"line_end":2608,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92477,"byte_end":92480,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92485,"byte_end":92572,"line_start":2610,"line_end":2610,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92945,"byte_end":92957,"line_start":2623,"line_end":2623,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderBundleEncoder>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92810,"byte_end":92846,"line_start":2620,"line_end":2620,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92851,"byte_end":92854,"line_start":2621,"line_end":2621,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":92859,"byte_end":92933,"line_start":2622,"line_end":2622,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93293,"byte_end":93309,"line_start":2631,"line_end":2631,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderBundleEncoder>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93074,"byte_end":93107,"line_start":2627,"line_end":2627,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93112,"byte_end":93115,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderBundleEncoder::draw_indexed) on this [`RenderBundleEncoder`] will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93120,"byte_end":93232,"line_start":2629,"line_end":2629,"column_start":5,"column_end":117}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93237,"byte_end":93281,"line_start":2630,"line_end":2630,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94044,"byte_end":94061,"line_start":2651,"line_end":2651,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderBundleEncoder>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93594,"byte_end":93631,"line_start":2641,"line_end":2641,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93636,"byte_end":93639,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93644,"byte_end":93705,"line_start":2643,"line_end":2643,"column_start":5,"column_end":66}},{"value":"/ [`RenderBundleEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93710,"byte_end":93792,"line_start":2644,"line_end":2644,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93797,"byte_end":93800,"line_start":2645,"line_end":2645,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93805,"byte_end":93869,"line_start":2646,"line_end":2646,"column_start":5,"column_end":69}},{"value":"/ [`VertexStateDescriptor::vertex_buffers`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93874,"byte_end":93920,"line_start":2647,"line_end":2647,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93925,"byte_end":93928,"line_start":2648,"line_end":2648,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderBundleEncoder::draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93933,"byte_end":93972,"line_start":2649,"line_end":2649,"column_start":5,"column_end":44}},{"value":"/ [`draw_indexed`]: RenderBundleEncoder::draw_indexed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":93977,"byte_end":94032,"line_start":2650,"line_end":2650,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94491,"byte_end":94495,"line_start":2664,"line_end":2664,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderBundleEncoder>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94323,"byte_end":94377,"line_start":2661,"line_end":2661,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94382,"byte_end":94385,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94390,"byte_end":94479,"line_start":2663,"line_end":2663,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94926,"byte_end":94938,"line_start":2672,"line_end":2672,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderBundleEncoder>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94626,"byte_end":94715,"line_start":2668,"line_end":2668,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94720,"byte_end":94723,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94728,"byte_end":94831,"line_start":2670,"line_end":2670,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":94836,"byte_end":94914,"line_start":2671,"line_end":2671,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95784,"byte_end":95797,"line_start":2691,"line_end":2691,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderBundleEncoder>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95107,"byte_end":95208,"line_start":2676,"line_end":2676,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95213,"byte_end":95216,"line_start":2677,"line_end":2677,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95221,"byte_end":95310,"line_start":2678,"line_end":2678,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95315,"byte_end":95318,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95323,"byte_end":95388,"line_start":2680,"line_end":2680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95393,"byte_end":95396,"line_start":2681,"line_end":2681,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95401,"byte_end":95412,"line_start":2682,"line_end":2682,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95417,"byte_end":95431,"line_start":2683,"line_end":2683,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95436,"byte_end":95461,"line_start":2684,"line_end":2684,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95466,"byte_end":95527,"line_start":2685,"line_end":2685,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95532,"byte_end":95596,"line_start":2686,"line_end":2686,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95601,"byte_end":95668,"line_start":2687,"line_end":2687,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95673,"byte_end":95750,"line_start":2688,"line_end":2688,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95755,"byte_end":95760,"line_start":2689,"line_end":2689,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95765,"byte_end":95772,"line_start":2690,"line_end":2690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96888,"byte_end":96909,"line_start":2713,"line_end":2713,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderBundleEncoder>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":95952,"byte_end":96041,"line_start":2695,"line_end":2695,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96046,"byte_end":96097,"line_start":2696,"line_end":2696,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96102,"byte_end":96105,"line_start":2697,"line_end":2697,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96110,"byte_end":96213,"line_start":2698,"line_end":2698,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96218,"byte_end":96296,"line_start":2699,"line_end":2699,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96301,"byte_end":96304,"line_start":2700,"line_end":2700,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96309,"byte_end":96374,"line_start":2701,"line_end":2701,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96379,"byte_end":96382,"line_start":2702,"line_end":2702,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96387,"byte_end":96398,"line_start":2703,"line_end":2703,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96403,"byte_end":96417,"line_start":2704,"line_end":2704,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96422,"byte_end":96454,"line_start":2705,"line_end":2705,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96459,"byte_end":96520,"line_start":2706,"line_end":2706,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96525,"byte_end":96589,"line_start":2707,"line_end":2707,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96594,"byte_end":96661,"line_start":2708,"line_end":2708,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96666,"byte_end":96772,"line_start":2709,"line_end":2709,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96777,"byte_end":96854,"line_start":2710,"line_end":2710,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96859,"byte_end":96864,"line_start":2711,"line_end":2711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":96869,"byte_end":96876,"line_start":2712,"line_end":2712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98460,"byte_end":98478,"line_start":2753,"line_end":2753,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderBundleEncoder>::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStage, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97250,"byte_end":97277,"line_start":2725,"line_end":2725,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97282,"byte_end":97285,"line_start":2726,"line_end":2726,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97290,"byte_end":97377,"line_start":2727,"line_end":2727,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97382,"byte_end":97385,"line_start":2728,"line_end":2728,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97390,"byte_end":97486,"line_start":2729,"line_end":2729,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97491,"byte_end":97584,"line_start":2730,"line_end":2730,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97589,"byte_end":97602,"line_start":2731,"line_end":2731,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97607,"byte_end":97610,"line_start":2732,"line_end":2732,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97615,"byte_end":97721,"line_start":2733,"line_end":2733,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97726,"byte_end":97831,"line_start":2734,"line_end":2734,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97836,"byte_end":97866,"line_start":2735,"line_end":2735,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97871,"byte_end":97874,"line_start":2736,"line_end":2736,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97879,"byte_end":97890,"line_start":2737,"line_end":2737,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97895,"byte_end":97920,"line_start":2738,"line_end":2738,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97925,"byte_end":97942,"line_start":2739,"line_end":2739,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97947,"byte_end":97966,"line_start":2740,"line_end":2740,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97971,"byte_end":97978,"line_start":2741,"line_end":2741,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97983,"byte_end":97986,"line_start":2742,"line_end":2742,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97991,"byte_end":98120,"line_start":2743,"line_end":2743,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98125,"byte_end":98128,"line_start":2744,"line_end":2744,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98133,"byte_end":98144,"line_start":2745,"line_end":2745,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98149,"byte_end":98174,"line_start":2746,"line_end":2746,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98179,"byte_end":98197,"line_start":2747,"line_end":2747,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98202,"byte_end":98222,"line_start":2748,"line_end":2748,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98227,"byte_end":98234,"line_start":2749,"line_end":2749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98239,"byte_end":98242,"line_start":2750,"line_end":2750,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98247,"byte_end":98362,"line_start":2751,"line_end":2751,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98367,"byte_end":98448,"line_start":2752,"line_end":2752,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98921,"byte_end":98933,"line_start":2764,"line_end":2764,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Queue>::write_buffer","value":"pub fn write_buffer(&Self, &Buffer, BufferAddress, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `buffer` starting at `offset`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `buffer` starting at `offset`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98628,"byte_end":98689,"line_start":2759,"line_end":2759,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98694,"byte_end":98697,"line_start":2760,"line_end":2760,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98702,"byte_end":98760,"line_start":2761,"line_end":2761,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98765,"byte_end":98838,"line_start":2762,"line_end":2762,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98843,"byte_end":98909,"line_start":2763,"line_end":2763,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99368,"byte_end":99381,"line_start":2773,"line_end":2773,"column_start":12,"column_end":25},"name":"write_texture","qualname":"<Queue>::write_texture","value":"pub fn write_texture(&Self, TextureCopyView, &[u8], TextureDataLayout,\n                     Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `texture`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `texture`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99095,"byte_end":99136,"line_start":2768,"line_end":2768,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99141,"byte_end":99144,"line_start":2769,"line_end":2769,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99149,"byte_end":99207,"line_start":2770,"line_end":2770,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99212,"byte_end":99285,"line_start":2771,"line_end":2771,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99290,"byte_end":99356,"line_start":2772,"line_end":2772,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99708,"byte_end":99714,"line_start":2784,"line_end":2784,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"pub fn submit<I: IntoIterator<Item = CommandBuffer>>(&Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":99633,"byte_end":99696,"line_start":2783,"line_end":2783,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100614,"byte_end":100631,"line_start":2811,"line_end":2811,"column_start":12,"column_end":29},"name":"get_current_frame","qualname":"<SwapChain>::get_current_frame","value":"pub fn get_current_frame(&Self) -> Result<SwapChainFrame, SwapChainError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100222,"byte_end":100296,"line_start":2804,"line_end":2804,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100301,"byte_end":100304,"line_start":2805,"line_end":2805,"column_start":5,"column_end":8}},{"value":"/ When the [`SwapChainFrame`] returned by this method is dropped, the swapchain will present","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100309,"byte_end":100403,"line_start":2806,"line_end":2806,"column_start":5,"column_end":99}},{"value":"/ the texture to the associated [`Surface`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100408,"byte_end":100454,"line_start":2807,"line_end":2807,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100459,"byte_end":100462,"line_start":2808,"line_end":2808,"column_start":5,"column_end":8}},{"value":"/ If a SwapChainFrame referencing this surface is alive when the swapchain is recreated,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100467,"byte_end":100557,"line_start":2809,"line_end":2809,"column_start":5,"column_end":95}},{"value":"/ recreating the swapchain will panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100562,"byte_end":100602,"line_start":2810,"line_end":2810,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1328},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101665,"byte_end":101687,"line_start":2840,"line_end":2840,"column_start":11,"column_end":33},"name":"UncapturedErrorHandler","qualname":"::UncapturedErrorHandler","value":"UncapturedErrorHandler: Fn(Error) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Type for the callback of uncaptured error handler\n","sig":null,"attributes":[{"value":"/ Type for the callback of uncaptured error handler","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101601,"byte_end":101654,"line_start":2839,"line_end":2839,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":2052},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101891,"byte_end":101907,"line_start":2847,"line_end":2847,"column_start":5,"column_end":21},"name":"OutOfMemoryError","qualname":"::Error::OutOfMemoryError","value":"Error::OutOfMemoryError { source }","parent":{"krate":0,"index":2051},"children":[],"decl_id":null,"docs":" Out of memory error\n","sig":null,"attributes":[{"value":"/ Out of memory error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101863,"byte_end":101886,"line_start":2846,"line_end":2846,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":2054},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":102055,"byte_end":102070,"line_start":2852,"line_end":2852,"column_start":5,"column_end":20},"name":"ValidationError","qualname":"::Error::ValidationError","value":"Error::ValidationError { source, description }","parent":{"krate":0,"index":2051},"children":[],"decl_id":null,"docs":" Validation error, signifying a bug in code or data\n","sig":null,"attributes":[{"value":"/ Validation error, signifying a bug in code or data","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101996,"byte_end":102050,"line_start":2851,"line_end":2851,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2051},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101851,"byte_end":101856,"line_start":2845,"line_end":2845,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    OutOfMemoryError {\n        source: Box<dyn error::Error + Send + Sync + 'static>,\n    },\n    ValidationError {\n        source: Box<dyn error::Error + Send + Sync + 'static>,\n        description: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2054}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101810,"byte_end":101824,"line_start":2843,"line_end":2843,"column_start":1,"column_end":15}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104169,"byte_end":104176,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104251,"byte_end":104258,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104406,"byte_end":104413,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":107575,"byte_end":107586,"line_start":140,"line_end":140,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":110207,"byte_end":110217,"line_start":217,"line_end":217,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":114893,"byte_end":114903,"line_start":356,"line_end":356,"column_start":60,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":117511,"byte_end":117530,"line_start":430,"line_end":430,"column_start":56,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":123565,"byte_end":123572,"line_start":631,"line_end":631,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":165999,"byte_end":166011,"line_start":1875,"line_end":1875,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166268,"byte_end":166280,"line_start":1887,"line_end":1887,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166709,"byte_end":166726,"line_start":1906,"line_end":1906,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166969,"byte_end":166986,"line_start":1916,"line_end":1916,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167399,"byte_end":167411,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167541,"byte_end":167553,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167668,"byte_end":167675,"line_start":23,"line_end":23,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170522,"byte_end":170523,"line_start":99,"line_end":99,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170766,"byte_end":170778,"line_start":111,"line_end":111,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170984,"byte_end":171002,"line_start":117,"line_end":117,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":171918,"byte_end":171938,"line_start":139,"line_end":139,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":172819,"byte_end":172844,"line_start":162,"line_end":162,"column_start":42,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":173334,"byte_end":173348,"line_start":177,"line_end":177,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":173789,"byte_end":173809,"line_start":191,"line_end":191,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174282,"byte_end":174297,"line_start":206,"line_end":206,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174570,"byte_end":174586,"line_start":214,"line_end":214,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174858,"byte_end":174875,"line_start":221,"line_end":221,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":175148,"byte_end":175169,"line_start":229,"line_end":229,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":176066,"byte_end":176079,"line_start":252,"line_end":252,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":177802,"byte_end":177816,"line_start":291,"line_end":291,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/native_gpu_future.rs","byte_start":180484,"byte_end":180493,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/native_gpu_future.rs","byte_start":180959,"byte_end":180978,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":183929,"byte_end":183933,"line_start":14,"line_end":14,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185794,"byte_end":185805,"line_start":70,"line_end":70,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191301,"byte_end":191307,"line_start":37,"line_end":37,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200545,"byte_end":200555,"line_start":123,"line_end":123,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":202235,"byte_end":202254,"line_start":174,"line_end":174,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16389,"byte_end":16396,"line_start":469,"line_end":469,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17448,"byte_end":17458,"line_start":508,"line_end":508,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20445,"byte_end":20452,"line_start":614,"line_end":614,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20936,"byte_end":20943,"line_start":632,"line_end":632,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21928,"byte_end":21943,"line_start":662,"line_end":662,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22564,"byte_end":22573,"line_start":682,"line_end":682,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23108,"byte_end":23120,"line_start":701,"line_end":701,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24402,"byte_end":24416,"line_start":744,"line_end":744,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24924,"byte_end":24938,"line_start":762,"line_end":762,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25081,"byte_end":25095,"line_start":770,"line_end":770,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25816,"byte_end":25831,"line_start":793,"line_end":793,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25975,"byte_end":25990,"line_start":801,"line_end":801,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26825,"byte_end":26838,"line_start":825,"line_end":825,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29107,"byte_end":29119,"line_start":893,"line_end":893,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29378,"byte_end":29386,"line_start":907,"line_end":907,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31880,"byte_end":31886,"line_start":975,"line_end":975,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32427,"byte_end":32437,"line_start":992,"line_end":992,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38101,"byte_end":38118,"line_start":1114,"line_end":1114,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46151,"byte_end":46165,"line_start":1308,"line_end":1308,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46705,"byte_end":46719,"line_start":1319,"line_end":1319,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46729,"byte_end":46737,"line_start":1321,"line_end":1321,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49131,"byte_end":49138,"line_start":1394,"line_end":1394,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52499,"byte_end":52505,"line_start":1479,"line_end":1479,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58118,"byte_end":58124,"line_start":1633,"line_end":1633,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58373,"byte_end":58391,"line_start":1645,"line_end":1645,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58546,"byte_end":58564,"line_start":1651,"line_end":1651,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58709,"byte_end":58725,"line_start":1657,"line_end":1657,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58902,"byte_end":58918,"line_start":1663,"line_end":1663,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60078,"byte_end":60088,"line_start":1711,"line_end":1711,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60211,"byte_end":60224,"line_start":1719,"line_end":1719,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60509,"byte_end":60522,"line_start":1732,"line_end":1732,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60640,"byte_end":60650,"line_start":1738,"line_end":1738,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60745,"byte_end":60758,"line_start":1744,"line_end":1744,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60858,"byte_end":60868,"line_start":1750,"line_end":1750,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61064,"byte_end":61077,"line_start":1760,"line_end":1760,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61264,"byte_end":61270,"line_start":1770,"line_end":1770,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62338,"byte_end":62349,"line_start":1803,"line_end":1803,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64804,"byte_end":64810,"line_start":1868,"line_end":1868,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64944,"byte_end":64951,"line_start":1876,"line_end":1876,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65441,"byte_end":65448,"line_start":1892,"line_end":1892,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65606,"byte_end":65617,"line_start":1900,"line_end":1900,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65771,"byte_end":65785,"line_start":1908,"line_end":1908,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70094,"byte_end":70108,"line_start":2048,"line_end":2048,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70919,"byte_end":70933,"line_start":2067,"line_end":2067,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71627,"byte_end":71637,"line_start":2090,"line_end":2090,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78352,"byte_end":78362,"line_start":2259,"line_end":2259,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80827,"byte_end":80837,"line_start":2320,"line_end":2320,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84610,"byte_end":84620,"line_start":2419,"line_end":2419,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86099,"byte_end":86109,"line_start":2454,"line_end":2454,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86793,"byte_end":86803,"line_start":2468,"line_end":2468,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87481,"byte_end":87491,"line_start":2483,"line_end":2483,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87715,"byte_end":87726,"line_start":2493,"line_end":2493,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89678,"byte_end":89689,"line_start":2546,"line_end":2546,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90288,"byte_end":90299,"line_start":2560,"line_end":2560,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90975,"byte_end":90986,"line_start":2573,"line_end":2573,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91664,"byte_end":91675,"line_start":2588,"line_end":2588,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91900,"byte_end":91919,"line_start":2598,"line_end":2598,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97220,"byte_end":97239,"line_start":2724,"line_end":2724,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98616,"byte_end":98621,"line_start":2758,"line_end":2758,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100013,"byte_end":100029,"line_start":2795,"line_end":2795,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100206,"byte_end":100215,"line_start":2803,"line_end":2803,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101761,"byte_end":101762,"line_start":2841,"line_end":2841,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":102221,"byte_end":102226,"line_start":2860,"line_end":2860,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":102499,"byte_end":102504,"line_start":2869,"line_end":2869,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":297,"byte_end":301,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":469}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104169,"byte_end":104176,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104251,"byte_end":104258,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":104406,"byte_end":104413,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":107575,"byte_end":107586,"line_start":140,"line_end":140,"column_start":61,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":36,"index":662},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":110207,"byte_end":110217,"line_start":217,"line_end":217,"column_start":56,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":36,"index":1104},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":114893,"byte_end":114903,"line_start":356,"line_end":356,"column_start":60,"column_end":70},"kind":{"Impl":{"id":5}},"from":{"krate":36,"index":1104},"to":{"krate":0,"index":928}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":117511,"byte_end":117530,"line_start":430,"line_end":430,"column_start":56,"column_end":75},"kind":{"Impl":{"id":6}},"from":{"krate":36,"index":4645},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":123565,"byte_end":123572,"line_start":631,"line_end":631,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":943}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":165999,"byte_end":166011,"line_start":1875,"line_end":1875,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166268,"byte_end":166280,"line_start":1887,"line_end":1887,"column_start":21,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166709,"byte_end":166726,"line_start":1906,"line_end":1906,"column_start":44,"column_end":61},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1418},"to":{"krate":0,"index":1184}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/direct.rs","byte_start":166969,"byte_end":166986,"line_start":1916,"line_end":1916,"column_start":19,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1418},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167399,"byte_end":167411,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167541,"byte_end":167553,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1426},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":167668,"byte_end":167675,"line_start":23,"line_end":23,"column_start":13,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170522,"byte_end":170523,"line_start":99,"line_end":99,"column_start":37,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":380}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170619,"byte_end":170624,"line_start":105,"line_end":105,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2326},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170766,"byte_end":170778,"line_start":111,"line_end":111,"column_start":22,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1426},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":170984,"byte_end":171002,"line_start":117,"line_end":117,"column_start":36,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":36,"index":5226},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":171918,"byte_end":171938,"line_start":139,"line_end":139,"column_start":42,"column_end":62},"kind":{"Impl":{"id":18}},"from":{"krate":36,"index":3978},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":172819,"byte_end":172844,"line_start":162,"line_end":162,"column_start":42,"column_end":67},"kind":{"Impl":{"id":19}},"from":{"krate":36,"index":4184},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":173334,"byte_end":173348,"line_start":177,"line_end":177,"column_start":36,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":36,"index":4685},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":173789,"byte_end":173809,"line_start":191,"line_end":191,"column_start":36,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":36,"index":5677},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174282,"byte_end":174297,"line_start":206,"line_end":206,"column_start":36,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":36,"index":5792},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174570,"byte_end":174586,"line_start":214,"line_end":214,"column_start":36,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":36,"index":5061},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":174858,"byte_end":174875,"line_start":221,"line_end":221,"column_start":36,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":36,"index":4801},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":175148,"byte_end":175169,"line_start":229,"line_end":229,"column_start":36,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":36,"index":4968},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":176066,"byte_end":176079,"line_start":252,"line_end":252,"column_start":36,"column_end":49},"kind":{"Impl":{"id":26}},"from":{"krate":36,"index":6028},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/error.rs","byte_start":177802,"byte_end":177816,"line_start":291,"line_end":291,"column_start":36,"column_end":50},"kind":{"Impl":{"id":27}},"from":{"krate":36,"index":6329},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/native_gpu_future.rs","byte_start":180484,"byte_end":180493,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":12043}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/backend/native_gpu_future.rs","byte_start":180959,"byte_end":180978,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":183929,"byte_end":183933,"line_start":14,"line_end":14,"column_start":41,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":12043}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/belt.rs","byte_start":185794,"byte_end":185805,"line_start":70,"line_end":70,"column_start":6,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/device.rs","byte_start":191301,"byte_end":191307,"line_start":37,"line_end":37,"column_start":27,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1494},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":200545,"byte_end":200555,"line_start":123,"line_end":123,"column_start":32,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1609},"to":{"krate":0,"index":588}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/util/encoder.rs","byte_start":202235,"byte_end":202254,"line_start":174,"line_end":174,"column_start":32,"column_end":51},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1623},"to":{"krate":0,"index":588}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":4517,"byte_end":4528,"line_start":128,"line_end":128,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":913},"to":{"krate":0,"index":928}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5402,"byte_end":5407,"line_start":153,"line_end":153,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":943}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5410,"byte_end":5414,"line_start":153,"line_end":153,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":943}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5417,"byte_end":5422,"line_start":153,"line_end":153,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":943}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":5425,"byte_end":5429,"line_start":153,"line_end":153,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":943}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":16389,"byte_end":16396,"line_start":469,"line_end":469,"column_start":15,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":17448,"byte_end":17458,"line_start":508,"line_end":508,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20445,"byte_end":20452,"line_start":614,"line_end":614,"column_start":15,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":20936,"byte_end":20943,"line_start":632,"line_end":632,"column_start":15,"column_end":22},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1558},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":21928,"byte_end":21943,"line_start":662,"line_end":662,"column_start":15,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":22564,"byte_end":22573,"line_start":682,"line_end":682,"column_start":15,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":23108,"byte_end":23120,"line_start":701,"line_end":701,"column_start":15,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1578},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24402,"byte_end":24416,"line_start":744,"line_end":744,"column_start":15,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":24924,"byte_end":24938,"line_start":762,"line_end":762,"column_start":15,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25081,"byte_end":25095,"line_start":770,"line_end":770,"column_start":6,"column_end":20},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25816,"byte_end":25831,"line_start":793,"line_end":793,"column_start":15,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":25975,"byte_end":25990,"line_start":801,"line_end":801,"column_start":6,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":26825,"byte_end":26838,"line_start":825,"line_end":825,"column_start":15,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29107,"byte_end":29119,"line_start":893,"line_end":893,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":29378,"byte_end":29386,"line_start":907,"line_end":907,"column_start":15,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":31880,"byte_end":31886,"line_start":975,"line_end":975,"column_start":30,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":32427,"byte_end":32437,"line_start":992,"line_end":992,"column_start":30,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":38101,"byte_end":38118,"line_start":1114,"line_end":1114,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46151,"byte_end":46165,"line_start":1308,"line_end":1308,"column_start":18,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1980},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46705,"byte_end":46719,"line_start":1319,"line_end":1319,"column_start":23,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1980},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":46729,"byte_end":46737,"line_start":1321,"line_end":1321,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":49131,"byte_end":49138,"line_start":1394,"line_end":1394,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":52499,"byte_end":52505,"line_start":1479,"line_end":1479,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58118,"byte_end":58124,"line_start":1633,"line_end":1633,"column_start":15,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58373,"byte_end":58391,"line_start":1645,"line_end":1645,"column_start":18,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58546,"byte_end":58564,"line_start":1651,"line_end":1651,"column_start":23,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1999},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58709,"byte_end":58725,"line_start":1657,"line_end":1657,"column_start":18,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":58902,"byte_end":58918,"line_start":1663,"line_end":1663,"column_start":23,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2011},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60078,"byte_end":60088,"line_start":1711,"line_end":1711,"column_start":26,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2036},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60211,"byte_end":60224,"line_start":1719,"line_end":1719,"column_start":26,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60509,"byte_end":60522,"line_start":1732,"line_end":1732,"column_start":29,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60640,"byte_end":60650,"line_start":1738,"line_end":1738,"column_start":22,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2036},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60745,"byte_end":60758,"line_start":1744,"line_end":1744,"column_start":22,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":2725}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":60858,"byte_end":60868,"line_start":1750,"line_end":1750,"column_start":15,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2036},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61064,"byte_end":61077,"line_start":1760,"line_end":1760,"column_start":15,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":61264,"byte_end":61270,"line_start":1770,"line_end":1770,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":62338,"byte_end":62349,"line_start":1803,"line_end":1803,"column_start":10,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64804,"byte_end":64810,"line_start":1868,"line_end":1868,"column_start":15,"column_end":21},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1521},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":64944,"byte_end":64951,"line_start":1876,"line_end":1876,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65441,"byte_end":65448,"line_start":1892,"line_end":1892,"column_start":15,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1541},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65606,"byte_end":65617,"line_start":1900,"line_end":1900,"column_start":15,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1547},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":65771,"byte_end":65785,"line_start":1908,"line_end":1908,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70094,"byte_end":70108,"line_start":2048,"line_end":2048,"column_start":6,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":70919,"byte_end":70933,"line_start":2067,"line_end":2067,"column_start":6,"column_end":20},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":71627,"byte_end":71637,"line_start":2090,"line_end":2090,"column_start":10,"column_end":20},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":78352,"byte_end":78362,"line_start":2259,"line_end":2259,"column_start":10,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":80827,"byte_end":80837,"line_start":2320,"line_end":2320,"column_start":10,"column_end":20},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":84610,"byte_end":84620,"line_start":2419,"line_end":2419,"column_start":10,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86099,"byte_end":86109,"line_start":2454,"line_end":2454,"column_start":10,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":86793,"byte_end":86803,"line_start":2468,"line_end":2468,"column_start":10,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87481,"byte_end":87491,"line_start":2483,"line_end":2483,"column_start":19,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":87715,"byte_end":87726,"line_start":2493,"line_end":2493,"column_start":10,"column_end":21},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":89678,"byte_end":89689,"line_start":2546,"line_end":2546,"column_start":10,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90288,"byte_end":90299,"line_start":2560,"line_end":2560,"column_start":10,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":90975,"byte_end":90986,"line_start":2573,"line_end":2573,"column_start":10,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91664,"byte_end":91675,"line_start":2588,"line_end":2588,"column_start":19,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":91900,"byte_end":91919,"line_start":2598,"line_end":2598,"column_start":10,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":97220,"byte_end":97239,"line_start":2724,"line_end":2724,"column_start":10,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":98616,"byte_end":98621,"line_start":2758,"line_end":2758,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100013,"byte_end":100029,"line_start":2795,"line_end":2795,"column_start":15,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1970},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":100206,"byte_end":100215,"line_start":2803,"line_end":2803,"column_start":6,"column_end":15},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101689,"byte_end":101691,"line_start":2840,"line_end":2840,"column_start":35,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3074},"to":{"krate":0,"index":1328}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101701,"byte_end":101705,"line_start":2840,"line_end":2840,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":1328}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101708,"byte_end":101712,"line_start":2840,"line_end":2840,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1328}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":101761,"byte_end":101762,"line_start":2841,"line_end":2841,"column_start":36,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":1328}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":102221,"byte_end":102226,"line_start":2860,"line_end":2860,"column_start":23,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2051},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.7.0/src/lib.rs","byte_start":102499,"byte_end":102504,"line_start":2869,"line_end":2869,"column_start":18,"column_end":23},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2051},"to":{"krate":2,"index":8836}}]}