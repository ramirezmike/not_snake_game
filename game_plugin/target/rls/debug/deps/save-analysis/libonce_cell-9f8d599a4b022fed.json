{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","once_cell","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"race\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","-C","metadata=9f8d599a4b022fed","-C","extra-filename=-9f8d599a4b022fed","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libonce_cell-9f8d599a4b022fed.rmeta"},"prelude":{"crate_id":{"name":"once_cell","disambiguator":[9906734988170566776,5650128629945066793]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":0,"byte_end":35080,"line_start":1,"line_end":1080,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50974,"byte_end":50981,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"alias_span":null,"name":"OnceBox","value":"","parent":{"krate":0,"index":290}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":0,"byte_end":35080,"line_start":1,"line_end":1080,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":81},{"krate":0,"index":186},{"krate":0,"index":290},{"krate":0,"index":368}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `once_cell` provides two new cell-like types, [`unsync::OnceCell`] and [`sync::OnceCell`]. A `OnceCell`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ might store arbitrary non-`Copy` types, can be assigned to at most once and provides direct access","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":127,"byte_end":229,"line_start":4,"line_end":4,"column_start":1,"column_end":103}},{"value":"/ to the stored contents. The core API looks *roughly* like this (and there's much more inside, read on!):","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":230,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":339,"byte_end":342,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":343,"byte_end":361,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ impl<T> OnceCell<T> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":362,"byte_end":387,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/     fn new() -> OnceCell<T> { ... }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":388,"byte_end":427,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/     fn set(&self, value: T) -> Result<(), T> { ... }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":428,"byte_end":484,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/     fn get(&self) -> Option<&T> { ... }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":485,"byte_end":528,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":529,"byte_end":534,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":535,"byte_end":542,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":543,"byte_end":546,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that, like with [`RefCell`] and [`Mutex`], the `set` method requires only a shared reference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":547,"byte_end":649,"line_start":15,"line_end":15,"column_start":1,"column_end":103}},{"value":"/ Because of the single assignment restriction `get` can return a `&T` instead of `Ref<T>`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":650,"byte_end":742,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ or `MutexGuard<T>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":743,"byte_end":766,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":767,"byte_end":770,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `sync` flavor is thread-safe (that is, implements the [`Sync`] trait), while the `unsync` one is not.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":771,"byte_end":880,"line_start":19,"line_end":19,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":881,"byte_end":884,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`unsync::OnceCell`]: unsync/struct.OnceCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":885,"byte_end":938,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`sync::OnceCell`]: sync/struct.OnceCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":939,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":989,"byte_end":1060,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ [`Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1061,"byte_end":1128,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1129,"byte_end":1195,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1196,"byte_end":1199,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Patterns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1200,"byte_end":1214,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1215,"byte_end":1218,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `OnceCell` might be useful for a variety of patterns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1219,"byte_end":1276,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Safe Initialization of global data","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1281,"byte_end":1322,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1323,"byte_end":1326,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1327,"byte_end":1338,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use std::{env, io};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1339,"byte_end":1362,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1363,"byte_end":1366,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1367,"byte_end":1401,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1402,"byte_end":1405,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1406,"byte_end":1426,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/ pub struct Logger {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1427,"byte_end":1450,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/     // ...","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1451,"byte_end":1465,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1466,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ static INSTANCE: OnceCell<Logger> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1472,"byte_end":1528,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1529,"byte_end":1532,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ impl Logger {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1533,"byte_end":1550,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/     pub fn global() -> &'static Logger {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1551,"byte_end":1595,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/         INSTANCE.get().expect(\"logger is not initialized\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1596,"byte_end":1658,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1659,"byte_end":1668,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1669,"byte_end":1672,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     fn from_cli(args: env::Args) -> Result<Logger, std::io::Error> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1673,"byte_end":1745,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/        // ...","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1746,"byte_end":1763,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ #      Ok(Logger {})","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1764,"byte_end":1788,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1789,"byte_end":1798,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1799,"byte_end":1804,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1805,"byte_end":1808,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1809,"byte_end":1824,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/     let logger = Logger::from_cli(env::args()).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1825,"byte_end":1885,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/     INSTANCE.set(logger).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1886,"byte_end":1924,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/     // use `Logger::global()` from now on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1925,"byte_end":1970,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1971,"byte_end":1976,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1977,"byte_end":1984,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Lazy initialized global data","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":1989,"byte_end":2024,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2025,"byte_end":2028,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This is essentially the `lazy_static!` macro, but without a macro.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2029,"byte_end":2099,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2100,"byte_end":2103,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2104,"byte_end":2115,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ use std::{sync::Mutex, collections::HashMap};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2116,"byte_end":2165,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2166,"byte_end":2169,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2170,"byte_end":2204,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2205,"byte_end":2208,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ fn global_data() -> &'static Mutex<HashMap<i32, String>> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2209,"byte_end":2271,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/     static INSTANCE: OnceCell<Mutex<HashMap<i32, String>>> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2272,"byte_end":2353,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/     INSTANCE.get_or_init(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2354,"byte_end":2387,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/         let mut m = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2388,"byte_end":2427,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2428,"byte_end":2474,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2475,"byte_end":2522,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/         Mutex::new(m)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2523,"byte_end":2548,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2549,"byte_end":2559,"line_start":78,"line_end":78,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2560,"byte_end":2565,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2566,"byte_end":2573,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2574,"byte_end":2577,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ There are also the [`sync::Lazy`] and [`unsync::Lazy`] convenience types to streamline this pattern:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2578,"byte_end":2682,"line_start":82,"line_end":82,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2687,"byte_end":2698,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ use std::{sync::Mutex, collections::HashMap};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2699,"byte_end":2748,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2749,"byte_end":2779,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2780,"byte_end":2783,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ static GLOBAL_DATA: Lazy<Mutex<HashMap<i32, String>>> = Lazy::new(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2784,"byte_end":2858,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/     let mut m = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2859,"byte_end":2894,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/     m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2895,"byte_end":2937,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/     m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2938,"byte_end":2981,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/     Mutex::new(m)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":2982,"byte_end":3003,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3004,"byte_end":3011,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3012,"byte_end":3015,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3016,"byte_end":3031,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/     println!(\"{:?}\", GLOBAL_DATA.lock().unwrap());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3032,"byte_end":3086,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3087,"byte_end":3092,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3093,"byte_end":3100,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3101,"byte_end":3104,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [`sync::Lazy`]: sync/struct.Lazy.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3105,"byte_end":3146,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ [`unsync::Lazy`]: unsync/struct.Lazy.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3147,"byte_end":3192,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3193,"byte_end":3196,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ## General purpose lazy evaluation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3197,"byte_end":3235,"line_start":103,"line_end":103,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3236,"byte_end":3239,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Unlike `lazy_static!`, `Lazy` works with local variables.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3240,"byte_end":3301,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3302,"byte_end":3305,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3306,"byte_end":3317,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3318,"byte_end":3350,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3351,"byte_end":3354,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3355,"byte_end":3370,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/     let ctx = vec![1, 2, 3];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3371,"byte_end":3403,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/     let thunk = Lazy::new(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3404,"byte_end":3438,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/         ctx.iter().sum::<i32>()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3439,"byte_end":3474,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3475,"byte_end":3486,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(*thunk, 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3487,"byte_end":3517,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3518,"byte_end":3523,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3524,"byte_end":3531,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3532,"byte_end":3535,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ If you need a lazy field in a struct, you probably should use `OnceCell`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3536,"byte_end":3612,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ directly, because that will allow you to access `self` during initialization.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3613,"byte_end":3694,"line_start":120,"line_end":120,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3695,"byte_end":3698,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3699,"byte_end":3710,"line_start":122,"line_end":122,"column_start":1,"column_end":12}},{"value":"/ use std::{fs, path::PathBuf};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3711,"byte_end":3744,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3745,"byte_end":3748,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3749,"byte_end":3785,"line_start":125,"line_end":125,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3786,"byte_end":3789,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ struct Ctx {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3790,"byte_end":3806,"line_start":127,"line_end":127,"column_start":1,"column_end":17}},{"value":"/     config_path: PathBuf,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3807,"byte_end":3836,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/     config: OnceCell<String>,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3837,"byte_end":3870,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3871,"byte_end":3876,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3877,"byte_end":3880,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ impl Ctx {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3881,"byte_end":3895,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/     pub fn get_config(&self) -> Result<&str, std::io::Error> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3896,"byte_end":3962,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/         let cfg = self.config.get_or_try_init(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":3963,"byte_end":4017,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/             fs::read_to_string(&self.config_path)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4018,"byte_end":4071,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/         })?;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4072,"byte_end":4088,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/         Ok(cfg.as_str())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4089,"byte_end":4117,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4118,"byte_end":4127,"line_start":138,"line_end":138,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4128,"byte_end":4133,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4134,"byte_end":4141,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4142,"byte_end":4145,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ## Building block","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4146,"byte_end":4167,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4168,"byte_end":4171,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Naturally, it is  possible to build other abstractions on top of `OnceCell`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4172,"byte_end":4252,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ For example, this is a `regex!` macro which takes a string literal and returns an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4253,"byte_end":4338,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ *expression* that evaluates to a `&'static Regex`:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4339,"byte_end":4393,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4394,"byte_end":4397,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4398,"byte_end":4405,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ macro_rules! regex {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4406,"byte_end":4430,"line_start":149,"line_end":149,"column_start":1,"column_end":25}},{"value":"/     ($re:literal $(,)?) => {{","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4431,"byte_end":4464,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/         static RE: once_cell::sync::OnceCell<regex::Regex> = once_cell::sync::OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4465,"byte_end":4563,"line_start":151,"line_end":151,"column_start":1,"column_end":99}},{"value":"/         RE.get_or_init(|| regex::Regex::new($re).unwrap())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4564,"byte_end":4626,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"/     }};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4627,"byte_end":4638,"line_start":153,"line_end":153,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4639,"byte_end":4644,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4645,"byte_end":4652,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4653,"byte_end":4656,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This macro can be useful to avoid the \"compile regex on every loop iteration\" problem.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4657,"byte_end":4747,"line_start":157,"line_end":157,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4748,"byte_end":4751,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Another pattern would be a `LateInit` type for delayed initialization:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4752,"byte_end":4826,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4827,"byte_end":4830,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4831,"byte_end":4834,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4835,"byte_end":4842,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4843,"byte_end":4877,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4878,"byte_end":4881,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4882,"byte_end":4902,"line_start":165,"line_end":165,"column_start":1,"column_end":21}},{"value":"/ pub struct LateInit<T> { cell: OnceCell<T> }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4903,"byte_end":4951,"line_start":166,"line_end":166,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4952,"byte_end":4955,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ impl<T> LateInit<T> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4956,"byte_end":4981,"line_start":168,"line_end":168,"column_start":1,"column_end":26}},{"value":"/     pub fn init(&self, value: T) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":4982,"byte_end":5020,"line_start":169,"line_end":169,"column_start":1,"column_end":39}},{"value":"/         assert!(self.cell.set(value).is_ok())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5021,"byte_end":5070,"line_start":170,"line_end":170,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5071,"byte_end":5080,"line_start":171,"line_end":171,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5081,"byte_end":5086,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5087,"byte_end":5090,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ impl<T> Default for LateInit<T> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5091,"byte_end":5128,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/     fn default() -> Self { LateInit { cell: OnceCell::default() } }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5129,"byte_end":5200,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5201,"byte_end":5206,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5207,"byte_end":5210,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ impl<T> std::ops::Deref for LateInit<T> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5211,"byte_end":5256,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/     type Target = T;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5257,"byte_end":5281,"line_start":179,"line_end":179,"column_start":1,"column_end":25}},{"value":"/     fn deref(&self) -> &T {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5282,"byte_end":5313,"line_start":180,"line_end":180,"column_start":1,"column_end":32}},{"value":"/         self.cell.get().unwrap()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5314,"byte_end":5350,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5351,"byte_end":5360,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5361,"byte_end":5366,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5367,"byte_end":5370,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default, Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5371,"byte_end":5400,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/ struct A<'a> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5401,"byte_end":5419,"line_start":186,"line_end":186,"column_start":1,"column_end":19}},{"value":"/     b: LateInit<&'a B<'a>>,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5420,"byte_end":5451,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5452,"byte_end":5457,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5458,"byte_end":5461,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default, Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5462,"byte_end":5491,"line_start":190,"line_end":190,"column_start":1,"column_end":30}},{"value":"/ struct B<'a> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5492,"byte_end":5510,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"/     a: LateInit<&'a A<'a>>","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5511,"byte_end":5541,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5542,"byte_end":5547,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5548,"byte_end":5551,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ fn build_cycle() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5552,"byte_end":5574,"line_start":195,"line_end":195,"column_start":1,"column_end":23}},{"value":"/     let a = A::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5575,"byte_end":5604,"line_start":196,"line_end":196,"column_start":1,"column_end":30}},{"value":"/     let b = B::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5605,"byte_end":5634,"line_start":197,"line_end":197,"column_start":1,"column_end":30}},{"value":"/     a.b.init(&b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5635,"byte_end":5656,"line_start":198,"line_end":198,"column_start":1,"column_end":22}},{"value":"/     b.a.init(&a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5657,"byte_end":5678,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/     println!(\"{:?}\", a.b.a.b.a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5679,"byte_end":5715,"line_start":200,"line_end":200,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5716,"byte_end":5721,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5722,"byte_end":5729,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5730,"byte_end":5733,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # Comparison with std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5734,"byte_end":5759,"line_start":204,"line_end":204,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5760,"byte_end":5763,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ |`!Sync` types         | Access Mode            | Drawbacks                                     |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5764,"byte_end":5865,"line_start":206,"line_end":206,"column_start":1,"column_end":102}},{"value":"/ |----------------------|------------------------|-----------------------------------------------|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5866,"byte_end":5967,"line_start":207,"line_end":207,"column_start":1,"column_end":102}},{"value":"/ |`Cell<T>`             | `T`                    | requires `T: Copy` for `get`                  |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":5968,"byte_end":6069,"line_start":208,"line_end":208,"column_start":1,"column_end":102}},{"value":"/ |`RefCell<T>`          | `RefMut<T>` / `Ref<T>` | may panic at runtime                          |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6070,"byte_end":6171,"line_start":209,"line_end":209,"column_start":1,"column_end":102}},{"value":"/ |`unsync::OnceCell<T>` | `&T`                   | assignable only once                          |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6172,"byte_end":6273,"line_start":210,"line_end":210,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6274,"byte_end":6277,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ |`Sync` types          | Access Mode            | Drawbacks                                     |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6278,"byte_end":6379,"line_start":212,"line_end":212,"column_start":1,"column_end":102}},{"value":"/ |----------------------|------------------------|-----------------------------------------------|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6380,"byte_end":6481,"line_start":213,"line_end":213,"column_start":1,"column_end":102}},{"value":"/ |`AtomicT`             | `T`                    | works only with certain `Copy` types          |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6482,"byte_end":6583,"line_start":214,"line_end":214,"column_start":1,"column_end":102}},{"value":"/ |`Mutex<T>`            | `MutexGuard<T>`        | may deadlock at runtime, may block the thread |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6584,"byte_end":6685,"line_start":215,"line_end":215,"column_start":1,"column_end":102}},{"value":"/ |`sync::OnceCell<T>`   | `&T`                   | assignable only once, may block the thread    |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6686,"byte_end":6787,"line_start":216,"line_end":216,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6788,"byte_end":6791,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Technically, calling `get_or_init` will also cause a panic or a deadlock if it recursively calls","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6792,"byte_end":6892,"line_start":218,"line_end":218,"column_start":1,"column_end":101}},{"value":"/ itself. However, because the assignment can happen only once, such cases should be more rare than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6893,"byte_end":6994,"line_start":219,"line_end":219,"column_start":1,"column_end":102}},{"value":"/ equivalents with `RefCell` and `Mutex`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":6995,"byte_end":7038,"line_start":220,"line_end":220,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7039,"byte_end":7042,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported `rustc` Version","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7043,"byte_end":7082,"line_start":222,"line_end":222,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7083,"byte_end":7086,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This crate's minimum supported `rustc` version is `1.36.0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7087,"byte_end":7150,"line_start":224,"line_end":224,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7151,"byte_end":7154,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ If only the `std` feature is enabled, MSRV will be updated conservatively.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7155,"byte_end":7233,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ When using other features, like `parking_lot`, MSRV might be updated more frequently, up to the latest stable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7234,"byte_end":7348,"line_start":227,"line_end":227,"column_start":1,"column_end":115}},{"value":"/ In both cases, increasing MSRV is *not* considered a semver-breaking change.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7349,"byte_end":7429,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7430,"byte_end":7433,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ # Implementation details","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7434,"byte_end":7462,"line_start":230,"line_end":230,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7463,"byte_end":7466,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The implementation is based on the [`lazy_static`](https://github.com/rust-lang-nursery/lazy-static.rs/)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7467,"byte_end":7575,"line_start":232,"line_end":232,"column_start":1,"column_end":109}},{"value":"/ and [`lazy_cell`](https://github.com/indiv0/lazycell/) crates and [`std::sync::Once`]. In some sense,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7576,"byte_end":7681,"line_start":233,"line_end":233,"column_start":1,"column_end":106}},{"value":"/ `once_cell` just streamlines and unifies those APIs.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7682,"byte_end":7738,"line_start":234,"line_end":234,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7739,"byte_end":7742,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ To implement a sync flavor of `OnceCell`, this crates uses either a custom","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7743,"byte_end":7821,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ re-implementation of `std::sync::Once` or `parking_lot::Mutex`. This is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7822,"byte_end":7897,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/ controlled by the `parking_lot` feature (disabled by default). Performance","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7898,"byte_end":7976,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ is the same for both cases, but the `parking_lot` based `OnceCell<T>` is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":7977,"byte_end":8053,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ smaller by up to 16 bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8054,"byte_end":8084,"line_start":240,"line_end":240,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8085,"byte_end":8088,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ This crate uses `unsafe`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8089,"byte_end":8118,"line_start":242,"line_end":242,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8119,"byte_end":8122,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Once`]: https://doc.rust-lang.org/std/sync/struct.Once.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8123,"byte_end":8199,"line_start":244,"line_end":244,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8200,"byte_end":8203,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ # F.A.Q.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8204,"byte_end":8216,"line_start":246,"line_end":246,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8217,"byte_end":8220,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ **Should I use lazy_static or once_cell?**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8221,"byte_end":8267,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8268,"byte_end":8271,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ To the first approximation, `once_cell` is both more flexible and more convenient than `lazy_static`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8272,"byte_end":8376,"line_start":250,"line_end":250,"column_start":1,"column_end":105}},{"value":"/ and should be preferred.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8377,"byte_end":8405,"line_start":251,"line_end":251,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8406,"byte_end":8409,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Unlike `once_cell`, `lazy_static` supports spinlock-based implementation of blocking which works with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8410,"byte_end":8515,"line_start":253,"line_end":253,"column_start":1,"column_end":106}},{"value":"/ `#![no_std]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8516,"byte_end":8533,"line_start":254,"line_end":254,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8534,"byte_end":8537,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ `lazy_static` has received significantly more real world testing, but `once_cell` is also a widely","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8538,"byte_end":8640,"line_start":256,"line_end":256,"column_start":1,"column_end":103}},{"value":"/ used crate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8641,"byte_end":8656,"line_start":257,"line_end":257,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8657,"byte_end":8660,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ **Should I use the sync or unsync flavor?**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8661,"byte_end":8708,"line_start":259,"line_end":259,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8709,"byte_end":8712,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Because Rust compiler checks thread safety for you, it's impossible to accidentally use `unsync` where","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8713,"byte_end":8819,"line_start":261,"line_end":261,"column_start":1,"column_end":107}},{"value":"/ `sync` is required. So, use `unsync` in single-threaded code and `sync` in multi-threaded. It's easy","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8820,"byte_end":8924,"line_start":262,"line_end":262,"column_start":1,"column_end":105}},{"value":"/ to switch between the two if code becomes multi-threaded later.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8925,"byte_end":8992,"line_start":263,"line_end":263,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8993,"byte_end":8996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ At the moment, `unsync` has an additional benefit that reentrant initialization causes a panic, which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":8997,"byte_end":9102,"line_start":265,"line_end":265,"column_start":1,"column_end":106}},{"value":"/ might be easier to debug than a deadlock.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9103,"byte_end":9148,"line_start":266,"line_end":266,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9149,"byte_end":9152,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Related crates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9153,"byte_end":9173,"line_start":268,"line_end":268,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9174,"byte_end":9177,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ * [double-checked-cell](https://github.com/niklasf/double-checked-cell)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9178,"byte_end":9253,"line_start":270,"line_end":270,"column_start":1,"column_end":76}},{"value":"/ * [lazy-init](https://crates.io/crates/lazy-init)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9254,"byte_end":9307,"line_start":271,"line_end":271,"column_start":1,"column_end":54}},{"value":"/ * [lazycell](https://crates.io/crates/lazycell)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9308,"byte_end":9359,"line_start":272,"line_end":272,"column_start":1,"column_end":52}},{"value":"/ * [mitochondria](https://crates.io/crates/mitochondria)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9360,"byte_end":9419,"line_start":273,"line_end":273,"column_start":1,"column_end":60}},{"value":"/ * [lazy_static](https://crates.io/crates/lazy_static)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9420,"byte_end":9477,"line_start":274,"line_end":274,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9478,"byte_end":9481,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ Most of this crate's functionality is available in `std` in nightly Rust.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9482,"byte_end":9559,"line_start":276,"line_end":276,"column_start":1,"column_end":78}},{"value":"/ See the [tracking issue](https://github.com/rust-lang/rust/issues/74465).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9560,"byte_end":9637,"line_start":277,"line_end":277,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":9920,"byte_end":9926,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"name":"unsync","qualname":"::unsync","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":168},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10782,"byte_end":10790,"line_start":324,"line_end":324,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::unsync::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":112}],"decl_id":null,"docs":" A cell which can be written to only once. It is not thread safe.","sig":null,"attributes":[{"value":"/ A cell which can be written to only once. It is not thread safe.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10119,"byte_end":10187,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10192,"byte_end":10195,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Unlike [`std::cell::RefCell`], a `OnceCell` provides simple `&`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10200,"byte_end":10267,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ references to the contents.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10272,"byte_end":10303,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10308,"byte_end":10311,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [`std::cell::RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10316,"byte_end":10398,"line_start":309,"line_end":309,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10403,"byte_end":10406,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10411,"byte_end":10424,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10429,"byte_end":10436,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10441,"byte_end":10477,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10482,"byte_end":10485,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10490,"byte_end":10521,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10526,"byte_end":10560,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10565,"byte_end":10568,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let value: &String = cell.get_or_init(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10573,"byte_end":10619,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/     \"Hello, World!\".to_string()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10624,"byte_end":10659,"line_start":319,"line_end":319,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10664,"byte_end":10671,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10676,"byte_end":10715,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10720,"byte_end":10754,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":10759,"byte_end":10766,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12500,"byte_end":12503,"line_start":382,"line_end":382,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12449,"byte_end":12478,"line_start":381,"line_end":381,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12718,"byte_end":12721,"line_start":389,"line_end":389,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12596,"byte_end":12641,"line_start":386,"line_end":386,"column_start":9,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12650,"byte_end":12653,"line_start":387,"line_end":387,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12662,"byte_end":12702,"line_start":388,"line_end":388,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12992,"byte_end":12999,"line_start":397,"line_end":397,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12862,"byte_end":12915,"line_start":394,"line_end":394,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12924,"byte_end":12927,"line_start":395,"line_end":395,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12936,"byte_end":12976,"line_start":396,"line_end":396,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13691,"byte_end":13694,"line_start":419,"line_end":419,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13155,"byte_end":13201,"line_start":402,"line_end":402,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13210,"byte_end":13213,"line_start":403,"line_end":403,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13222,"byte_end":13291,"line_start":404,"line_end":404,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13300,"byte_end":13309,"line_start":405,"line_end":405,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13318,"byte_end":13321,"line_start":406,"line_end":406,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13330,"byte_end":13343,"line_start":407,"line_end":407,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13352,"byte_end":13359,"line_start":408,"line_end":408,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13368,"byte_end":13404,"line_start":409,"line_end":409,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13413,"byte_end":13416,"line_start":410,"line_end":410,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13425,"byte_end":13456,"line_start":411,"line_end":411,"column_start":9,"column_end":40}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13465,"byte_end":13499,"line_start":412,"line_end":412,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13508,"byte_end":13511,"line_start":413,"line_end":413,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(cell.set(92), Ok(()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13520,"byte_end":13557,"line_start":414,"line_end":414,"column_start":9,"column_end":46}},{"value":"/ assert_eq!(cell.set(62), Err(62));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13566,"byte_end":13604,"line_start":415,"line_end":415,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13613,"byte_end":13616,"line_start":416,"line_end":416,"column_start":9,"column_end":12}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13625,"byte_end":13659,"line_start":417,"line_end":417,"column_start":9,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":13668,"byte_end":13675,"line_start":418,"line_end":418,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14991,"byte_end":15002,"line_start":454,"line_end":454,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f`\n if the cell was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14252,"byte_end":14311,"line_start":433,"line_end":433,"column_start":9,"column_end":68}},{"value":"/ if the cell was empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14320,"byte_end":14346,"line_start":434,"line_end":434,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14355,"byte_end":14358,"line_start":435,"line_end":435,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14367,"byte_end":14379,"line_start":436,"line_end":436,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14388,"byte_end":14391,"line_start":437,"line_end":437,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14400,"byte_end":14470,"line_start":438,"line_end":438,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14479,"byte_end":14505,"line_start":439,"line_end":439,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14514,"byte_end":14517,"line_start":440,"line_end":440,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14526,"byte_end":14595,"line_start":441,"line_end":441,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14604,"byte_end":14630,"line_start":442,"line_end":442,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14639,"byte_end":14642,"line_start":443,"line_end":443,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14651,"byte_end":14664,"line_start":444,"line_end":444,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14673,"byte_end":14680,"line_start":445,"line_end":445,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14689,"byte_end":14725,"line_start":446,"line_end":446,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14734,"byte_end":14737,"line_start":447,"line_end":447,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14746,"byte_end":14777,"line_start":448,"line_end":448,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14786,"byte_end":14826,"line_start":449,"line_end":449,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14835,"byte_end":14862,"line_start":450,"line_end":450,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14871,"byte_end":14923,"line_start":451,"line_end":451,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14932,"byte_end":14959,"line_start":452,"line_end":452,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":14968,"byte_end":14975,"line_start":453,"line_end":453,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16210,"byte_end":16225,"line_start":490,"line_end":490,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15277,"byte_end":15339,"line_start":465,"line_end":465,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15348,"byte_end":15412,"line_start":466,"line_end":466,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15421,"byte_end":15443,"line_start":467,"line_end":467,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15452,"byte_end":15455,"line_start":468,"line_end":468,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15464,"byte_end":15476,"line_start":469,"line_end":469,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15485,"byte_end":15488,"line_start":470,"line_end":470,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15497,"byte_end":15567,"line_start":471,"line_end":471,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15576,"byte_end":15602,"line_start":472,"line_end":472,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15611,"byte_end":15614,"line_start":473,"line_end":473,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15623,"byte_end":15692,"line_start":474,"line_end":474,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15701,"byte_end":15727,"line_start":475,"line_end":475,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15736,"byte_end":15739,"line_start":476,"line_end":476,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15748,"byte_end":15761,"line_start":477,"line_end":477,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15770,"byte_end":15777,"line_start":478,"line_end":478,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15786,"byte_end":15822,"line_start":479,"line_end":479,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15831,"byte_end":15834,"line_start":480,"line_end":480,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15843,"byte_end":15874,"line_start":481,"line_end":481,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15883,"byte_end":15941,"line_start":482,"line_end":482,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15950,"byte_end":15984,"line_start":483,"line_end":483,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":15993,"byte_end":16053,"line_start":484,"line_end":484,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16062,"byte_end":16076,"line_start":485,"line_end":485,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16085,"byte_end":16092,"line_start":486,"line_end":486,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16101,"byte_end":16132,"line_start":487,"line_end":487,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16141,"byte_end":16178,"line_start":488,"line_end":488,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16187,"byte_end":16194,"line_start":489,"line_end":489,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17531,"byte_end":17535,"line_start":523,"line_end":523,"column_start":16,"column_end":20},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","sig":null,"attributes":[{"value":"/ Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16875,"byte_end":16960,"line_start":506,"line_end":506,"column_start":9,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16969,"byte_end":16972,"line_start":507,"line_end":507,"column_start":9,"column_end":12}},{"value":"/ Has no effect and returns `None` if the `OnceCell` hasn't been initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":16981,"byte_end":17060,"line_start":508,"line_end":508,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17069,"byte_end":17072,"line_start":509,"line_end":509,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17081,"byte_end":17095,"line_start":510,"line_end":510,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17104,"byte_end":17107,"line_start":511,"line_end":511,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17116,"byte_end":17123,"line_start":512,"line_end":512,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17132,"byte_end":17168,"line_start":513,"line_end":513,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17177,"byte_end":17180,"line_start":514,"line_end":514,"column_start":9,"column_end":12}},{"value":"/ let mut cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17189,"byte_end":17242,"line_start":515,"line_end":515,"column_start":9,"column_end":62}},{"value":"/ assert_eq!(cell.take(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17251,"byte_end":17285,"line_start":516,"line_end":516,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17294,"byte_end":17297,"line_start":517,"line_end":517,"column_start":9,"column_end":12}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17306,"byte_end":17341,"line_start":518,"line_end":518,"column_start":9,"column_end":44}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17350,"byte_end":17393,"line_start":519,"line_end":519,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.take(), Some(\"hello\".to_string()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17402,"byte_end":17457,"line_start":520,"line_end":520,"column_start":9,"column_end":64}},{"value":"/ assert_eq!(cell.get(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17466,"byte_end":17499,"line_start":521,"line_end":521,"column_start":9,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17508,"byte_end":17515,"line_start":522,"line_end":522,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18194,"byte_end":18204,"line_start":543,"line_end":543,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17642,"byte_end":17699,"line_start":527,"line_end":527,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17708,"byte_end":17711,"line_start":528,"line_end":528,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell was empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17720,"byte_end":17761,"line_start":529,"line_end":529,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17770,"byte_end":17773,"line_start":530,"line_end":530,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17782,"byte_end":17796,"line_start":531,"line_end":531,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17805,"byte_end":17808,"line_start":532,"line_end":532,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17817,"byte_end":17824,"line_start":533,"line_end":533,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17833,"byte_end":17869,"line_start":534,"line_end":534,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17878,"byte_end":17881,"line_start":535,"line_end":535,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17890,"byte_end":17939,"line_start":536,"line_end":536,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17948,"byte_end":17988,"line_start":537,"line_end":537,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":17997,"byte_end":18000,"line_start":538,"line_end":538,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18009,"byte_end":18040,"line_start":539,"line_end":539,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18049,"byte_end":18092,"line_start":540,"line_end":540,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18101,"byte_end":18162,"line_start":541,"line_end":541,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18171,"byte_end":18178,"line_start":542,"line_end":542,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18931,"byte_end":18935,"line_start":570,"line_end":570,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::unsync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18464,"byte_end":18517,"line_start":550,"line_end":550,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18522,"byte_end":18525,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18530,"byte_end":18543,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18548,"byte_end":18555,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18560,"byte_end":18592,"line_start":554,"line_end":554,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18597,"byte_end":18600,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let lazy: Lazy<i32> = Lazy::new(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18605,"byte_end":18645,"line_start":556,"line_end":556,"column_start":5,"column_end":45}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18650,"byte_end":18683,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/     92","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18688,"byte_end":18698,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18703,"byte_end":18710,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ println!(\"ready\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18715,"byte_end":18737,"line_start":560,"line_end":560,"column_start":5,"column_end":27}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18742,"byte_end":18768,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18773,"byte_end":18799,"line_start":562,"line_end":562,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18804,"byte_end":18807,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Prints:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18812,"byte_end":18826,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/ //   ready","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18831,"byte_end":18845,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/ //   initializing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18850,"byte_end":18871,"line_start":566,"line_end":566,"column_start":5,"column_end":26}},{"value":"/ //   92","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18876,"byte_end":18887,"line_start":567,"line_end":567,"column_start":5,"column_end":16}},{"value":"/ //   92","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18892,"byte_end":18903,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":18908,"byte_end":18915,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19841,"byte_end":19844,"line_start":599,"line_end":599,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing function.","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19407,"byte_end":19473,"line_start":585,"line_end":585,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19482,"byte_end":19485,"line_start":586,"line_end":586,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19494,"byte_end":19507,"line_start":587,"line_end":587,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19516,"byte_end":19523,"line_start":588,"line_end":588,"column_start":9,"column_end":16}},{"value":"/ # fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19532,"byte_end":19549,"line_start":589,"line_end":589,"column_start":9,"column_end":26}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19558,"byte_end":19590,"line_start":590,"line_end":590,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19599,"byte_end":19602,"line_start":591,"line_end":591,"column_start":9,"column_end":12}},{"value":"/ let hello = \"Hello, World!\".to_string();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19611,"byte_end":19655,"line_start":592,"line_end":592,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19664,"byte_end":19667,"line_start":593,"line_end":593,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| hello.to_uppercase());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19676,"byte_end":19726,"line_start":594,"line_end":594,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19735,"byte_end":19738,"line_start":595,"line_end":595,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(&*lazy, \"HELLO, WORLD!\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19747,"byte_end":19787,"line_start":596,"line_end":596,"column_start":9,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19796,"byte_end":19803,"line_start":597,"line_end":597,"column_start":9,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19812,"byte_end":19819,"line_start":598,"line_end":598,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20122,"byte_end":20132,"line_start":606,"line_end":606,"column_start":16,"column_end":26},"name":"into_value","qualname":"<Lazy<T, F>>::into_value","value":"pub fn into_value(Lazy<T, F>) -> Result<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Lazy` returning the stored value.","sig":null,"attributes":[{"value":"/ Consumes this `Lazy` returning the stored value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19961,"byte_end":20013,"line_start":603,"line_end":603,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20022,"byte_end":20025,"line_start":604,"line_end":604,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(value)` if `Lazy` is initialized and `Err(f)` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20034,"byte_end":20106,"line_start":605,"line_end":605,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20916,"byte_end":20921,"line_start":630,"line_end":630,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and returns a reference to\n the result.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and returns a reference to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20466,"byte_end":20537,"line_start":616,"line_end":616,"column_start":9,"column_end":80}},{"value":"/ the result.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20546,"byte_end":20561,"line_start":617,"line_end":617,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20570,"byte_end":20573,"line_start":618,"line_end":618,"column_start":9,"column_end":12}},{"value":"/ This is equivalent to the `Deref` impl, but is explicit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20582,"byte_end":20642,"line_start":619,"line_end":619,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20651,"byte_end":20654,"line_start":620,"line_end":620,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20663,"byte_end":20676,"line_start":621,"line_end":621,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20685,"byte_end":20692,"line_start":622,"line_end":622,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20701,"byte_end":20733,"line_start":623,"line_end":623,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20742,"byte_end":20745,"line_start":624,"line_end":624,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20754,"byte_end":20786,"line_start":625,"line_end":625,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20795,"byte_end":20798,"line_start":626,"line_end":626,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20807,"byte_end":20847,"line_start":627,"line_end":627,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20856,"byte_end":20884,"line_start":628,"line_end":628,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20893,"byte_end":20900,"line_start":629,"line_end":629,"column_start":9,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21769,"byte_end":21773,"line_start":661,"line_end":661,"column_start":9,"column_end":13},"name":"sync","qualname":"::sync","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":271},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":289}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21737,"byte_end":21760,"line_start":660,"line_end":660,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23013,"byte_end":23021,"line_start":699,"line_end":699,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::sync::OnceCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21941,"byte_end":21998,"line_start":671,"line_end":671,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22003,"byte_end":22006,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ `OnceCell` provides `&` references to the contents without RAII guards.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22011,"byte_end":22086,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22091,"byte_end":22094,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Reading a non-`None` value out of `OnceCell` establishes a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22099,"byte_end":22161,"line_start":675,"line_end":675,"column_start":5,"column_end":67}},{"value":"/ happens-before relationship with a corresponding write. For example, if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22166,"byte_end":22241,"line_start":676,"line_end":676,"column_start":5,"column_end":80}},{"value":"/ thread A initializes the cell with `get_or_init(f)`, and thread B","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22246,"byte_end":22315,"line_start":677,"line_end":677,"column_start":5,"column_end":74}},{"value":"/ subsequently reads the result of this call, B also observes all the side","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22320,"byte_end":22396,"line_start":678,"line_end":678,"column_start":5,"column_end":81}},{"value":"/ effects of `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22401,"byte_end":22420,"line_start":679,"line_end":679,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22425,"byte_end":22428,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22433,"byte_end":22446,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22451,"byte_end":22458,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22463,"byte_end":22497,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22502,"byte_end":22505,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ static CELL: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22510,"byte_end":22562,"line_start":685,"line_end":685,"column_start":5,"column_end":57}},{"value":"/ assert!(CELL.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22567,"byte_end":22601,"line_start":686,"line_end":686,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22606,"byte_end":22609,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22614,"byte_end":22641,"line_start":688,"line_end":688,"column_start":5,"column_end":32}},{"value":"/     let value: &String = CELL.get_or_init(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22646,"byte_end":22696,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/         \"Hello, World!\".to_string()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22701,"byte_end":22740,"line_start":690,"line_end":690,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22745,"byte_end":22756,"line_start":691,"line_end":691,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22761,"byte_end":22804,"line_start":692,"line_end":692,"column_start":5,"column_end":48}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22809,"byte_end":22832,"line_start":693,"line_end":693,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22837,"byte_end":22840,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let value: Option<&String> = CELL.get();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22845,"byte_end":22889,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/ assert!(value.is_some());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22894,"byte_end":22923,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value.unwrap().as_str(), \"Hello, World!\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22928,"byte_end":22985,"line_start":697,"line_end":697,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":22990,"byte_end":22997,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24290,"byte_end":24293,"line_start":747,"line_end":747,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24239,"byte_end":24268,"line_start":746,"line_end":746,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24549,"byte_end":24552,"line_start":755,"line_end":755,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the reference to the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24365,"byte_end":24412,"line_start":751,"line_end":751,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24421,"byte_end":24424,"line_start":752,"line_end":752,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty, or being initialized. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24433,"byte_end":24500,"line_start":753,"line_end":753,"column_start":9,"column_end":76}},{"value":"/ method never blocks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24509,"byte_end":24533,"line_start":754,"line_end":754,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24928,"byte_end":24935,"line_start":767,"line_end":767,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the mutable reference to the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24796,"byte_end":24851,"line_start":764,"line_end":764,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24860,"byte_end":24863,"line_start":765,"line_end":765,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24872,"byte_end":24912,"line_start":766,"line_end":766,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25337,"byte_end":25350,"line_start":778,"line_end":778,"column_start":23,"column_end":36},"name":"get_unchecked","qualname":"<OnceCell<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get the reference to the underlying value, without checking if the\n cell is initialized.","sig":null,"attributes":[{"value":"/ Get the reference to the underlying value, without checking if the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25015,"byte_end":25085,"line_start":771,"line_end":771,"column_start":9,"column_end":79}},{"value":"/ cell is initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25094,"byte_end":25118,"line_start":772,"line_end":772,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25127,"byte_end":25130,"line_start":773,"line_end":773,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25139,"byte_end":25151,"line_start":774,"line_end":774,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25160,"byte_end":25163,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ Caller must ensure that the cell is in initialized state, and that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25172,"byte_end":25242,"line_start":776,"line_end":776,"column_start":9,"column_end":79}},{"value":"/ the contents are acquired by (synchronized to) this thread.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25251,"byte_end":25314,"line_start":777,"line_end":777,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26134,"byte_end":26137,"line_start":805,"line_end":805,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25420,"byte_end":25466,"line_start":782,"line_end":782,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25475,"byte_end":25478,"line_start":783,"line_end":783,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25487,"byte_end":25556,"line_start":784,"line_end":784,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25565,"byte_end":25574,"line_start":785,"line_end":785,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25583,"byte_end":25586,"line_start":786,"line_end":786,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25595,"byte_end":25608,"line_start":787,"line_end":787,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25617,"byte_end":25620,"line_start":788,"line_end":788,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25629,"byte_end":25636,"line_start":789,"line_end":789,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25645,"byte_end":25679,"line_start":790,"line_end":790,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25688,"byte_end":25691,"line_start":791,"line_end":791,"column_start":9,"column_end":12}},{"value":"/ static CELL: OnceCell<i32> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25700,"byte_end":25749,"line_start":792,"line_end":792,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25758,"byte_end":25761,"line_start":793,"line_end":793,"column_start":9,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25770,"byte_end":25785,"line_start":794,"line_end":794,"column_start":9,"column_end":24}},{"value":"/     assert!(CELL.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25794,"byte_end":25832,"line_start":795,"line_end":795,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25841,"byte_end":25844,"line_start":796,"line_end":796,"column_start":9,"column_end":12}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25853,"byte_end":25884,"line_start":797,"line_end":797,"column_start":9,"column_end":40}},{"value":"/         assert_eq!(CELL.set(92), Ok(()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25893,"byte_end":25938,"line_start":798,"line_end":798,"column_start":9,"column_end":54}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25947,"byte_end":25974,"line_start":799,"line_end":799,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25983,"byte_end":25986,"line_start":800,"line_end":800,"column_start":9,"column_end":12}},{"value":"/     assert_eq!(CELL.set(62), Err(62));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":25995,"byte_end":26037,"line_start":801,"line_end":801,"column_start":9,"column_end":51}},{"value":"/     assert_eq!(CELL.get(), Some(&92));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26046,"byte_end":26088,"line_start":802,"line_end":802,"column_start":9,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26097,"byte_end":26102,"line_start":803,"line_end":803,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26111,"byte_end":26118,"line_start":804,"line_end":804,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27441,"byte_end":27452,"line_start":840,"line_end":840,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell\n was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26405,"byte_end":26476,"line_start":814,"line_end":814,"column_start":9,"column_end":80}},{"value":"/ was empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26485,"byte_end":26499,"line_start":815,"line_end":815,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26508,"byte_end":26511,"line_start":816,"line_end":816,"column_start":9,"column_end":12}},{"value":"/ Many threads may call `get_or_init` concurrently with different","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26520,"byte_end":26587,"line_start":817,"line_end":817,"column_start":9,"column_end":76}},{"value":"/ initializing functions, but it is guaranteed that only one function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26596,"byte_end":26667,"line_start":818,"line_end":818,"column_start":9,"column_end":80}},{"value":"/ will be executed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26676,"byte_end":26697,"line_start":819,"line_end":819,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26706,"byte_end":26709,"line_start":820,"line_end":820,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26718,"byte_end":26730,"line_start":821,"line_end":821,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26739,"byte_end":26742,"line_start":822,"line_end":822,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26751,"byte_end":26821,"line_start":823,"line_end":823,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26830,"byte_end":26856,"line_start":824,"line_end":824,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26865,"byte_end":26868,"line_start":825,"line_end":825,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. The","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26877,"byte_end":26944,"line_start":826,"line_end":826,"column_start":9,"column_end":76}},{"value":"/ exact outcome is unspecified. Current implementation deadlocks, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":26953,"byte_end":27024,"line_start":827,"line_end":827,"column_start":9,"column_end":80}},{"value":"/ this may be changed to a panic in the future.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27033,"byte_end":27082,"line_start":828,"line_end":828,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27091,"byte_end":27094,"line_start":829,"line_end":829,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27103,"byte_end":27116,"line_start":830,"line_end":830,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27125,"byte_end":27132,"line_start":831,"line_end":831,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27141,"byte_end":27175,"line_start":832,"line_end":832,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27184,"byte_end":27187,"line_start":833,"line_end":833,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27196,"byte_end":27227,"line_start":834,"line_end":834,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27236,"byte_end":27276,"line_start":835,"line_end":835,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27285,"byte_end":27312,"line_start":836,"line_end":836,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27321,"byte_end":27373,"line_start":837,"line_end":837,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27382,"byte_end":27409,"line_start":838,"line_end":838,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27418,"byte_end":27425,"line_start":839,"line_end":839,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28759,"byte_end":28774,"line_start":877,"line_end":877,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27727,"byte_end":27789,"line_start":851,"line_end":851,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27798,"byte_end":27862,"line_start":852,"line_end":852,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27871,"byte_end":27893,"line_start":853,"line_end":853,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27902,"byte_end":27905,"line_start":854,"line_end":854,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27914,"byte_end":27926,"line_start":855,"line_end":855,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27935,"byte_end":27938,"line_start":856,"line_end":856,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":27947,"byte_end":28008,"line_start":857,"line_end":857,"column_start":9,"column_end":70}},{"value":"/ the cell remains uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28017,"byte_end":28052,"line_start":858,"line_end":858,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28061,"byte_end":28064,"line_start":859,"line_end":859,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28073,"byte_end":28136,"line_start":860,"line_end":860,"column_start":9,"column_end":72}},{"value":"/ The exact outcome is unspecified. Current implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28145,"byte_end":28205,"line_start":861,"line_end":861,"column_start":9,"column_end":69}},{"value":"/ deadlocks, but this may be changed to a panic in the future.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28214,"byte_end":28278,"line_start":862,"line_end":862,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28287,"byte_end":28290,"line_start":863,"line_end":863,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28299,"byte_end":28312,"line_start":864,"line_end":864,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28321,"byte_end":28328,"line_start":865,"line_end":865,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28337,"byte_end":28371,"line_start":866,"line_end":866,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28380,"byte_end":28383,"line_start":867,"line_end":867,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28392,"byte_end":28423,"line_start":868,"line_end":868,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28432,"byte_end":28490,"line_start":869,"line_end":869,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28499,"byte_end":28533,"line_start":870,"line_end":870,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28542,"byte_end":28602,"line_start":871,"line_end":871,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28611,"byte_end":28625,"line_start":872,"line_end":872,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28634,"byte_end":28641,"line_start":873,"line_end":873,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28650,"byte_end":28681,"line_start":874,"line_end":874,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28690,"byte_end":28727,"line_start":875,"line_end":875,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":28736,"byte_end":28743,"line_start":876,"line_end":876,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29856,"byte_end":29860,"line_start":909,"line_end":909,"column_start":16,"column_end":20},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","sig":null,"attributes":[{"value":"/ Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29202,"byte_end":29287,"line_start":892,"line_end":892,"column_start":9,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29296,"byte_end":29299,"line_start":893,"line_end":893,"column_start":9,"column_end":12}},{"value":"/ Has no effect and returns `None` if the `OnceCell` hasn't been initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29308,"byte_end":29387,"line_start":894,"line_end":894,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29396,"byte_end":29399,"line_start":895,"line_end":895,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29408,"byte_end":29422,"line_start":896,"line_end":896,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29431,"byte_end":29434,"line_start":897,"line_end":897,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29443,"byte_end":29450,"line_start":898,"line_end":898,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29459,"byte_end":29493,"line_start":899,"line_end":899,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29502,"byte_end":29505,"line_start":900,"line_end":900,"column_start":9,"column_end":12}},{"value":"/ let mut cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29514,"byte_end":29567,"line_start":901,"line_end":901,"column_start":9,"column_end":62}},{"value":"/ assert_eq!(cell.take(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29576,"byte_end":29610,"line_start":902,"line_end":902,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29619,"byte_end":29622,"line_start":903,"line_end":903,"column_start":9,"column_end":12}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29631,"byte_end":29666,"line_start":904,"line_end":904,"column_start":9,"column_end":44}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29675,"byte_end":29718,"line_start":905,"line_end":905,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.take(), Some(\"hello\".to_string()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29727,"byte_end":29782,"line_start":906,"line_end":906,"column_start":9,"column_end":64}},{"value":"/ assert_eq!(cell.get(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29791,"byte_end":29824,"line_start":907,"line_end":907,"column_start":9,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29833,"byte_end":29840,"line_start":908,"line_end":908,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30505,"byte_end":30515,"line_start":928,"line_end":928,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value. Returns\n `None` if the cell was empty.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value. Returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":29967,"byte_end":30032,"line_start":913,"line_end":913,"column_start":9,"column_end":74}},{"value":"/ `None` if the cell was empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30041,"byte_end":30074,"line_start":914,"line_end":914,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30083,"byte_end":30086,"line_start":915,"line_end":915,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30095,"byte_end":30109,"line_start":916,"line_end":916,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30118,"byte_end":30121,"line_start":917,"line_end":917,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30130,"byte_end":30137,"line_start":918,"line_end":918,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30146,"byte_end":30180,"line_start":919,"line_end":919,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30189,"byte_end":30192,"line_start":920,"line_end":920,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30201,"byte_end":30250,"line_start":921,"line_end":921,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30259,"byte_end":30299,"line_start":922,"line_end":922,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30308,"byte_end":30311,"line_start":923,"line_end":923,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30320,"byte_end":30351,"line_start":924,"line_end":924,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30360,"byte_end":30403,"line_start":925,"line_end":925,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30412,"byte_end":30473,"line_start":926,"line_end":926,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30482,"byte_end":30489,"line_start":927,"line_end":927,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31527,"byte_end":31531,"line_start":966,"line_end":966,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::sync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30590,"byte_end":30643,"line_start":933,"line_end":933,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30648,"byte_end":30651,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ This type is thread-safe and can be used in statics.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30656,"byte_end":30712,"line_start":935,"line_end":935,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30717,"byte_end":30720,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30725,"byte_end":30738,"line_start":937,"line_end":937,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30743,"byte_end":30746,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30751,"byte_end":30758,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30763,"byte_end":30797,"line_start":940,"line_end":940,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30802,"byte_end":30805,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30810,"byte_end":30840,"line_start":942,"line_end":942,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30845,"byte_end":30848,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ static HASHMAP: Lazy<HashMap<i32, String>> = Lazy::new(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30853,"byte_end":30916,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30921,"byte_end":30954,"line_start":945,"line_end":945,"column_start":5,"column_end":38}},{"value":"/     let mut m = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30959,"byte_end":30994,"line_start":946,"line_end":946,"column_start":5,"column_end":40}},{"value":"/     m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":30999,"byte_end":31041,"line_start":947,"line_end":947,"column_start":5,"column_end":47}},{"value":"/     m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31046,"byte_end":31089,"line_start":948,"line_end":948,"column_start":5,"column_end":48}},{"value":"/     m","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31094,"byte_end":31103,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31108,"byte_end":31115,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31120,"byte_end":31123,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31128,"byte_end":31143,"line_start":952,"line_end":952,"column_start":5,"column_end":20}},{"value":"/     println!(\"ready\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31148,"byte_end":31174,"line_start":953,"line_end":953,"column_start":5,"column_end":31}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31179,"byte_end":31210,"line_start":954,"line_end":954,"column_start":5,"column_end":36}},{"value":"/         println!(\"{:?}\", HASHMAP.get(&13));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31215,"byte_end":31262,"line_start":955,"line_end":955,"column_start":5,"column_end":52}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31267,"byte_end":31294,"line_start":956,"line_end":956,"column_start":5,"column_end":32}},{"value":"/     println!(\"{:?}\", HASHMAP.get(&74));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31299,"byte_end":31342,"line_start":957,"line_end":957,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31347,"byte_end":31350,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/     // Prints:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31355,"byte_end":31373,"line_start":959,"line_end":959,"column_start":5,"column_end":23}},{"value":"/     //   ready","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31378,"byte_end":31396,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/     //   initializing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31401,"byte_end":31426,"line_start":961,"line_end":961,"column_start":5,"column_end":30}},{"value":"/     //   Some(\"Spica\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31431,"byte_end":31457,"line_start":962,"line_end":962,"column_start":5,"column_end":31}},{"value":"/     //   Some(\"Hoyten\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31462,"byte_end":31489,"line_start":963,"line_end":963,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31494,"byte_end":31499,"line_start":964,"line_end":964,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31504,"byte_end":31511,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32486,"byte_end":32489,"line_start":991,"line_end":991,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing\n function.\n","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32386,"byte_end":32442,"line_start":989,"line_end":989,"column_start":9,"column_end":65}},{"value":"/ function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32451,"byte_end":32464,"line_start":990,"line_end":990,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32761,"byte_end":32771,"line_start":998,"line_end":998,"column_start":16,"column_end":26},"name":"into_value","qualname":"<Lazy<T, F>>::into_value","value":"pub fn into_value(Lazy<T, F>) -> Result<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Lazy` returning the stored value.","sig":null,"attributes":[{"value":"/ Consumes this `Lazy` returning the stored value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32600,"byte_end":32652,"line_start":995,"line_end":995,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32661,"byte_end":32664,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(value)` if `Lazy` is initialized and `Err(f)` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32673,"byte_end":32745,"line_start":997,"line_end":997,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33541,"byte_end":33546,"line_start":1021,"line_end":1021,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and\n returns a reference to the result. This is equivalent\n to the `Deref` impl, but is explicit.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33105,"byte_end":33153,"line_start":1008,"line_end":1008,"column_start":9,"column_end":57}},{"value":"/ returns a reference to the result. This is equivalent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33162,"byte_end":33219,"line_start":1009,"line_end":1009,"column_start":9,"column_end":66}},{"value":"/ to the `Deref` impl, but is explicit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33228,"byte_end":33269,"line_start":1010,"line_end":1010,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33278,"byte_end":33281,"line_start":1011,"line_end":1011,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33290,"byte_end":33303,"line_start":1012,"line_end":1012,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33312,"byte_end":33319,"line_start":1013,"line_end":1013,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33328,"byte_end":33358,"line_start":1014,"line_end":1014,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33367,"byte_end":33370,"line_start":1015,"line_end":1015,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33379,"byte_end":33411,"line_start":1016,"line_end":1016,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33420,"byte_end":33423,"line_start":1017,"line_end":1017,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33432,"byte_end":33472,"line_start":1018,"line_end":1018,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33481,"byte_end":33509,"line_start":1019,"line_end":1019,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33518,"byte_end":33525,"line_start":1020,"line_end":1020,"column_start":9,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":290},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"race","qualname":"::race","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":302},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":313},{"krate":0,"index":326},{"krate":0,"index":329}],"decl_id":null,"docs":" \"First one wins\" flavor of `OnceCell`.","sig":null,"attributes":[{"value":"cfg(feature = \"race\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":34797,"byte_end":34821,"line_start":1068,"line_end":1068,"column_start":1,"column_end":25}},{"value":"/ \"First one wins\" flavor of `OnceCell`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46051,"byte_end":46093,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46094,"byte_end":46097,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If two threads race to initialize a type from the `race` module, they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46098,"byte_end":46171,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ don't block, execute initialization function together, but only one of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46172,"byte_end":46246,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ them stores the result.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46247,"byte_end":46274,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46275,"byte_end":46278,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module does not require `std` feature.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46279,"byte_end":46326,"line_start":7,"line_end":7,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46505,"byte_end":46521,"line_start":16,"line_end":16,"column_start":12,"column_end":28},"name":"OnceNonZeroUsize","qualname":"::race::OnceNonZeroUsize","value":"OnceNonZeroUsize {  }","parent":null,"children":[{"krate":0,"index":379}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46410,"byte_end":46467,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46640,"byte_end":46643,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<OnceNonZeroUsize>::new","value":"pub const fn new() -> OnceNonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46579,"byte_end":46608,"line_start":21,"line_end":21,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46613,"byte_end":46622,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46791,"byte_end":46794,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceNonZeroUsize>::get","value":"pub fn get(&Self) -> Option<NonZeroUsize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46735,"byte_end":46765,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46770,"byte_end":46779,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47089,"byte_end":47092,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceNonZeroUsize>::set","value":"pub fn set(&Self, NonZeroUsize) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46924,"byte_end":46970,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46975,"byte_end":46978,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(())` if it was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46983,"byte_end":47049,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47054,"byte_end":47063,"line_start":37,"line_end":37,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47068,"byte_end":47077,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47653,"byte_end":47664,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_or_init","qualname":"<OnceNonZeroUsize>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> NonZeroUsize where F: FnOnce() ->\nNonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47364,"byte_end":47439,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47444,"byte_end":47454,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47459,"byte_end":47462,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47467,"byte_end":47543,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47548,"byte_end":47623,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47628,"byte_end":47641,"line_start":53,"line_end":53,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48288,"byte_end":48303,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"get_or_try_init","qualname":"<OnceNonZeroUsize>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<NonZeroUsize, E> where\nF: FnOnce() -> Result<NonZeroUsize, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47931,"byte_end":47993,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":47998,"byte_end":48062,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48067,"byte_end":48089,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48094,"byte_end":48097,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48102,"byte_end":48178,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48183,"byte_end":48258,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48263,"byte_end":48276,"line_start":71,"line_end":71,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49033,"byte_end":49041,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"OnceBool","qualname":"::race::OnceBool","value":"OnceBool {  }","parent":null,"children":[{"krate":0,"index":385}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":48938,"byte_end":48995,"line_start":93,"line_end":93,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49157,"byte_end":49160,"line_start":102,"line_end":102,"column_start":18,"column_end":21},"name":"new","qualname":"<OnceBool>::new","value":"pub const fn new() -> OnceBool","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49096,"byte_end":49125,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49130,"byte_end":49139,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49296,"byte_end":49299,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceBool>::get","value":"pub fn get(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49240,"byte_end":49270,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49275,"byte_end":49284,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49552,"byte_end":49555,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceBool>::set","value":"pub fn set(&Self, bool) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49387,"byte_end":49433,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49438,"byte_end":49441,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(())` if it was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49446,"byte_end":49512,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49517,"byte_end":49526,"line_start":115,"line_end":115,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49531,"byte_end":49540,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49946,"byte_end":49957,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"get_or_init","qualname":"<OnceBool>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> bool where F: FnOnce() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49657,"byte_end":49732,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49737,"byte_end":49747,"line_start":122,"line_end":122,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49752,"byte_end":49755,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49760,"byte_end":49836,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49841,"byte_end":49916,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49921,"byte_end":49934,"line_start":126,"line_end":126,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50476,"byte_end":50491,"line_start":141,"line_end":141,"column_start":12,"column_end":27},"name":"get_or_try_init","qualname":"<OnceBool>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<bool, E> where F: FnOnce() ->\nResult<bool, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50119,"byte_end":50181,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50186,"byte_end":50250,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50255,"byte_end":50277,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50282,"byte_end":50285,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50290,"byte_end":50366,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50371,"byte_end":50446,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":50451,"byte_end":50464,"line_start":140,"line_end":140,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51262,"byte_end":51269,"line_start":173,"line_end":173,"column_start":16,"column_end":23},"name":"OnceBox","qualname":"::race::once_box::OnceBox","value":"OnceBox {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51168,"byte_end":51225,"line_start":171,"line_end":171,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51771,"byte_end":51774,"line_start":195,"line_end":195,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceBox<T>>::new","value":"pub const fn new() -> OnceBox<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51720,"byte_end":51749,"line_start":194,"line_end":194,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51956,"byte_end":51959,"line_start":200,"line_end":200,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceBox<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51895,"byte_end":51940,"line_start":199,"line_end":199,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52339,"byte_end":52342,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceBox<T>>::set","value":"pub fn set(&Self, Box<T>) -> Result<(), Box<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52169,"byte_end":52215,"line_start":208,"line_end":208,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52224,"byte_end":52227,"line_start":209,"line_end":209,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52236,"byte_end":52305,"line_start":210,"line_end":210,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52314,"byte_end":52323,"line_start":211,"line_end":211,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53125,"byte_end":53136,"line_start":233,"line_end":233,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceBox<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52812,"byte_end":52887,"line_start":227,"line_end":227,"column_start":9,"column_end":84}},{"value":"/ empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52896,"byte_end":52906,"line_start":228,"line_end":228,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52915,"byte_end":52918,"line_start":229,"line_end":229,"column_start":9,"column_end":12}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":52927,"byte_end":53003,"line_start":230,"line_end":230,"column_start":9,"column_end":85}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53012,"byte_end":53087,"line_start":231,"line_end":231,"column_start":9,"column_end":84}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53096,"byte_end":53109,"line_start":232,"line_end":232,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53806,"byte_end":53821,"line_start":251,"line_end":251,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceBox<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<Box<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53421,"byte_end":53483,"line_start":244,"line_end":244,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53492,"byte_end":53556,"line_start":245,"line_end":245,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53565,"byte_end":53587,"line_start":246,"line_end":246,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53596,"byte_end":53599,"line_start":247,"line_end":247,"column_start":9,"column_end":12}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53608,"byte_end":53684,"line_start":248,"line_end":248,"column_start":9,"column_end":85}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53693,"byte_end":53768,"line_start":249,"line_end":249,"column_start":9,"column_end":84}},{"value":"/ some `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":53777,"byte_end":53790,"line_start":250,"line_end":250,"column_start":9,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36043,"byte_end":36051,"line_start":31,"line_end":31,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36088,"byte_end":36096,"line_start":32,"line_end":32,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36158,"byte_end":36166,"line_start":34,"line_end":34,"column_start":55,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36208,"byte_end":36216,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":37103,"byte_end":37111,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":42413,"byte_end":42424,"line_start":219,"line_end":219,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11197,"byte_end":11205,"line_start":334,"line_end":334,"column_start":59,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11279,"byte_end":11287,"line_start":336,"line_end":336,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11319,"byte_end":11327,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11444,"byte_end":11452,"line_start":344,"line_end":344,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11741,"byte_end":11749,"line_start":353,"line_end":353,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12110,"byte_end":12118,"line_start":366,"line_end":366,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12247,"byte_end":12255,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12287,"byte_end":12295,"line_start":374,"line_end":374,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12427,"byte_end":12435,"line_start":380,"line_end":380,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19097,"byte_end":19101,"line_start":576,"line_end":576,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19187,"byte_end":19191,"line_start":578,"line_end":578,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19386,"byte_end":19390,"line_start":584,"line_end":584,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20445,"byte_end":20449,"line_start":615,"line_end":615,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21193,"byte_end":21197,"line_start":638,"line_end":638,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21353,"byte_end":21357,"line_start":645,"line_end":645,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21557,"byte_end":21561,"line_start":652,"line_end":652,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23059,"byte_end":23067,"line_start":701,"line_end":701,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23195,"byte_end":23203,"line_start":707,"line_end":707,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23492,"byte_end":23500,"line_start":716,"line_end":716,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23848,"byte_end":23856,"line_start":729,"line_end":729,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24045,"byte_end":24053,"line_start":737,"line_end":737,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24189,"byte_end":24197,"line_start":743,"line_end":743,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24217,"byte_end":24225,"line_start":745,"line_end":745,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31659,"byte_end":31663,"line_start":971,"line_end":971,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32148,"byte_end":32152,"line_start":982,"line_end":982,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32302,"byte_end":32306,"line_start":986,"line_end":986,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32365,"byte_end":32369,"line_start":988,"line_end":988,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33084,"byte_end":33088,"line_start":1007,"line_end":1007,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33818,"byte_end":33822,"line_start":1029,"line_end":1029,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33978,"byte_end":33982,"line_start":1036,"line_end":1036,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":34182,"byte_end":34186,"line_start":1043,"line_end":1043,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46556,"byte_end":46572,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49081,"byte_end":49089,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51379,"byte_end":51386,"line_start":178,"line_end":178,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51485,"byte_end":51492,"line_start":184,"line_end":184,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51699,"byte_end":51706,"line_start":193,"line_end":193,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":54571,"byte_end":54578,"line_start":275,"line_end":275,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":34830,"byte_end":34834,"line_start":1069,"line_end":1069,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":290}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36043,"byte_end":36051,"line_start":31,"line_end":31,"column_start":38,"column_end":46},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36088,"byte_end":36096,"line_start":32,"line_end":32,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36158,"byte_end":36166,"line_start":34,"line_end":34,"column_start":55,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":6415}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":36208,"byte_end":36216,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":6414}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":37103,"byte_end":37111,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/imp_std.rs","byte_start":42413,"byte_end":42424,"line_start":219,"line_end":219,"column_start":15,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11197,"byte_end":11205,"line_start":334,"line_end":334,"column_start":59,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":110},"to":{"krate":1,"index":6415}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11279,"byte_end":11287,"line_start":336,"line_end":336,"column_start":40,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":110},"to":{"krate":1,"index":6414}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11319,"byte_end":11327,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11444,"byte_end":11452,"line_start":344,"line_end":344,"column_start":40,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":11741,"byte_end":11749,"line_start":353,"line_end":353,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12110,"byte_end":12118,"line_start":366,"line_end":366,"column_start":38,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12247,"byte_end":12255,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12287,"byte_end":12295,"line_start":374,"line_end":374,"column_start":25,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":12427,"byte_end":12435,"line_start":380,"line_end":380,"column_start":13,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19097,"byte_end":19101,"line_start":576,"line_end":576,"column_start":49,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":6415}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19187,"byte_end":19191,"line_start":578,"line_end":578,"column_start":43,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":19386,"byte_end":19390,"line_start":584,"line_end":584,"column_start":16,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":20445,"byte_end":20449,"line_start":615,"line_end":615,"column_start":31,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21193,"byte_end":21197,"line_start":638,"line_end":638,"column_start":41,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21353,"byte_end":21357,"line_start":645,"line_end":645,"column_start":44,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":21557,"byte_end":21561,"line_start":652,"line_end":652,"column_start":34,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23059,"byte_end":23067,"line_start":701,"line_end":701,"column_start":25,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23195,"byte_end":23203,"line_start":707,"line_end":707,"column_start":40,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23492,"byte_end":23500,"line_start":716,"line_end":716,"column_start":30,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":23848,"byte_end":23856,"line_start":729,"line_end":729,"column_start":25,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24045,"byte_end":24053,"line_start":737,"line_end":737,"column_start":38,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24189,"byte_end":24197,"line_start":743,"line_end":743,"column_start":24,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":24217,"byte_end":24225,"line_start":745,"line_end":745,"column_start":13,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":31659,"byte_end":31663,"line_start":971,"line_end":971,"column_start":43,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32148,"byte_end":32152,"line_start":982,"line_end":982,"column_start":38,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32302,"byte_end":32306,"line_start":986,"line_end":986,"column_start":49,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":249},"to":{"krate":1,"index":6415}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":32365,"byte_end":32369,"line_start":988,"line_end":988,"column_start":16,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33084,"byte_end":33088,"line_start":1007,"line_end":1007,"column_start":31,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33818,"byte_end":33822,"line_start":1029,"line_end":1029,"column_start":41,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":33978,"byte_end":33982,"line_start":1036,"line_end":1036,"column_start":44,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/lib.rs","byte_start":34182,"byte_end":34186,"line_start":1043,"line_end":1043,"column_start":34,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":46556,"byte_end":46572,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":49081,"byte_end":49089,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51379,"byte_end":51386,"line_start":178,"line_end":178,"column_start":25,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51485,"byte_end":51492,"line_start":184,"line_end":184,"column_start":22,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":51699,"byte_end":51706,"line_start":193,"line_end":193,"column_start":13,"column_end":20},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.7.2/src/race.rs","byte_start":54571,"byte_end":54578,"line_start":275,"line_end":275,"column_start":42,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":2837}}]}