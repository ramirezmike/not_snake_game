{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_io","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=d9308d2f7f090c39","-C","extra-filename=-d9308d2f7f090c39","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libfutures_io-d9308d2f7f090c39.rmeta"},"prelude":{"crate_id":{"name":"futures_io","disambiguator":[14758693880677751295,16604612684142223989]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":0,"byte_end":22050,"line_start":1,"line_end":567,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":22048,"byte_end":22049,"line_start":567,"line_end":567,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":0,"byte_end":22050,"line_start":1,"line_end":567,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95}],"decl_id":null,"docs":" Asynchronous I/O","sig":null,"attributes":[{"value":"/ Asynchronous I/O","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":21,"byte_end":24,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains the `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":25,"byte_end":96,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ `AsyncBufRead` traits, the asynchronous analogs to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":97,"byte_end":151,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ `std::io::{Read, Write, Seek, BufRead}`. The primary difference is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":152,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ that these traits integrate with the asynchronous task system.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":223,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":290,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All items of this library are only available when the `std` feature of this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":294,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":374,"byte_end":431,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":570,"byte_end":658,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":826,"byte_end":847,"line_start":18,"line_end":18,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":2269,"byte_end":2278,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"AsyncRead","qualname":"::if_std::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":1877,"byte_end":1907,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":1912,"byte_end":1915,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Read` trait, but integrates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":1920,"byte_end":1992,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_read`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":1997,"byte_end":2066,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Read::read`, will automatically queue the current task","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":2071,"byte_end":2145,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":2150,"byte_end":2226,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":2231,"byte_end":2254,"line_start":50,"line_end":50,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3838,"byte_end":3847,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"poll_read","qualname":"::if_std::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3105,"byte_end":3157,"line_start":73,"line_end":73,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3166,"byte_end":3169,"line_start":74,"line_end":74,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3178,"byte_end":3236,"line_start":75,"line_end":75,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3245,"byte_end":3248,"line_start":76,"line_end":76,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3257,"byte_end":3316,"line_start":77,"line_end":77,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3325,"byte_end":3383,"line_start":78,"line_end":78,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3392,"byte_end":3473,"line_start":79,"line_end":79,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3482,"byte_end":3508,"line_start":80,"line_end":80,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3517,"byte_end":3520,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3529,"byte_end":3549,"line_start":82,"line_end":82,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3558,"byte_end":3561,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3570,"byte_end":3633,"line_start":84,"line_end":84,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3642,"byte_end":3708,"line_start":85,"line_end":85,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3717,"byte_end":3775,"line_start":86,"line_end":86,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3784,"byte_end":3826,"line_start":87,"line_end":87,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5104,"byte_end":5122,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"::if_std::AsyncRead::poll_read_vectored","value":"pub fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":3953,"byte_end":4020,"line_start":91,"line_end":91,"column_start":9,"column_end":76}},{"value":"/ IO operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4029,"byte_end":4047,"line_start":92,"line_end":92,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4056,"byte_end":4059,"line_start":93,"line_end":93,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_read`, but allows data to be read","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4068,"byte_end":4137,"line_start":94,"line_end":94,"column_start":9,"column_end":78}},{"value":"/ into multiple buffers using a single operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4146,"byte_end":4197,"line_start":95,"line_end":95,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4206,"byte_end":4209,"line_start":96,"line_end":96,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4218,"byte_end":4276,"line_start":97,"line_end":97,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4285,"byte_end":4288,"line_start":98,"line_end":98,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4297,"byte_end":4356,"line_start":99,"line_end":99,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4365,"byte_end":4423,"line_start":100,"line_end":100,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4432,"byte_end":4513,"line_start":101,"line_end":101,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4522,"byte_end":4548,"line_start":102,"line_end":102,"column_start":9,"column_end":35}},{"value":"/ By default, this method delegates to using `poll_read` on the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4557,"byte_end":4628,"line_start":103,"line_end":103,"column_start":9,"column_end":80}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4637,"byte_end":4713,"line_start":104,"line_end":104,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4722,"byte_end":4774,"line_start":105,"line_end":105,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":106,"line_end":106,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4795,"byte_end":4815,"line_start":107,"line_end":107,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4824,"byte_end":4827,"line_start":108,"line_end":108,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4836,"byte_end":4899,"line_start":109,"line_end":109,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4908,"byte_end":4974,"line_start":110,"line_end":110,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":4983,"byte_end":5041,"line_start":111,"line_end":111,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5050,"byte_end":5092,"line_start":112,"line_end":112,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5852,"byte_end":5862,"line_start":133,"line_end":133,"column_start":15,"column_end":25},"name":"AsyncWrite","qualname":"::if_std::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Write bytes asynchronously.","sig":null,"attributes":[{"value":"/ Write bytes asynchronously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5448,"byte_end":5479,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5484,"byte_end":5487,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Write` trait, but integrates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5492,"byte_end":5565,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ with the asynchronous task system. In particular, the `poll_write`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5570,"byte_end":5640,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ method, unlike `Write::write`, will automatically queue the current task","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5645,"byte_end":5721,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ for wakeup and return if the writer cannot take more data, rather than blocking","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5726,"byte_end":5809,"line_start":131,"line_end":131,"column_start":5,"column_end":88}},{"value":"/ the calling thread.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5814,"byte_end":5837,"line_start":132,"line_end":132,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6796,"byte_end":6806,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"poll_write","qualname":"::if_std::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5873,"byte_end":5927,"line_start":134,"line_end":134,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5936,"byte_end":5939,"line_start":135,"line_end":135,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":5948,"byte_end":6009,"line_start":136,"line_end":136,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6018,"byte_end":6021,"line_start":137,"line_end":137,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6030,"byte_end":6092,"line_start":138,"line_end":138,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6101,"byte_end":6159,"line_start":139,"line_end":139,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6168,"byte_end":6249,"line_start":140,"line_end":140,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6258,"byte_end":6284,"line_start":141,"line_end":141,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6293,"byte_end":6296,"line_start":142,"line_end":142,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6305,"byte_end":6325,"line_start":143,"line_end":143,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6334,"byte_end":6337,"line_start":144,"line_end":144,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6346,"byte_end":6409,"line_start":145,"line_end":145,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6418,"byte_end":6484,"line_start":146,"line_end":146,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6493,"byte_end":6551,"line_start":147,"line_end":147,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6560,"byte_end":6602,"line_start":148,"line_end":148,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6611,"byte_end":6614,"line_start":149,"line_end":149,"column_start":9,"column_end":12}},{"value":"/ `poll_write` must try to make progress by flushing the underlying object if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6623,"byte_end":6702,"line_start":150,"line_end":150,"column_start":9,"column_end":88}},{"value":"/ that is the only way the underlying object can become writable again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6711,"byte_end":6784,"line_start":151,"line_end":151,"column_start":9,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8084,"byte_end":8103,"line_start":178,"line_end":178,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"::if_std::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6908,"byte_end":6977,"line_start":155,"line_end":155,"column_start":9,"column_end":78}},{"value":"/ IO operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":6986,"byte_end":7004,"line_start":156,"line_end":156,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7013,"byte_end":7016,"line_start":157,"line_end":157,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_write`, but allows data from multiple buffers to be written","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7025,"byte_end":7120,"line_start":158,"line_end":158,"column_start":9,"column_end":104}},{"value":"/ using a single operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7129,"byte_end":7158,"line_start":159,"line_end":159,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7167,"byte_end":7170,"line_start":160,"line_end":160,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7179,"byte_end":7240,"line_start":161,"line_end":161,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7249,"byte_end":7252,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7261,"byte_end":7323,"line_start":163,"line_end":163,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7332,"byte_end":7390,"line_start":164,"line_end":164,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7399,"byte_end":7480,"line_start":165,"line_end":165,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7489,"byte_end":7515,"line_start":166,"line_end":166,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7524,"byte_end":7527,"line_start":167,"line_end":167,"column_start":9,"column_end":12}},{"value":"/ By default, this method delegates to using `poll_write` on the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7536,"byte_end":7608,"line_start":168,"line_end":168,"column_start":9,"column_end":81}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7617,"byte_end":7693,"line_start":169,"line_end":169,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7702,"byte_end":7754,"line_start":170,"line_end":170,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7763,"byte_end":7766,"line_start":171,"line_end":171,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7775,"byte_end":7795,"line_start":172,"line_end":172,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7804,"byte_end":7807,"line_start":173,"line_end":173,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7816,"byte_end":7879,"line_start":174,"line_end":174,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7888,"byte_end":7954,"line_start":175,"line_end":175,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":7963,"byte_end":8021,"line_start":176,"line_end":176,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8030,"byte_end":8072,"line_start":177,"line_end":177,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9291,"byte_end":9301,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"::if_std::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8418,"byte_end":8488,"line_start":190,"line_end":190,"column_start":9,"column_end":79}},{"value":"/ their destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8497,"byte_end":8519,"line_start":191,"line_end":191,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8528,"byte_end":8531,"line_start":192,"line_end":192,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8540,"byte_end":8586,"line_start":193,"line_end":193,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8595,"byte_end":8598,"line_start":194,"line_end":194,"column_start":9,"column_end":12}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8607,"byte_end":8671,"line_start":195,"line_end":195,"column_start":9,"column_end":73}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8680,"byte_end":8738,"line_start":196,"line_end":196,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8747,"byte_end":8829,"line_start":197,"line_end":197,"column_start":9,"column_end":91}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8838,"byte_end":8868,"line_start":198,"line_end":198,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8877,"byte_end":8880,"line_start":199,"line_end":199,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8889,"byte_end":8909,"line_start":200,"line_end":200,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8918,"byte_end":8921,"line_start":201,"line_end":201,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":8930,"byte_end":8993,"line_start":202,"line_end":202,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9002,"byte_end":9068,"line_start":203,"line_end":203,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9077,"byte_end":9135,"line_start":204,"line_end":204,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9144,"byte_end":9186,"line_start":205,"line_end":205,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9195,"byte_end":9198,"line_start":206,"line_end":206,"column_start":9,"column_end":12}},{"value":"/ It only makes sense to do anything here if you actually buffer data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9207,"byte_end":9279,"line_start":207,"line_end":207,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10087,"byte_end":10097,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"poll_close","qualname":"::if_std::AsyncWrite::poll_close","value":"pub fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to close the object.","sig":null,"attributes":[{"value":"/ Attempt to close the object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9376,"byte_end":9408,"line_start":210,"line_end":210,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":211,"line_end":211,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9429,"byte_end":9475,"line_start":212,"line_end":212,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9484,"byte_end":9487,"line_start":213,"line_end":213,"column_start":9,"column_end":12}},{"value":"/ If closing cannot immediately complete, this function returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9496,"byte_end":9561,"line_start":214,"line_end":214,"column_start":9,"column_end":74}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9570,"byte_end":9628,"line_start":215,"line_end":215,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9637,"byte_end":9719,"line_start":216,"line_end":216,"column_start":9,"column_end":91}},{"value":"/ progress towards closing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9728,"byte_end":9757,"line_start":217,"line_end":217,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9766,"byte_end":9769,"line_start":218,"line_end":218,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9778,"byte_end":9798,"line_start":219,"line_end":219,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9807,"byte_end":9810,"line_start":220,"line_end":220,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9819,"byte_end":9882,"line_start":221,"line_end":221,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9891,"byte_end":9957,"line_start":222,"line_end":222,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":9966,"byte_end":10024,"line_start":223,"line_end":223,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10033,"byte_end":10075,"line_start":224,"line_end":224,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10566,"byte_end":10575,"line_start":235,"line_end":235,"column_start":15,"column_end":24},"name":"AsyncSeek","qualname":"::if_std::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10174,"byte_end":10204,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10209,"byte_end":10212,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Seek` trait, but integrates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10217,"byte_end":10289,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_seek`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10294,"byte_end":10363,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Seek::seek`, will automatically queue the current task","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10368,"byte_end":10442,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10447,"byte_end":10523,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10528,"byte_end":10551,"line_start":234,"line_end":234,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11430,"byte_end":11439,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"::if_std::AsyncSeek::poll_seek","value":"pub fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<Result<u64>>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Attempt to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempt to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10586,"byte_end":10642,"line_start":236,"line_end":236,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10651,"byte_end":10654,"line_start":237,"line_end":237,"column_start":9,"column_end":12}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10663,"byte_end":10736,"line_start":238,"line_end":238,"column_start":9,"column_end":82}},{"value":"/ by the implementation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10745,"byte_end":10771,"line_start":239,"line_end":239,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10780,"byte_end":10783,"line_start":240,"line_end":240,"column_start":9,"column_end":12}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10792,"byte_end":10841,"line_start":241,"line_end":241,"column_start":9,"column_end":58}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10850,"byte_end":10920,"line_start":242,"line_end":242,"column_start":9,"column_end":79}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10929,"byte_end":10990,"line_start":243,"line_end":243,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":10999,"byte_end":11002,"line_start":244,"line_end":244,"column_start":9,"column_end":12}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11011,"byte_end":11023,"line_start":245,"line_end":245,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11032,"byte_end":11035,"line_start":246,"line_end":246,"column_start":9,"column_end":12}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11044,"byte_end":11100,"line_start":247,"line_end":247,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11109,"byte_end":11112,"line_start":248,"line_end":248,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11121,"byte_end":11141,"line_start":249,"line_end":249,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11150,"byte_end":11153,"line_start":250,"line_end":250,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11162,"byte_end":11225,"line_start":251,"line_end":251,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11234,"byte_end":11300,"line_start":252,"line_end":252,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11309,"byte_end":11367,"line_start":253,"line_end":253,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11376,"byte_end":11418,"line_start":254,"line_end":254,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11950,"byte_end":11962,"line_start":266,"line_end":266,"column_start":15,"column_end":27},"name":"AsyncBufRead","qualname":"::if_std::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11544,"byte_end":11574,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11579,"byte_end":11582,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::BufRead` trait, but integrates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11587,"byte_end":11662,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with the asynchronous task system. In particular, the `poll_fill_buf`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11667,"byte_end":11740,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ method, unlike `BufRead::fill_buf`, will automatically queue the current task","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11745,"byte_end":11826,"line_start":263,"line_end":263,"column_start":5,"column_end":86}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11831,"byte_end":11907,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11912,"byte_end":11935,"line_start":265,"line_end":265,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13465,"byte_end":13478,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"::if_std::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Attempt to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempt to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11984,"byte_end":12068,"line_start":267,"line_end":267,"column_start":9,"column_end":93}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12077,"byte_end":12118,"line_start":268,"line_end":268,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12127,"byte_end":12130,"line_start":269,"line_end":269,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12139,"byte_end":12186,"line_start":270,"line_end":270,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12195,"byte_end":12198,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12207,"byte_end":12266,"line_start":272,"line_end":272,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12275,"byte_end":12333,"line_start":273,"line_end":273,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12342,"byte_end":12423,"line_start":274,"line_end":274,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12432,"byte_end":12458,"line_start":275,"line_end":275,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12467,"byte_end":12470,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12479,"byte_end":12550,"line_start":277,"line_end":277,"column_start":9,"column_end":80}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12559,"byte_end":12621,"line_start":278,"line_end":278,"column_start":9,"column_end":71}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12630,"byte_end":12701,"line_start":279,"line_end":279,"column_start":9,"column_end":80}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12710,"byte_end":12791,"line_start":280,"line_end":280,"column_start":9,"column_end":90}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12800,"byte_end":12876,"line_start":281,"line_end":281,"column_start":9,"column_end":85}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12885,"byte_end":12936,"line_start":282,"line_end":282,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12945,"byte_end":12948,"line_start":283,"line_end":283,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":12957,"byte_end":12996,"line_start":284,"line_end":284,"column_start":9,"column_end":48}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13005,"byte_end":13043,"line_start":285,"line_end":285,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13052,"byte_end":13055,"line_start":286,"line_end":286,"column_start":9,"column_end":12}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13064,"byte_end":13135,"line_start":287,"line_end":287,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13144,"byte_end":13147,"line_start":288,"line_end":288,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13156,"byte_end":13176,"line_start":289,"line_end":289,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13185,"byte_end":13188,"line_start":290,"line_end":290,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13197,"byte_end":13260,"line_start":291,"line_end":291,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13269,"byte_end":13335,"line_start":292,"line_end":292,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13344,"byte_end":13402,"line_start":293,"line_end":293,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13411,"byte_end":13453,"line_start":294,"line_end":294,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14453,"byte_end":14460,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"consume","qualname":"::if_std::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13568,"byte_end":13642,"line_start":298,"line_end":298,"column_start":9,"column_end":83}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13651,"byte_end":13718,"line_start":299,"line_end":299,"column_start":9,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13727,"byte_end":13730,"line_start":300,"line_end":300,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13739,"byte_end":13810,"line_start":301,"line_end":301,"column_start":9,"column_end":80}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13819,"byte_end":13888,"line_start":302,"line_end":302,"column_start":9,"column_end":78}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13897,"byte_end":13971,"line_start":303,"line_end":303,"column_start":9,"column_end":83}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":13980,"byte_end":14057,"line_start":304,"line_end":304,"column_start":9,"column_end":86}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14066,"byte_end":14136,"line_start":305,"line_end":305,"column_start":9,"column_end":79}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14145,"byte_end":14198,"line_start":306,"line_end":306,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14207,"byte_end":14210,"line_start":307,"line_end":307,"column_start":9,"column_end":12}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14219,"byte_end":14291,"line_start":308,"line_end":308,"column_start":9,"column_end":81}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14300,"byte_end":14322,"line_start":309,"line_end":309,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14331,"byte_end":14334,"line_start":310,"line_end":310,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14343,"byte_end":14382,"line_start":311,"line_end":311,"column_start":9,"column_end":48}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":14391,"byte_end":14441,"line_start":312,"line_end":312,"column_start":9,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":15246,"byte_end":15249,"line_start":337,"line_end":337,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":15416,"byte_end":15419,"line_start":345,"line_end":345,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":17762,"byte_end":17765,"line_start":417,"line_end":417,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":17937,"byte_end":17940,"line_start":425,"line_end":425,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":19612,"byte_end":19615,"line_start":475,"line_end":475,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20004,"byte_end":20007,"line_start":489,"line_end":489,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20174,"byte_end":20177,"line_start":497,"line_end":497,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20919,"byte_end":20922,"line_start":523,"line_end":523,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":21106,"byte_end":21109,"line_start":531,"line_end":531,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":11964,"byte_end":11973,"line_start":266,"line_end":266,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":15246,"byte_end":15249,"line_start":337,"line_end":337,"column_start":55,"column_end":58},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":15416,"byte_end":15419,"line_start":345,"line_end":345,"column_start":27,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":17762,"byte_end":17765,"line_start":417,"line_end":417,"column_start":57,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":17937,"byte_end":17940,"line_start":425,"line_end":425,"column_start":28,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":19612,"byte_end":19615,"line_start":475,"line_end":475,"column_start":25,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6781},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20004,"byte_end":20007,"line_start":489,"line_end":489,"column_start":55,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20174,"byte_end":20177,"line_start":497,"line_end":497,"column_start":27,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":20919,"byte_end":20922,"line_start":523,"line_end":523,"column_start":61,"column_end":64},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.13/src/lib.rs","byte_start":21106,"byte_end":21109,"line_start":531,"line_end":531,"column_start":30,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":49}}]}