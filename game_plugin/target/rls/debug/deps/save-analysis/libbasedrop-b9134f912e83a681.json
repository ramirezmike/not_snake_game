{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","basedrop","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b9134f912e83a681","-C","extra-filename=-b9134f912e83a681","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libbasedrop-b9134f912e83a681.rmeta"},"prelude":{"crate_id":{"name":"basedrop","disambiguator":[16860673806303828166,3579471529794778945]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","num":4,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":0,"byte_end":901,"line_start":1,"line_end":28,"column_start":1,"column_end":24}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":838,"byte_end":839,"line_start":25,"line_end":25,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Handle, Node","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":856,"byte_end":857,"line_start":26,"line_end":26,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":875,"byte_end":876,"line_start":27,"line_end":27,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Shared, SharedInner","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":899,"byte_end":900,"line_start":28,"line_end":28,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":0,"byte_end":901,"line_start":1,"line_end":28,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":111},{"krate":0,"index":166},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" Memory-management tools for real-time audio and other latency-critical scenarios.","sig":null,"attributes":[{"value":"/ Memory-management tools for real-time audio and other latency-critical scenarios.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":0,"byte_end":85,"line_start":1,"line_end":1,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":86,"byte_end":89,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ - [`Owned`] and [`Shared`] are smart pointers analogous to `Box` and `Arc`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":90,"byte_end":168,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ which add their contents to a queue for deferred collection when dropped.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":169,"byte_end":246,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ - [`Collector`] is used to process the drop queue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":247,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/ - [`Node`] provides a lower-level interface for implementing custom smart","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":302,"byte_end":379,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   pointers or data structures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":380,"byte_end":414,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/ - [`SharedCell`] implements a mutable memory location holding a [`Shared`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":415,"byte_end":493,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/   pointer that can be used by multiple readers and writers in a thread-safe","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":494,"byte_end":573,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/   manner.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":574,"byte_end":587,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":588,"byte_end":591,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Owned`]: crate::Owned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":592,"byte_end":619,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ [`Shared`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":620,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":650,"byte_end":685,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ [`Node`]: crate::Node","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":686,"byte_end":711,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ [`SharedCell`]: crate::SharedCell","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":712,"byte_end":749,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"no_std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/lib.rs","byte_start":751,"byte_end":761,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1681,"byte_end":1685,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Node","qualname":"::collector::Node","value":"Node { data }","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" An allocation that can be added to its associated [`Collector`]'s drop\n queue.","sig":null,"attributes":[{"value":"/ An allocation that can be added to its associated [`Collector`]'s drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1271,"byte_end":1345,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ queue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1346,"byte_end":1356,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1357,"byte_end":1360,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `Node` provides a low-level interface intended for use in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1361,"byte_end":1426,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ implementation of smart pointers and data structure internals. It is used","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1427,"byte_end":1504,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ in the implementations of [`Owned`] and [`Shared`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1505,"byte_end":1560,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1561,"byte_end":1564,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1565,"byte_end":1600,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/ [`Owned`]: crate::Owned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1601,"byte_end":1628,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ [`Shared`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1629,"byte_end":1658,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1659,"byte_end":1669,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":31},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1767,"byte_end":1771,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"data","qualname":"::collector::Node::data","value":"T","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" The data stored in this allocation.\n","sig":null,"attributes":[{"value":"/ The data stored in this allocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1719,"byte_end":1758,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2374,"byte_end":2379,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"alloc","qualname":"<Node<T>>::alloc","value":"pub fn alloc(&Handle, T) -> *mut Node<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a `Node` with the given data. Note that the `Node` will not\n be added to the drop queue or freed unless [`queue_drop`] is called.","sig":null,"attributes":[{"value":"/ Allocates a `Node` with the given data. Note that the `Node` will not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1917,"byte_end":1990,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ be added to the drop queue or freed unless [`queue_drop`] is called.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1995,"byte_end":2067,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2072,"byte_end":2075,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2080,"byte_end":2094,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2099,"byte_end":2106,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Handle, Node};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2111,"byte_end":2155,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2160,"byte_end":2163,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let mut collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2168,"byte_end":2209,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ let handle = collector.handle();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2214,"byte_end":2250,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/ let node = Node::alloc(&handle, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2255,"byte_end":2294,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2299,"byte_end":2306,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2311,"byte_end":2314,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`queue_drop`]: crate::Node::queue_drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2319,"byte_end":2362,"line_start":53,"line_end":53,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3797,"byte_end":3807,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"name":"queue_drop","qualname":"<Node<T>>::queue_drop","value":"pub unsafe fn queue_drop(*mut Node<T>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a `Node` to its associated [`Collector`]'s drop queue. The `Node`\n and its contained data may be dropped at a later time when\n [`Collector::collect`] or [`Collector::collect_one`] is called.","sig":null,"attributes":[{"value":"/ Adds a `Node` to its associated [`Collector`]'s drop queue. The `Node`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2810,"byte_end":2884,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ and its contained data may be dropped at a later time when","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2889,"byte_end":2951,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ [`Collector::collect`] or [`Collector::collect_one`] is called.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2956,"byte_end":3023,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3028,"byte_end":3031,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The argument must point to a valid `Node` previously allocated with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3036,"byte_end":3107,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ [`Node::alloc`]. `queue_drop` may only be called once for a given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3112,"byte_end":3181,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ `Node`, and the `Node`'s data must not be accessed afterwards.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3186,"byte_end":3252,"line_start":78,"line_end":78,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3257,"byte_end":3260,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3265,"byte_end":3279,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3284,"byte_end":3291,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Handle, Node};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3296,"byte_end":3340,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3345,"byte_end":3348,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let mut collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3353,"byte_end":3394,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ let handle = collector.handle();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3399,"byte_end":3435,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/ let node = Node::alloc(&handle, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3440,"byte_end":3479,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3484,"byte_end":3487,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3492,"byte_end":3504,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/     Node::queue_drop(node);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3509,"byte_end":3540,"line_start":89,"line_end":89,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3545,"byte_end":3550,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3555,"byte_end":3562,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3567,"byte_end":3570,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3575,"byte_end":3610,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/ [`Collector::collect`]: crate::Collector::collect","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3615,"byte_end":3668,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/ [`Collector::collect_one`]: crate::Collector::collect_one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3673,"byte_end":3734,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/ [`Node::alloc`]: crate::Node::alloc","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":3739,"byte_end":3778,"line_start":96,"line_end":96,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4566,"byte_end":4572,"line_start":113,"line_end":113,"column_start":19,"column_end":25},"name":"handle","qualname":"<Node<T>>::handle","value":"pub unsafe fn handle(*mut Node<T>) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Gets a [`Handle`] to this `Node`'s associated [`Collector`].","sig":null,"attributes":[{"value":"/ Gets a [`Handle`] to this `Node`'s associated [`Collector`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4152,"byte_end":4216,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4221,"byte_end":4224,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The argument must point to a valid `Node` previously allocated with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4229,"byte_end":4300,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/ [`Node::alloc`], on which [`queue_drop`] has not been called.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4305,"byte_end":4370,"line_start":107,"line_end":107,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4375,"byte_end":4378,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Handle`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4383,"byte_end":4415,"line_start":109,"line_end":109,"column_start":5,"column_end":37}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4420,"byte_end":4455,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/ [`Node::alloc`]: crate::Node::alloc","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4460,"byte_end":4499,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ [`queue_drop`]: crate::Node::queue_drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4504,"byte_end":4547,"line_start":112,"line_end":112,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5096,"byte_end":5102,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"Handle","qualname":"::collector::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" A handle to a [`Collector`], used when allocating [`Owned`] and [`Shared`]\n values.","sig":null,"attributes":[{"value":"/ A handle to a [`Collector`], used when allocating [`Owned`] and [`Shared`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4760,"byte_end":4838,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4839,"byte_end":4850,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4851,"byte_end":4854,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Multiple `Handle`s to a given [`Collector`] can exist at one time, and they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4855,"byte_end":4934,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ can be safely moved and shared between threads.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4935,"byte_end":4986,"line_start":124,"line_end":124,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4987,"byte_end":4990,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":4991,"byte_end":5026,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/ [`Owned`]: crate::Owned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5027,"byte_end":5054,"line_start":127,"line_end":127,"column_start":1,"column_end":28}},{"value":"/ [`Shared`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5055,"byte_end":5084,"line_start":128,"line_end":128,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6129,"byte_end":6138,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" A garbage collector for [`Owned`] and [`Shared`] allocations.","sig":null,"attributes":[{"value":"/ A garbage collector for [`Owned`] and [`Shared`] allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5680,"byte_end":5745,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5746,"byte_end":5749,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ If a `Collector` is dropped, it will leak all associated allocations as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5750,"byte_end":5825,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ well as its internal data structures. To avoid this, ensure that all","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5826,"byte_end":5898,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ allocations have been collected and all [`Handle`]s have been dropped, then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5899,"byte_end":5978,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"/ call [`try_cleanup`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5979,"byte_end":6004,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6005,"byte_end":6008,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Owned`]: crate::Owned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6009,"byte_end":6036,"line_start":167,"line_end":167,"column_start":1,"column_end":28}},{"value":"/ [`Shared`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6037,"byte_end":6066,"line_start":168,"line_end":168,"column_start":1,"column_end":30}},{"value":"/ [`try_cleanup`]: crate::Collector::try_cleanup","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6067,"byte_end":6117,"line_start":169,"line_end":169,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6331,"byte_end":6334,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Collector","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Collector`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Collector`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6286,"byte_end":6319,"line_start":179,"line_end":179,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7074,"byte_end":7080,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"handle","qualname":"<Collector>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Gets a [`Handle`] to this `Collector`.","sig":null,"attributes":[{"value":"/ Gets a [`Handle`] to this `Collector`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6978,"byte_end":7020,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7025,"byte_end":7028,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`Handle`]: crate::Handle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7033,"byte_end":7062,"line_start":206,"line_end":206,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7846,"byte_end":7853,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"collect","qualname":"<Collector>::collect","value":"pub fn collect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops all of the garbage in the queue.","sig":null,"attributes":[{"value":"/ Drops all of the garbage in the queue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7247,"byte_end":7289,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7294,"byte_end":7297,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7302,"byte_end":7316,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7321,"byte_end":7328,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Handle, Owned};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7333,"byte_end":7378,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ use core::mem::drop;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7383,"byte_end":7407,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7412,"byte_end":7415,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7420,"byte_end":7461,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/ let handle = collector.handle();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7466,"byte_end":7502,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/ let x = Owned::new(&handle, 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7507,"byte_end":7542,"line_start":224,"line_end":224,"column_start":5,"column_end":40}},{"value":"/ let y = Owned::new(&handle, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7547,"byte_end":7582,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ let z = Owned::new(&handle, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7587,"byte_end":7622,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7627,"byte_end":7630,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(collector.alloc_count(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7635,"byte_end":7678,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7683,"byte_end":7686,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ drop(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7691,"byte_end":7703,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ drop(y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7708,"byte_end":7720,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/ drop(z);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7725,"byte_end":7737,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/ collector.collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7742,"byte_end":7766,"line_start":233,"line_end":233,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7771,"byte_end":7774,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(collector.alloc_count(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7779,"byte_end":7822,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7827,"byte_end":7834,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8736,"byte_end":8747,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"collect_one","qualname":"<Collector>::collect_one","value":"pub fn collect_one(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to drop the first allocation in the queue. If successful,\n returns true; otherwise returns false.","sig":null,"attributes":[{"value":"/ Attempts to drop the first allocation in the queue. If successful,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7914,"byte_end":7984,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ returns true; otherwise returns false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":7989,"byte_end":8031,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8036,"byte_end":8039,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8044,"byte_end":8058,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8063,"byte_end":8070,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Handle, Owned};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8075,"byte_end":8120,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/ use core::mem::drop;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8125,"byte_end":8149,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8154,"byte_end":8157,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8162,"byte_end":8203,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ let handle = collector.handle();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8208,"byte_end":8244,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ let x = Owned::new(&handle, 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8249,"byte_end":8284,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/ let y = Owned::new(&handle, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8289,"byte_end":8324,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ let z = Owned::new(&handle, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8329,"byte_end":8364,"line_start":253,"line_end":253,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8369,"byte_end":8372,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(collector.alloc_count(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8377,"byte_end":8420,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8425,"byte_end":8428,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ drop(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8433,"byte_end":8445,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/ drop(y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8450,"byte_end":8462,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/ drop(z);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8467,"byte_end":8479,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8484,"byte_end":8487,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert!(collector.collect_one());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8492,"byte_end":8529,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/ assert!(collector.collect_one());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8534,"byte_end":8571,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/ assert!(collector.collect_one());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8576,"byte_end":8613,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8618,"byte_end":8621,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ assert!(!collector.collect_one());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8626,"byte_end":8664,"line_start":265,"line_end":265,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(collector.alloc_count(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8669,"byte_end":8712,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":8717,"byte_end":8724,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9659,"byte_end":9671,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"handle_count","qualname":"<Collector>::handle_count","value":"pub fn handle_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of live [`Handle`]s to this `Collector`.","sig":null,"attributes":[{"value":"/ Gets the number of live [`Handle`]s to this `Collector`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9545,"byte_end":9605,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9610,"byte_end":9613,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`Handle`]: crate::Handle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9618,"byte_end":9647,"line_start":293,"line_end":293,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9851,"byte_end":9862,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"alloc_count","qualname":"<Collector>::alloc_count","value":"pub fn alloc_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of live allocations associated with this `Collector`.\n","sig":null,"attributes":[{"value":"/ Gets the number of live allocations associated with this `Collector`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9766,"byte_end":9839,"line_start":298,"line_end":298,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10757,"byte_end":10768,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"try_cleanup","qualname":"<Collector>::try_cleanup","value":"pub fn try_cleanup(Self) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to free all resources associated with this `Collector`. This\n method will fail and return the original `Collector` if there are any\n live [`Handle`]s or allocations associated with it.","sig":null,"attributes":[{"value":"/ Attempts to free all resources associated with this `Collector`. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":9956,"byte_end":10029,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ method will fail and return the original `Collector` if there are any","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10034,"byte_end":10107,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ live [`Handle`]s or allocations associated with it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10112,"byte_end":10167,"line_start":305,"line_end":305,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10172,"byte_end":10175,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10180,"byte_end":10194,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10199,"byte_end":10206,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Handle, Owned};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10211,"byte_end":10256,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ use core::mem::drop;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10261,"byte_end":10285,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10290,"byte_end":10293,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let mut collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10298,"byte_end":10339,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/ let handle = collector.handle();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10344,"byte_end":10380,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/ let x = Owned::new(&handle, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10385,"byte_end":10420,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10425,"byte_end":10428,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let result = collector.try_cleanup();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10433,"byte_end":10474,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10479,"byte_end":10508,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ let mut collector = result.unwrap_err();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10513,"byte_end":10557,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10562,"byte_end":10565,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ drop(handle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10570,"byte_end":10587,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"/ drop(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10592,"byte_end":10604,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/ collector.collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10609,"byte_end":10633,"line_start":322,"line_end":322,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10638,"byte_end":10641,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ assert!(collector.try_cleanup().is_ok());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10646,"byte_end":10691,"line_start":324,"line_end":324,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10696,"byte_end":10703,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10708,"byte_end":10711,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`Handle`]: crate::Handle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":10716,"byte_end":10745,"line_start":327,"line_end":327,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13505,"byte_end":13510,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Owned","qualname":"::owned::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" An owned smart pointer with deferred collection, analogous to `Box`.","sig":null,"attributes":[{"value":"/ An owned smart pointer with deferred collection, analogous to `Box`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13098,"byte_end":13170,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13171,"byte_end":13174,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When an `Owned<T>` is dropped, its contents are added to the drop queue","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13175,"byte_end":13250,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ of the [`Collector`] whose [`Handle`] it was originally allocated with.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13251,"byte_end":13326,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ As the collector may be on another thread, contents are required to be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13327,"byte_end":13401,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ `Send + 'static`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13402,"byte_end":13423,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13424,"byte_end":13427,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13428,"byte_end":13463,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ [`Handle`]: crate::Handle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13464,"byte_end":13493,"line_start":15,"line_end":15,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13943,"byte_end":13946,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(&Handle, T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Owned<T>`.","sig":null,"attributes":[{"value":"/ Constructs a new `Owned<T>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13700,"byte_end":13732,"line_start":25,"line_end":25,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13737,"byte_end":13740,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13745,"byte_end":13759,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13764,"byte_end":13771,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Owned};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13776,"byte_end":13813,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13818,"byte_end":13821,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13826,"byte_end":13863,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"/ let three = Owned::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13868,"byte_end":13919,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13924,"byte_end":13931,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15370,"byte_end":15376,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Shared","qualname":"::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" A reference-counted smart pointer with deferred collection, analogous to\n `Arc`.","sig":null,"attributes":[{"value":"/ A reference-counted smart pointer with deferred collection, analogous to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":14928,"byte_end":15004,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ `Arc`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15005,"byte_end":15015,"line_start":9,"line_end":9,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15016,"byte_end":15019,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When a `Shared<T>`'s reference count goes to zero, its contents are added","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15020,"byte_end":15097,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ to the drop queue of the [`Collector`] whose [`Handle`] it was originally","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15098,"byte_end":15175,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ allocated with. As the collector may be on another thread, contents are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15176,"byte_end":15251,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ required to be `Send + 'static`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15252,"byte_end":15288,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15289,"byte_end":15292,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Collector`]: crate::Collector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15293,"byte_end":15328,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ [`Handle`]: crate::Handle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15329,"byte_end":15358,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15952,"byte_end":15955,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<T>>::new","value":"pub fn new(&Handle, T) -> Shared<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Shared<T>`.","sig":null,"attributes":[{"value":"/ Constructs a new `Shared<T>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15706,"byte_end":15739,"line_start":32,"line_end":32,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15744,"byte_end":15747,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15752,"byte_end":15766,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15771,"byte_end":15778,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15783,"byte_end":15821,"line_start":36,"line_end":36,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15826,"byte_end":15829,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15834,"byte_end":15871,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ let three = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15876,"byte_end":15928,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15933,"byte_end":15940,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16858,"byte_end":16865,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Shared<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value if there are no\n other extant `Shared` pointers to the same allocation; otherwise\n returns `None`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value if there are no","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16300,"byte_end":16370,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ other extant `Shared` pointers to the same allocation; otherwise","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16375,"byte_end":16443,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ returns `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16448,"byte_end":16467,"line_start":57,"line_end":57,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16472,"byte_end":16475,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16480,"byte_end":16494,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16499,"byte_end":16506,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16511,"byte_end":16549,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16554,"byte_end":16557,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16562,"byte_end":16599,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/ let mut x = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16604,"byte_end":16656,"line_start":64,"line_end":64,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16661,"byte_end":16664,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ *Shared::get_mut(&mut x).unwrap() = 4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16669,"byte_end":16711,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*x, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16716,"byte_end":16738,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16743,"byte_end":16746,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let _y = Shared::clone(&x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16751,"byte_end":16782,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert!(Shared::get_mut(&mut x).is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16787,"byte_end":16834,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16839,"byte_end":16846,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19475,"byte_end":19485,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"SharedCell","qualname":"::shared_cell::SharedCell","value":"SharedCell {  }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":" A thread-safe shared mutable memory location that holds a [`Shared<T>`].","sig":null,"attributes":[{"value":"/ A thread-safe shared mutable memory location that holds a [`Shared<T>`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19226,"byte_end":19302,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19303,"byte_end":19306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `SharedCell` is designed to be low-overhead for readers at the expense of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19307,"byte_end":19384,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ somewhat higher overhead for writers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19385,"byte_end":19426,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19427,"byte_end":19430,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Shared<T>`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19431,"byte_end":19463,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20074,"byte_end":20077,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedCell<T>>::new","value":"pub fn new(Shared<T>) -> SharedCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SharedCell` containing `value`.","sig":null,"attributes":[{"value":"/ Constructs a new `SharedCell` containing `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19753,"byte_end":19806,"line_start":23,"line_end":23,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19811,"byte_end":19814,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19819,"byte_end":19833,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19838,"byte_end":19845,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared, SharedCell};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19850,"byte_end":19900,"line_start":27,"line_end":27,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19905,"byte_end":19908,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19913,"byte_end":19950,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ let three = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19955,"byte_end":20007,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ let cell = SharedCell::new(three);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20012,"byte_end":20050,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20055,"byte_end":20062,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20759,"byte_end":20762,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"get","qualname":"<SharedCell<T>>::get","value":"pub fn get(&Self) -> Shared<T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the contained [`Shared<T>`], incrementing its reference\n count in the process.","sig":null,"attributes":[{"value":"/ Gets a copy of the contained [`Shared<T>`], incrementing its reference","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20314,"byte_end":20388,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ count in the process.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20393,"byte_end":20418,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20423,"byte_end":20426,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20431,"byte_end":20445,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20450,"byte_end":20457,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared, SharedCell};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20462,"byte_end":20512,"line_start":48,"line_end":48,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20517,"byte_end":20520,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20525,"byte_end":20562,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ let x = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20567,"byte_end":20615,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ let cell = SharedCell::new(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20620,"byte_end":20654,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20659,"byte_end":20662,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let y = cell.get();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20667,"byte_end":20690,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20695,"byte_end":20702,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20707,"byte_end":20710,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`Shared<T>`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20715,"byte_end":20747,"line_start":57,"line_end":57,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21561,"byte_end":21564,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"set","qualname":"<SharedCell<T>>::set","value":"pub fn set(&Self, Shared<T>)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the contained [`Shared<T>`], decrementing its reference count\n in the process.","sig":null,"attributes":[{"value":"/ Replaces the contained [`Shared<T>`], decrementing its reference count","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21076,"byte_end":21150,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ in the process.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21155,"byte_end":21174,"line_start":69,"line_end":69,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21179,"byte_end":21182,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21187,"byte_end":21201,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21206,"byte_end":21213,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared, SharedCell};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21218,"byte_end":21268,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21273,"byte_end":21276,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21281,"byte_end":21318,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/ let x = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21323,"byte_end":21371,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ let cell = SharedCell::new(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21376,"byte_end":21410,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21415,"byte_end":21418,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let y = Shared::new(&collector.handle(), 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21423,"byte_end":21471,"line_start":79,"line_end":79,"column_start":5,"column_end":53}},{"value":"/ cell.set(y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21476,"byte_end":21492,"line_start":80,"line_end":80,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21497,"byte_end":21504,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21509,"byte_end":21512,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Shared<T>`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21517,"byte_end":21549,"line_start":83,"line_end":83,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22127,"byte_end":22134,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"replace","qualname":"<SharedCell<T>>::replace","value":"pub fn replace(&Self, Shared<T>) -> Shared<T>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the contained [`Shared<T>`] and returns it.","sig":null,"attributes":[{"value":"/ Replaces the contained [`Shared<T>`] and returns it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21672,"byte_end":21728,"line_start":89,"line_end":89,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21733,"byte_end":21736,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21741,"byte_end":21755,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21760,"byte_end":21767,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared, SharedCell};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21772,"byte_end":21822,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21827,"byte_end":21830,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21835,"byte_end":21872,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/ let x = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21877,"byte_end":21925,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ let cell = SharedCell::new(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21930,"byte_end":21964,"line_start":97,"line_end":97,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21969,"byte_end":21972,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let y = Shared::new(&collector.handle(), 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":21977,"byte_end":22025,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ let x = cell.replace(y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22030,"byte_end":22058,"line_start":100,"line_end":100,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22063,"byte_end":22070,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22075,"byte_end":22078,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`Shared<T>`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22083,"byte_end":22115,"line_start":103,"line_end":103,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22987,"byte_end":22997,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SharedCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Shared<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `SharedCell` and returns the contained [`Shared<T>`]. This\n is safe because we are guaranteed to be the only holder of the\n `SharedCell`.","sig":null,"attributes":[{"value":"/ Consumes the `SharedCell` and returns the contained [`Shared<T>`]. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22471,"byte_end":22546,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ is safe because we are guaranteed to be the only holder of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22551,"byte_end":22617,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ `SharedCell`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22622,"byte_end":22639,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22644,"byte_end":22647,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22652,"byte_end":22666,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22671,"byte_end":22678,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use basedrop::{Collector, Shared, SharedCell};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22683,"byte_end":22733,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22738,"byte_end":22741,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let collector = Collector::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22746,"byte_end":22783,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/ let x = Shared::new(&collector.handle(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22788,"byte_end":22836,"line_start":123,"line_end":123,"column_start":5,"column_end":53}},{"value":"/ let cell = SharedCell::new(x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22841,"byte_end":22875,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22880,"byte_end":22883,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let x = cell.into_inner();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22888,"byte_end":22918,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22923,"byte_end":22930,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22935,"byte_end":22938,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ [`Shared<T>`]: crate::Shared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":22943,"byte_end":22975,"line_start":129,"line_end":129,"column_start":5,"column_end":37}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1903,"byte_end":1907,"line_start":40,"line_end":40,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2796,"byte_end":2800,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5165,"byte_end":5171,"line_start":133,"line_end":133,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5196,"byte_end":5202,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5222,"byte_end":5228,"line_start":136,"line_end":136,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5428,"byte_end":5434,"line_start":146,"line_end":146,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6251,"byte_end":6260,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6270,"byte_end":6279,"line_start":178,"line_end":178,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13606,"byte_end":13611,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13648,"byte_end":13653,"line_start":22,"line_end":22,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13685,"byte_end":13690,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14178,"byte_end":14183,"line_start":42,"line_end":42,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14362,"byte_end":14367,"line_start":49,"line_end":49,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14508,"byte_end":14513,"line_start":57,"line_end":57,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14644,"byte_end":14649,"line_start":63,"line_end":63,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15602,"byte_end":15608,"line_start":28,"line_end":28,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15652,"byte_end":15658,"line_start":29,"line_end":29,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15690,"byte_end":15696,"line_start":31,"line_end":31,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16284,"byte_end":16290,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17145,"byte_end":17151,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17374,"byte_end":17380,"line_start":93,"line_end":93,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17522,"byte_end":17528,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19637,"byte_end":19647,"line_start":19,"line_end":19,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19691,"byte_end":19701,"line_start":20,"line_end":20,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19733,"byte_end":19743,"line_start":22,"line_end":22,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20294,"byte_end":20304,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":23309,"byte_end":23319,"line_start":140,"line_end":140,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":1903,"byte_end":1907,"line_start":40,"line_end":40,"column_start":25,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":2796,"byte_end":2800,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5165,"byte_end":5171,"line_start":133,"line_end":133,"column_start":22,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5196,"byte_end":5202,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5222,"byte_end":5228,"line_start":136,"line_end":136,"column_start":16,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":5428,"byte_end":5434,"line_start":146,"line_end":146,"column_start":15,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6251,"byte_end":6260,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/collector.rs","byte_start":6270,"byte_end":6279,"line_start":178,"line_end":178,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13606,"byte_end":13611,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13648,"byte_end":13653,"line_start":22,"line_end":22,"column_start":31,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":13685,"byte_end":13690,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14178,"byte_end":14183,"line_start":42,"line_end":42,"column_start":43,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14362,"byte_end":14367,"line_start":49,"line_end":49,"column_start":19,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14508,"byte_end":14513,"line_start":57,"line_end":57,"column_start":22,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/owned.rs","byte_start":14644,"byte_end":14649,"line_start":63,"line_end":63,"column_start":18,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15602,"byte_end":15608,"line_start":28,"line_end":28,"column_start":38,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15652,"byte_end":15658,"line_start":29,"line_end":29,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":15690,"byte_end":15696,"line_start":31,"line_end":31,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":16284,"byte_end":16290,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17145,"byte_end":17151,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17374,"byte_end":17380,"line_start":93,"line_end":93,"column_start":19,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared.rs","byte_start":17522,"byte_end":17528,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19637,"byte_end":19647,"line_start":19,"line_end":19,"column_start":38,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19691,"byte_end":19701,"line_start":20,"line_end":20,"column_start":38,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":19733,"byte_end":19743,"line_start":22,"line_end":22,"column_start":25,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":20294,"byte_end":20304,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/basedrop-0.1.1/src/shared_cell.rs","byte_start":23309,"byte_end":23319,"line_start":140,"line_end":140,"column_start":18,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":3071}}]}